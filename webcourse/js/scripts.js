function getRect(e){var t,i={width:parseInt(jQuery(e.id).css("width"),10),height:parseInt(jQuery(e.id).css("height"),10),left:jQuery(e.id).css("left"),top:jQuery(e.id).css("top")};for(t in i)"auto"===i[t]&&(i[t]=0);return i}function readlock(e){if(e){var t,i=e.split("_");i=i.splice(1),i=i[0];var n=i.substr(0,1),r=i.substr(1,1);return"f"===r?t=!0:"u"===r&&(t=!1),[n,t]}}function islockLabel(e){var t=e?e.substr(0,e.indexOf("_")):void 0;return function(e){return"lock"===e?!0:!1}(t)}function getlockIndex(e){var t=e.split("_");return t=t.splice(1),t=t[0],t=t.substr(0,1)}function checklocks(e){var t,i,n,r,o,s,a=e.timeline.time(),l=e.timeline.getLabelsArray();for(t=0;t<l.length;t++)if(islockLabel(l[t].name))if(r=readlock(l[t].name),n=r[0],o=r[1],locked_status=e.locks[n].item.locked,o)a<l[t].time?e.locks[n].from.reached=!1:a>=l[t].time&&(e.locks[n].from.reached=!0),e.locks[n].from.reached===!0?e.locks[n].item.lock():e.locks[n].item.unlock();else{for(i=0;i<e.locks.length;i++)getlockIndex(e.locks[i].from.label)===n&&(s=e.locks[i].from);a<l[t].time?e.locks[n].until.reached=!1:a>=l[t].time&&(e.locks[n].until.reached=!0),e.locks[n].until.reached===!0?e.locks[n].item.unlock():e.locks[n].until.reached===!1&&s.reached&&e.locks[n].item.lock()}e.p_time=a}function useLocalStorage(){return Modernizr.localstorage?!0:!1}function removePrefix(e){var t=[];switch(e[0]){case"#":t[1]=e.substr(1),t[0]=e[0];break;case".":t[1]=e.substr(1),t[0]=e[0];break;default:t[1]=e,t[0]=null}return t}function removeUndefined(e){var t,i={};for(t in e)void 0!==e[t].nodeName&&(i[t]=e[t]);return i}function getNodes(e){var t=[];for(i in jQuery(e))isNaN(parseInt(i,10))||t.push(jQuery(e)[i]);return 1===t.length&&(t=t[0]),t}function isEmpty(e){var t;if(null===e)return!0;if(e.length>0)return!1;if(0===e.length)return!0;for(t in e)if(hasOwnProperty.call(e,t))return!1;return!0}function Crate(e,t,i){var n,r,o=removePrefix(e);return t.length&&t.length>1?console.log("Please use only one item"):(t.length<=1?console.log("pass 1 item, not an array"):n=jQuery(t.id).clone(),n.empty(),n.attr("id",o[1]),n.clonePosition(t.id),jQuery(t.id).clearPosition(),jQuery(t.id).wrap(n)),void 0!==i?(i.placeHere&&delete i.placeHere,i.type?(r=i.type,delete i.type):r=Item):r=Item,new r(e,i)}function GSAP_method(e,t,i,n,r){var o,s,a,l,u=[];if(animator="yoyo"===r?"fromTo":r,s=void 0!==n.sync?isNaN(n.sync)?e.getLabelTime(n.sync):n.sync:void 0,a=void 0!==n.repeat?n.repeat:void 0,l=n.offset,"[object Array]"===Object.prototype.toString.call(t))for(u[0]=[],o=0;o<t.length;o++)u[0][o]=t[o].id?t[o].id:t[o];else u[0]=t.id?t.id:t;if(u[1]=i,n.options2?(u[2]=n.options,void 0!==u[2]&&n.options2&&(u[2].immediateRender="yoyo"===r&&void 0===n.options2.immediateRender?!1:n.options2.immediateRender),u[3]=n.options2,void 0!==u[3]&&(u[3].ease=n.options2.ease?n.options2.ease:n.options.ease),l&&(u[4]=l)):(u[2]=n.options,void 0!==u[2]&&(u[2].immediateRender="yoyo"===r&&void 0===n.options.immediateRender?!1:n.options.immediateRender),l&&(u[3]=l)),e.add(TweenMax[animator].apply(e,u),s),"yoyo"===r&&(void 0===s&&(s=i),e.add(TweenMax[animator].apply(e,[u[0],u[1],u[3],u[2]]),s)),void 0!==a)for(o=0;a-1>o;o++)e.add(TweenMax[animator].apply(e,u)),"yoyo"===r&&e.add(TweenMax[animator].apply(e,[u[0],u[1],u[3],u[2]]))}function createBlock(e,t,i,n,r){var o=removeDir(t);o=removeExt(o),o=o.substring(1),o=e.concat(o),void 0===i[n]&&(i[n]={});var s=void 0===r?!0:r;useLocalStorage&&(course=_root.courseTitle?_root.courseTitle:"untitled_web_course",localStorage[course+"-"+o]=s),i[n][o]=s}function updateModuleList(e,t){for(j=0;j<t.list.length;j++)if(void 0!==t.list[j].item.checkbox)if(j!==e)t.list[j].item.active=!1,jQuery(t.list[j].item.checkbox).removeClass("active");else{var i=toArray(t.storage.scenes.completed);i[e]===!0&&jQuery(t.list[e].item.checkbox).active()}}function checkStates(e,t){var n=0;for(i=0;i<e.length;i++)void 0!==e[i][t]&&e[i][t]!==!1&&n++;return n===e.length?!0:!1}function checkState(e,t){return void 0!==e[t]&&e[t]!==!1?!0:!1}function setStates(e,t,i){var n,r;if(e.length)for(n=0,r=e.length;r>n;n++)e[n][t]=i;else for(n in e)e[n][t]=i}function removeExt(e){return e.split(".")[0]}function removeDir(e){return lastIndex=e.lastIndexOf("/"),e.slice(lastIndex+1)}function getExt(e){return e.split(".")[1]}function getDir(e){return lastIndex=e.lastIndexOf("/"),e.substring(0,lastIndex+1)}function capitalize(e){var t=e.substring(0,1)[0].toUpperCase().concat(e.substring(1));return t}function randomNumber(){return Math.floor(1e5*Math.random(1))}function toArray(e){var t,i=[];for(t in e)e.propertyIsEnumerable(t)&&i.push(e[t]);return i}function arrayCompare(e,t){var i,n=[];if(t.length===e.length){for(i=0;i<e.length;i++)n.push(e[i]===t[i]?!0:!1);return n}console.log("compare() :: arrays must have equal lengths")}function arrayReverse(e){var t,i,n=[],r=e.length;for(t=0;r>t;t++)i=e.pop(),n.push(i);return n}function arrayRandomize(e){var t,i,n,r,o=e.length;for(t=0;o>t;t++)i=e.pop(),n=Math.floor(Math.random(e.length)*e.length),r=e[n],e.splice(n,1,i),e.push(r);return e}function includeID(e,t,i){return function(){var n=Array.prototype.slice.call(arguments);return n.unshift(t),e.apply(this,n),i}}function GSAPEvent(e,t,i,n,r,o){var s,a,l,u=new Scene({paused:!0}),c=t.buttons;if(void 0!==o)if(o.length>0){for(l=[n[r]],a=0;a<o.length;a++)l.push(o[a]);l.push(u),s=i[e].call(t,n[r],u,c)}else s=i[e].call(t,n[r],u,c);else s=i[e].call(t,n[r],u,c);return n[r][e]=u,n[r][e].func=void 0!==s?s:function(){},function(){t.buttons[t.currentButton][e].play(),t.buttons[t.currentButton][e].func()}}function or(e,t){return t?t:e}function ifNot(e,t,i){return e===t?e:i}function isArray(e){return"object"==typeof e&&void 0!==e.length?!0:!1}function unNull(e){return void 0===e||null===e?!0:!1}function parent(e,t){return void 0!==e&&void 0!==e[t+""]?!0:!1}function forAll(e,t){var i,n;if(e.length>0)for(i=0,n<e.length;n>i;i++)e[t]()}function cbug(e){jQuery(".debug-modal").append(e+"<br />")}function SceneController(e){function t(){var e,t;if(void 0!==o.controller&&(void 0!==o.controller.trigger_next&&o.controller.trigger_next.disable(),void 0!==o.controller.trigger_back&&o.controller.trigger_back.disable(),void 0!==o.controller.doneTrigger&&o.controller.doneTrigger.disable(),o.controller.list.length>0))for(e=0,t=o.controller.list.length;t>e;e++)o.controller.list[e].item.disable();void 0!==o.playTrigger&&o.playTrigger.disable(),void 0!==o.toggleTrigger&&o.toggleTrigger.disable(),void 0!==o.audioTrigger&&o.audioTrigger.disable()}function i(){var e,t;if(void 0!==o.controller&&(void 0!==o.controller.trigger_next&&o.controller.trigger_next.enable(),void 0!==o.controller.trigger_back&&o.controller.trigger_back.enable(),void 0!==o.controller.doneTrigger&&o.controller.doneTrigger.enable(),o.controller.list.length>0))for(e=0,t=o.controller.list.length;t>e;e++)o.controller.list[e].item.enable();void 0!==o.playTrigger&&o.playTrigger.enable(),void 0!==o.toggleTrigger&&o.toggleTrigger.enable(),void 0!==o.audioTrigger&&o.audioTrigger.enable()}var n,r,o;return void 0!==e&&(n=void 0!==e.restrict?!0:!1,r=void 0!==e.scene?e.scene:void 0,audio=e.audioController?e.audioController:void 0),o={_loading:!1,scene:r,controller:void 0,progressBar:void 0,toggleTrigger:void 0,playTrigger:void 0,audioTrigger:void 0,progress:0,totalProgress:0,time:0,change:!0,userAction:!1,completed:!1,never_completed:!0,bounds_maxed:!1,interval:void 0,onLoad:function(){},onReady:function(){},audioController:audio,audioFile:void 0},o.kill=function(){this.scene.kill(arguments),this.change=!0,void 0!==o.audioController&&o.audioController.stopAll()},o.play=function(e){void 0!==o.audioController?(o.audioController.unmute(o.controller.audioID),o.audioController.resume(o.controller.audioID),o.stopped=!1,o.scene.play(e),o.change=!0):(o.stopped=!1,o.scene.play(e),o.change=!0)},o.pause=function(){o.scene.progress()>0&&o.scene.progress()<1&&(this.stopped=!0,this.scene.pause(),this.change=!0)},o.restart=function(e){this.scene.restart(),this.change=!0,void 0!==e?e===!0?this.play():e===!1?this.pause():this.play(e):this.play()},o.gotoAndPlay=function(e){this.scene.timeline.seek(e),this.scene.play(),this.change=!0},o.gotoAndStop=function(e){this.scene.timeline.seek(e),this.scene.pause(),this.change=!0},o.duration=function(){return o.scene.duration()},o.bind=function(e){var t;this.progressBar=void 0!==e.scrub?e.scrub:void 0;for(t in e)switch(t){case"audio":this.audioTrigger="object"!=typeof e[t]?new Button(e[t]):e[t];break;case"toggle":this.toggleTrigger="object"!=typeof e[t]?new Button(e[t]):e[t];break;case"restart":this.restartTrigger="object"!=typeof e[t]?new Button(e[t]):e[t];break;case"play":this.playTrigger="object"!=typeof e[t]?new Button(e[t]):e[t]}void 0!==this.toggleTrigger&&(this.toggleTrigger.element.onmousedown=function(e,t,i){return function(){return t.active?(i.pause(),t.active=!1):(i.play(),t.active=!0),e.apply(this,arguments)}}(this.toggleTrigger.element.onmousedown,this.toggleTrigger,this)),void 0!==this.playTrigger&&(this.playTrigger.element.onmousedown=function(e,t,i){return function(){return i.play(),t.active=!0,e.apply(this,arguments)}}(this.playTrigger.element.onmousedown,this.playTrigger,this)),console.log(o.playTrigger),void 0!==this.restartTrigger&&(this.restartTrigger.element.onmousedown=function(e,t,i){return function(){return 1===i.progress&&i.restart(!0),e.apply(this,arguments)}}(this.restartTrigger.element.onmousedown,this.restartTrigger,this)),void 0!==this.audioTrigger&&(this.audioTrigger.element.onmousedown=function(e,t){return function(){o.controller.audioController.muted?(o.controller.audioController.unmuteAll(),jQuery(t.element).find(".sound-on").active(),jQuery(t.element).find(".sound-off").inactive(),t.active=!0):(o.controller.audioController.muteAll(),jQuery(t.element).find(".sound-on").inactive(),jQuery(t.element).find(".sound-off").active(),t.active=!1),e.call(t),console.log(o.controller.audioController.muted)}}(this.audioTrigger.element.onmousedown,this.audioTrigger))},o.refresh=function(){o.completed=!1,o.progress=0,o.totalProgress=0,o.never_completed=!0,o.scrubber_pos=0,o.bounds_reached={top:0,left:0,width:0,height:0}},o.init=function(e,t){var i,r,s,a;void 0!==this.progressBar&&(r=o.progressBar.scrubber.style.width,s=o.progressBar.bar.style.width,i=s-r,o.refresh()),this.interval=setInterval(function(){if(void 0!==o.scene.timeline&&o.scene.timeline.duration()>0){if(o.progressBar&&(o._loading===!1?(o.progressBar.scrubber.show(),o.progressBar.fill.show(),void 0!==o.toggleTrigger&&o.toggleTrigger.enable(),void 0!==o.playTrigger&&o.playTrigger.enable()):(o.progressBar.scrubber.hide(),o.progressBar.fill.hide(),void 0!==o.toggleTrigger&&o.toggleTrigger.disable(),void 0!==o.playTrigger&&o.playTrigger.disable())),_ready&&!o._loading){if(o.progress=o.scene.timeline.progress(),void 0!==o.progressBar&&(a=o.progressBar.scrubber.dragEngine.isPressed),void 0!==o.audioController)if(o.scene.timeline._paused&&o.audioController.pause(o.controller.audioID),a)o.audioController.pause(o.controller.audioID),o.audioController.waiting=!0;else if(o.audioController.waiting===!0){var e=o.audioController.getRelative(o.progress);o.audioController.setPosition(o.controller.audioID,e),o.audioController.waiting=!1,o.audioController.resume(o.controller.audioID)}o.progress<1&&(checklocks(o.scene),o.completed=!1),void 0!==o.progressBar&&o.progress<1&&(o.scrubber_pos=o.scene.timeline.totalProgress()*i,n?o.never_completed?(a?(o.progressBar.scrubber.dragEngine.maxX>o.progressBar.scrubber.dragEngine.x&&o.progressBar.scrubber.dragEngine.applyBounds(o.reached_bounds),o.progressBar.scrubber.dragEngine.update()):(o.scene.timeline._paused||o.progress>o.totalProgress&&(o.reached_bounds={top:o.progressBar.scrubber.bounds.top,left:o.progressBar.scrubber.bounds.left,width:o.scrubber_pos+r,height:o.progressBar.scrubber.bounds.height},o.totalProgress=o.progress),TweenMax.set(o.progressBar.scrubber.id,{x:o.scrubber_pos})),o.scene.timeline._paused||void 0===o.reached_bounds||TweenMax.set(o.progressBar.fill.id,{width:o.reached_bounds.width})):(o.progressBar.scrubber.dragEngine.applyBounds(o.progressBar.scrubber.bounds),TweenMax.set(o.progressBar.fill.id,{width:s}),o.progressBar.scrubber.dragEngine.update(),o.bounds_maxed=!0,TweenMax.set(o.progressBar.scrubber.id,{x:o.scrubber_pos})):(TweenMax.set(o.progressBar.scrubber.id,{x:o.scrubber_pos}),TweenMax.set(o.progressBar.fill.id,{width:o.scrubber_pos+r}))),o.change&&(o.change=!1,1===o.progress?void 0!==o.toggleTrigger&&(jQuery(o.toggleTrigger.element).find(".restart").active(),jQuery(o.toggleTrigger.element).find(".play").inactive(),jQuery(o.toggleTrigger.element).find(".pause").inactive()):void 0!==o.toggleTrigger&&(o.toggleTrigger.active?(jQuery(o.toggleTrigger.element).find(".restart").inactive(),jQuery(o.toggleTrigger.element).find(".play").inactive(),jQuery(o.toggleTrigger.element).find(".pause").active()):(jQuery(o.toggleTrigger.element).find(".restart").inactive(),jQuery(o.toggleTrigger.element).find(".play").active(),jQuery(o.toggleTrigger.element).find(".pause").inactive()))),1!==o.progress||o.completed||(console.log("-----SCENE COMPLETE-----"),o.completed=!0,o.never_completed=!1,void 0!==o.progressBar&&(TweenMax.set(o.progressBar.scrubber.id,{x:i}),TweenMax.set(o.progressBar.fill.id,{width:s})),void 0!==o.toggleTrigger&&(jQuery(o.toggleTrigger.element).find(".play").inactive(),jQuery(o.toggleTrigger.element).find(".pause").inactive(),jQuery(o.toggleTrigger.element).find(".restart").active()))}}else void 0!==o.progressBar&&(o.progressBar.scrubber.hide(),o.progressBar.fill.hide(),void 0!==o.toggleTrigger&&o.toggleTrigger.disable(),void 0!==o.playTrigger&&o.playTrigger.disable());_ready&&o.controller&&o.controller.watch()},10),e?(void 0!==this.progressBar&&(this.progressBar.stopped=this.stopped=!0),void 0!==this.toggleTrigger&&(this.toggleTrigger.active=!0),void 0!==this.playTrigger&&(this.playTrigger.active=!0),this.pause()):(void 0!==this.progressBar&&(this.progressBar.stopped=this.stopped=!1),void 0!==this.toggleTrigger&&(this.toggleTrigger.active=!1),void 0!==this.playTrigger&&(this.playrigger.active=!0),this.play()),t&&t()},o.swap=function(e,t){o.kill(),o.scene=e,t?o.scene.pause():o.scene.play()},o.load=function(e,n,s,a){function l(){console.log("> _onReady"),i(),o._loading=!1}function u(){console.log("> _ifReady"),_ready&&(TweenMax.fromTo(e,.3,{opacity:0},{opacity:1,onComplete:l}),parent(a,"onReady")&&a.onReady.call(o,"onReady"),clearInterval(o.waitForReady))}function c(){console.log("> _onSuccess"),o.waitForReady=setInterval(u,500),o.scene=o.controller.root[s],a&&a.onLoaded&&a.onLoaded.call(o,"onLoaded")}function h(){console.log("> _onImagesLoaded"),o.controller&&(o.audioFile=o.controller.audioPath+removeDir(removeExt(n))+".mp3",o.controller.audioController.getSoundById(o.controller.audioID)&&(o.controller.audioController.stopAll(),o.controller.audioController.destroySound(o.controller.audioID)),o.controller.audioID=removeDir(removeExt(o.audioFile)),o.controller.audioController.createSound({id:o.controller.audioID,url:o.audioFile,autoLoad:!0,autoPlay:!1,volume:100}),o.controller.audioController.load(o.controller.audioID,{onload:function(){this.mute(),this.play()},onplay:function(){c(),this.pause()}}))}function d(){jQuery(e).empty(),jQuery(e).load(n,function(){console.log("> _onLoad"),f=jQuery(this).find("img"),f.length>0?jQuery(f).on("load",function(){h()}):h()})}var f;return o._loading===!1&&(o._loading=!0,t(),_ready=!1,void 0!==r&&o.kill(),parent(a,"onLoad")&&a.onLoad.call(o,"onLoad"),TweenMax.to(e,.4,{opacity:0,onComplete:d})),this},o}function ModuleController(e,t,i){function n(e){return void 0===e?void 0:"soundManager"===e.type?(soundManager.relativePosition=function(){return this.position/this.duration*100},soundManager.getRelative=function(e){return this.getSoundById(u.audioID).duration*e},soundManager.setup({url:e.fallbackURL})):void 0}var r,o,s,a=0,l=0,u={current_module:0,scenes:void 0,current_scene:0,progress:void 0,moduleTitle:{id:void 0},sceneTitle:{id:void 0},trigger_next:void 0,trigger_back:void 0,doneTrigger:void 0,storage:{scenes:{},modules:{}},list:[]};if(u.onLoad=function(){var e;if(void 0!==u.scenes&&void 0!==u.modules[u.current_module]&&TweenMax.fadeOut(u.sceneTitle.item.id,.5,function(){}),u.loader.play().show(),"undefined"==typeof _scene);else for(e in _scene)_scene[e]&&delete _scene[e];u.sceneController.refresh()},u.onReady=function(){if(u.storage.scenes.completed){var e=removeDir(u.scenes[u.current_scene].url);e=removeExt(e),u.storage.scenes.completed[e]&&(u.sceneController.never_completed=!1)}0!==u.scenes.length&&void 0!==u.modules[u.current_module]&&(void 0!==u.moduleTitle.id&&(u.moduleTitle.item=new Text(u.moduleTitle.id,{value:u.modules[u.current_module].title})),void 0!==u.sceneTitle.id&&(u.sceneTitle.item=new Text(u.sceneTitle.id,{value:u.scenes[u.current_scene].title})),u.loader.kill().hide(),TweenMax.fadeIn(u.sceneTitle.item.id,.5)),u.autoPlay===!0&&u.sceneController.play(),s=u.current_scene>0?"active":"inactive",jQuery(u.trigger_back.id).addClass(s),jQuery(u.trigger_complete.element).inactive()},u.completeScene=function(){u.sceneController.never_completed=!1,u.sceneController.completed=!0,u.sceneController.userAction=!1},u.loadModule=function(e){l=0,u.completed=!1,void 0===u.audioPath&&(u.audioPath=e.audioPath),void 0!==u.audioPath&&u.audioPath!==e.audioPath&&(u.audioPath=e.audioPath),u.sceneController.load(u.stage,e.url,"_scene",{onLoad:function(){u.onLoad(),TweenMax.fadeOut(u.moduleTitle.item.id,.5),TweenMax.fadeOut(u.sceneTitle.item.id,.5)},onLoaded:function(){u.scenes=[],TweenMax.fadeIn(u.moduleTitle.item.id,.5);for(l in u.modules[u.current_module])"s"===String(l).substring(0,1)&&u.scenes.push(u.modules[u.current_module][l]);u.sceneController.init(!0),u.audioPath=e.audioPath,u.onReady()}})},u.nextModule=function(){!u._loading&&u.current_module>=0&&u.current_module<u.modules.length-1&&(jQuery(u.trigger_complete.element).inactive(),createBlock("s",u.scenes[u.current_scene].url,u.storage.scenes,"completed"),createBlock("m",u.modules[u.current_module].url,u.storage.modules,"completed"),jQuery(u.list[u.current_module].item.checkbox).complete(),u.current_module+=1,u.current_scene=0,updateModuleList(u.current_module,u),u.loadModule(u.modules[u.current_module]))},u.nextScene=function(){!u._loading&&u.current_scene<u.scenes.length-1&&(u.scenes[u.current_scene].progress=u.sceneController.progress,createBlock("s",u.scenes[u.current_scene].url,u.storage.scenes,"completed"),u.current_scene+=1,u.sceneController.load(u.stage,u.scenes[u.current_scene].url,"_scene",{onLoad:u.onLoad,onReady:u.onReady}))},u.previousScene=function(){!u._loading&&u.current_scene>0&&(u.scenes[u.current_scene].progress=u.sceneController.progress,1===u.scenes[u.current_scene].progress&&createBlock("s",u.scenes[u.current_scene].url,u.storage.scenes,"completed"),u.current_scene-=1,u.sceneController.load(u.stage,u.scenes[u.current_scene].url,"_scene",{onLoad:u.onLoad,onReady:u.onReady}))},u.watch=function(){var e;u.current_scene<u.scenes.length-1?(e=checkState(u.scenes[u.current_scene],"completed"),e&&u.sceneController.userAction===!1?u.trigger_next.active||(u.trigger_next.active=!0,jQuery(u.trigger_next.element).active()):u.trigger_next.active&&(u.trigger_next.active=!1,jQuery(u.trigger_next.element).inactive())):u.trigger_next.active&&(u.trigger_next.active=!1,jQuery(u.trigger_next.element).inactive()),u.current_scene>0?u.trigger_back.active||(u.trigger_back.active=!0,jQuery(u.trigger_back.element).active()):u.trigger_back.active&&(u.trigger_back.active=!1,jQuery(u.trigger_back.element).inactive()),u.sceneController.never_completed===!1&&u.sceneController.completed&&!u.sceneController.userAction&&(e=checkState(u.scenes[u.current_scene],"completed"),e||(u.scenes[u.current_scene].completed=!0)),e=checkStates(u.scenes,"completed"),e&&(u.completed=!0,jQuery(u.trigger_complete.element).active())},void 0!==t)if(void 0!==t.audioController&&(u.audioController=n(t.audioController),u.audioController.waiting=!1,t.soundEvents&&t.soundEvents.select&&u.audioController.createSound({id:"global_select",url:t.soundEvents.select,autoLoad:!0,autoPlay:!1,volume:100})),u.modules=or(void 0,t.modules),u.root=or(void 0,t.root),void 0===u.modules||void 0===u.root)console.log("You must include a course object and an array of modules - {modules:[], course:object}");else for(u.autoPlay=void 0!==t.autoPlay?t.autoPlay:!1,u.onLoad=or(u.onLoad,t.onLoad),u.onReady=or(u.onReady,t.onReady),u.stage=or("#stage",t.stage),u.moduleTitle.id=or(void 0,t.moduleTitle),u.sceneTitle.id=or(void 0,t.sceneTitle),u.moduleTitle.item=or(void 0,new Text(t.moduleTitle)),u.sceneTitle.item=or(void 0,new Text(t.sceneTitle)),void 0!==t.back&&(u.trigger_back="object"!=typeof t.back?new Button(t.back):t.back,u.trigger_back.bindOn({mousedown:function(){u.previousScene()}})),void 0!==t.next&&(u.trigger_next="object"!=typeof t.next?new Button(t.next):t.next,u.trigger_next.bindOn({mousedown:function(){u.nextScene()}})),void 0!==t.complete&&(u.trigger_complete="object"!=typeof t.complete?new Button(t.complete):t.complete,u.trigger_complete.bindOn({mousedown:function(){u.nextModule()}})),void 0!==t.loader&&(u.loader={},void 0!==t.loader.wrapper&&"string"==typeof t.loader.wrapper&&(u.loader=new Item(t.loader.wrapper,{paused:!0})),void 0!==t.loader.spinner&&"string"==typeof t.loader.spinner&&(u.loader.spinner=new Item(t.loader.spinner,{paused:!0}),u.loader.spinner.to(1,{rotation:"+=360",ease:"linear",onComplete:u.loader.spinner.restart}),u.loader.addAffectee("spinner",u.loader.spinner))),o=u.modules,u.modules=[],u.sceneController=new SceneController({restrict:!0,audioController:u.audioController}),u.sceneController.controller=u,a=0;a<o.length;a++)r=function(e){var n,r;jQuery.getJSON(o[e]+"/scenes.json",function(s){function a(i){u.modules[e];u.current_scene=0,u.current_module=e,updateModuleList(i,u),u.loadModule(u.modules[u.current_module]),void 0!==t.welcomeMessage&&TweenMax.to(t.welcomeMessage,.4,{y:300,opacity:0,ease:"Back.easeIn",onComplete:function(){TweenMax.set(t.welcomeMessage,{css:{visibility:"hidden"}})}})}u.modules[e]={};for(n in s)"module"===n?(u.modules[e].title=s[n].title,u.modules[e].url=s[n].url,u.modules[e].audioPath=s[n].audio,r=u.modules[e].link=new Button("#"+o[e],{checkbox:".checkbox"}),u.list.push({id:o[e],item:r}),u.list[l].item.completed=!1,u.list[l].item.active=!1,u.list[l].item.index=l,function(e){u.list[l].item.bindOn({mousedown:function(){u.audioController&&u.audioController.getSoundById("global_select")&&u.audioController.getSoundById("global_select").play(),a(e)}})}(l),l+=1):(u.modules[e][n]={},u.modules[e][n].url=s[n].url,u.modules[e][n].title=s[n].title);i&&e==o.length-1&&i()})}(a);else console.log("you must have scenes and a course passed in the options, otherwise this will not do anything");return u}function getChar(e){return null===e.which?String.fromCharCode(e.keyCode):0!==e.which&&0!==e.charCode?String.fromCharCode(e.which):null}function GSAPObject(e){function t(e,t,r,s,a,l){var u,c;if(l=l?l:void 0,void 0!==o.wrapper&&(void 0!==o.wrapper.id&&o.wrapper.id!==e&&(e="string"!=typeof e?e:o.wrapper.id+" "+e),o.wrapper.id===e&&(e=e)),console.log("id is "+e),s&&(c=void 0!==s.sync?s.sync:void 0,u=void 0!==s.repeat?s.repeat:void 0,l=void 0!==s.offset?s.offset:void 0),r.length<2){for(i in o.defaults)r[0][i]=r[0][i]?r[0][i]:o.defaults[i];GSAP_method(o.timeline,e,t,{options:r[0],offset:l,sync:c,repeat:u},a)}else{for(i in o.defaults)r[0][i]=r[i]?r[i]:o.defaults[i];GSAP_method(o.timeline,e,t,{options:r[0],options2:r[1],offset:l,sync:c,repeat:u},a)}if(0===o._elements.length)o._elements.push(e);else for(i=0,n<o._elements.length;n>i;i++)o._elements[i]!==e&&o._elements.push(e)}var i,n,r,o=new GSAP_Router(!0);return o.timeline=new TimelineMax({defaultOverwrite:"auto"}),o._elements=[],o.defaults={},o.affectees={length:0},o.atEnd=!1,o.locks=[],o.type="GSAPObject",e&&(r=void 0===e.affectees?!0:e.affectees,o.paused=void 0!==e.paused?e.paused:!0,o.paused&&o.timeline.pause(),o.defaults.ease=e.ease?e.ease:"Sine.easeOut",o.defaults.transformOrigin=e.transformOrigin?e.transformOrigin:"50% 50%"),r!==!1&&(o.affect=function(e,t){void 0===t&&(t=""+o.affectees.length),o.addAffectee(t,e)},o.addAffectee=function(e,t){o.affectees[e]=t.timeline,o.affectees.length+=1},o.removeAffectee=function(e){delete o.affectees[e],o.affectees.length-=1}),o.jig=function(e,t,n,r){var s,a,l;void 0!==o.wrapper?(void 0!==o.wrapper.id&&o.wrapper.id!==e&&(l=o.wrapper.id+" "+e),o.wrapper.id===e&&(l=e)):l=e,r&&(a=or(void 0,r.sync),s=or(void 0,r.repeat));var u=[];for(i in n)u[i]=void 0===n[i]?o.defaults[i]:n[i];for(i in o.defaults)void 0===u[i]&&(u[i]=o.defaults[i]);return void 0!==a&&isNaN(a)&&(a=this.timeline.getLabelTime(a)),this.timeline.jig?this.timeline.jig.apply(this.timeline,[l,t,u,a,s]):console.log("You need to include a version of jig.js"),this},o.staggerJig=function(e,t,i,n){var r,s,a,l,u;if(n&&(a=or(void 0,n.sync),s=or(void 0,n.repeat),l=or(void 0,n.offset)),void 0!==a?isNaN(a)&&(a=this.timeline.getLabelTime(a)):a=0,"string"==typeof e)void 0!==o.wrapper?void 0!==o.wrapper.id&&(u=getNodes(o.wrapper.id+" "+e)):u=getNodes(e),"object"!=typeof u&&(u=[u]);else if(void 0!==o.wrapper){if(void 0!==o.wrapper.id)for(r=0;r<e.length;r++)u[r]=getNodes(o.wrapper.id+" "+e[r])}else u=e;if(this.timeline.jig)for(r=0;r<u.length;r++)this.timeline.jig.apply(this.timeline,[u[r],t,i,a,s]),a+=l;else console.log("You need to include a version of jig.js");return this},o.to=function(e,i,n,r){return t(e,i,[n],r,"to"),this},o.from=function(e,i,n,r){return t(e,i,[n],r,"from"),this},o.fromTo=function(e,i,n,r,o){return t(e,i,[n,r],o,"fromTo"),this},o.staggerTo=function(e,i,n,r){return t(e,i,[n],r,"staggerTo",.3),this},o.staggerFrom=function(e,i,n,r){return t(e,i,[n],r,"staggerFrom",.3),this},o.staggerFromTo=function(e,i,n,r,o){return t(e,i,[ops,r],o,"staggerFromTo",.3),this},o.yoyo=function(e,i,n,r,o){{var s,a,l,u,c,h=0,d={},f={};jQuery(e).parseStyles()}if(void 0!==r&&(a=void 0!==r.sync?h+=1:void 0,l=void 0!==r.repeat?h+=1:void 0,u=void 0!==r.offset?h+=1:void 0),h>0){c=r;for(s in n)d[s]="scale"!==s?0:1;f=n}else if(void 0===r){f=n;for(s in n)d[s]="scale"!==s?0:1;c={}}else d=n,f=r,c=void 0!==o?o:{};return t(e,i,[d,f],c,"yoyo"),this},o.addLabel=function(e,t){return t?this.timeline.add(e,t):this.timeline.add(e),this},o.at=function(e,t,i){return i&&this.timeline.add(i,e),this.timeline.addCallback(t,e),this},o.hideAll=function(){var e,t;for(e=0,t=o._elements.length;t>e;e++)TweenMax.set(o._elements[e],{css:{visibility:"hidden",opacity:"0"}});return this},o.showAll=function(){var e,t;for(e=0,t=o._elements.length;t>e;e++)TweenMax.set(o._elements[e],{css:{visibility:"visible",opacity:"1"}});return this},o.show=function(e){if(void 0===e&&"string"!=typeof e){var t,i;for(t=0,i=this._elements.length;i>t;t++)TweenMax.set(this._elements[t],{css:{visibility:"visible",opacity:"1","pointer-events":"inherit"}})}else TweenMax.set(e,{css:{visibility:"visible",opacity:"1","pointer-events":"inherit"}});return this},o.hide=function(e){if(void 0===e&&"string"!=typeof e){var t,i;for(t=0,i=this._elements.length;i>t;t++)TweenMax.set(this._elements[t],{css:{visibility:"hidden",opacity:"0","pointer-events":"none"}})}else TweenMax.set(e,{css:{visibility:"hidden",opacity:"0","pointer-events":"none"}});return this},o.endAt=function(e){var t=e/1e3;return this.timeline.addCallback(function(){o.atEnd=!0},t),this},o.loop=function(e){o.set("forever"===e||void 0===e?{repeat:-1}:{repeat:e})},o}function GSAP_Router(){var e={};return e.kill=function(t,i,n){this.timeline.kill();var r;if(void 0===n&&e.affectees.length>0)for(r in e.affectees)"length"!==r&&e.affectees[r].kill.apply(e.affectees[r],[t]);return e},e.play=function(t,i,n,r){function o(e){var n;if(void 0===r||r===!0&&e.affectees.length>0)for(n in e.affectees)"length"!==n&&(0==e.timeline.progress()&&(console.log(">> play affectee "+e.timeline.progress()),e.affectees[n].play.apply(e.affectees[n],[t,i])),e.timeline.progress()>0&&(console.log(">> restart affectee "+e.timeline.progress()),e.affectees[n].restart()))}return 1===this.timeline.progress()?(o(this),this.timeline.restart()):(o(this),this.timeline.play(t)),this.atEnd=!1,e},e.pause=function(t,i,n){this.timeline.pause();var r;if(void 0===n||n===!0&&e.affectees.length>0)for(r in e.affectees)"length"!==r&&e.affectees[r].pause.apply(e.affectees[r],[t,i]);return e},e.restart=function(t,i,n,r){function o(e){var t;if(void 0===r||r===!0&&e.affectees.length>0)for(t in e.affectees)"length"!==t&&(0===e.timeline.progress()&&e.affectees[t].play.apply(e.affectees[t]),e.timeline.progress()>0&&e.affectees[t].restart())}return o(this),this.timeline.restart(),this.atEnd=!1,e},e.set=function(t,i){return void 0===i.immediateRender&&(i.immediateRender=!1),void 0===i.immediateRender&&(i.immediateRender=!0),this.timeline.set(t,i),e},e.reverse=function(){return this.timeline.reverse(),e},e.gotoAndPlay=function(t){return this.timeline.resume(t),this.timeline.play(),this.atEnd=!1,e},e.gotoAndStop=function(t){return this.timeline.resume(t),this.timeline.pause(),this.atEnd=!1,e},e.clear=function(){return this.timeline.clear(),e},e}function Scene(e){var t=new GSAPObject(e);return t.stopped=!1,t.progress=function(){return t.timeline.totalProgress()},t.duration=function(){return t.timeline.totalDuration()},t.locks=[],t.type="scene",t.wipe=function(){return t.timeline.addCallback(function(){t.clear()}),t},e&&(void 0!==e.paused?e.paused===!0?t.timeline.pause():t.timeline.play():t.timeline.pause(),t.wrapper=e.wrapper?new Item(e.wrapper):void 0,t.name=e.name?e.name:"scene",t.timeline.name=t.name,t.scoID=e.scoID?e.scoID:"null",t.soundtrack=e.soundtrack?e.soundtrack:void 0,overwrite=e.defaultOverwrite?e.defaultOverwrite:"auto"),t}function Item(e,t){var i,n,r;return t&&(n=t.defaultOverwrite?t.defaultOverwrite:"auto",r=or(!1,t.paused)),i=new Scene({affectees:!0,defaultOverwrite:n,paused:r}),i.type="item",i.id=e,i.element=getNodes(e),i._elements.push(i.element),i.actions=[],i.jig=includeID(i.jig,i.id,i),i.to=includeID(i.to,i.id,i),i.fromTo=includeID(i.fromTo,i.id,i),i.from=includeID(i.from,i.id,i),i.yoyo=includeID(i.yoyo,i.id,i),i.set=includeID(i.set,i.id,i),i}function Text(e,t){var i=new Item(e,t);return i.type="text",t&&(i.value=or(void 0,t.value),i.style=or(void 0,t.style)),i.value&&jQuery(e).empty().append(""+i.value),i.style&&jQuery(e+"").addClass(i.style),i}function Button(e,t){var i="object"==typeof e?e:new Item(e,t);return i.type="object"==typeof e?"button extended "+e.type:"button",jQuery(i.id).css({cursor:"pointer","-webkit-user-select":"none","-moz-user-select":"none","-ms-user-select":"none"}),t&&(i.group=or(void 0,t.group),">self"===t.checkbox?i.checkbox=i.id:(i.checkbox=or(void 0,t.checkbox),i.checkbox=t.checkbox?e+" "+t.checkbox:void 0)),i.active=!1,i.down=!1,i.over=!1,i.locked=!1,getNodes("body").onmouseup=function(e){return function(){i.down=!1,null!==e&&e.call(arguments)}}(getNodes("body").onmouseup),i.element.onmouseover=function(){return i.over=!0,i},i.element.onmouseout=function(){return i.over=!1,i},i.element.onmousedown=function(){return i.down=!0,i.checkbox&&(i.active?(jQuery(i.checkbox).removeClass("active"),i.active=!1):(jQuery(i.checkbox).addClass("active"),i.active=!0)),i},i.element.onmouseup=function(){return i.down=!1,i},i.auto=function(e,t,n){var r;if(unNull(i.element[e]))return!1;if(i.element[e](),t)for(r in t)i[r]=t[r];return void 0!==n&&"function"==typeof n&&n(),i},i.bind=function(e,t){function n(e,t){var n,r=i;if(!this.locked){if(r.actions.length)for(n=0;n<r.actions.length;n++)r.actions[n]();r.timeline.call(function(){r.active=!1}),r.timeline.isActive()?t?r.active?r.play():r.pause():r.play():r.restart(),r.active=r.active?!1:!0}}return this.element[e]=function(e){return function(){return n(e,t),e.apply(this,arguments)}}(this.element[e]),this.pause(),this},i.toggle=function(e,t){this.active?e[t[1]]():e[t[0]]()},i.on=function(e,t){return e||console.log("You need to specify a mouseEvent"),t||console.log("You need to specify a callback"),e&&t?(i.element[e]=function(e,i){return function(){i.locked||(t(),e.call(this,arguments))
}}(i.element[e],i),this):null},i.lock=function(e){var t,n,r,o,s;return jQuery(i.element).css("cursor","auto"),e?(t=e.on?e.on:i,n=e.from?e.from:"z",r=e.until?e.until:"z",o="lock_"+t.locks.length+"f",s="lock_"+t.locks.length+"u","z"===n&&(n=0),t.timeline.addLabel(o,n),"z"!==r&&t.timeline.addLabel(s,r),t.locks.push({from:{label:o,reached:!1},until:{label:s,reached:!1},item:i}),void 0===t.controller&&(t.interval=setInterval(function(){t.timeline.progress()>0&&t.timeline.progress()<1&&checklocks(t)},100))):i.locked=!0,i},i.unlock=function(){return jQuery(i.element).css("cursor","pointer"),i.locked=!1,i},i.clearlocks=function(){if(void 0!==i.interval)try{clearInterval(i.interval)}catch(e){}return i.interval=void 0,i.locks=[],i},i.enable=function(){i.unlock(),jQuery(i.id).removeClass("disabled").children().removeClass("disabled")},i.disable=function(){i.lock(),jQuery(i.id).addClass("disabled").children().addClass("disabled")},i.bindOn=function(e){return e.mouseover&&(i.element.onmouseover=function(e,t,n){return function(){t.locked||(n.mouseover.call(t,i.id),e.call(t,e))}}(i.element.onmouseover,i,e)),e.mouseout&&(i.element.onmouseout=function(e,t,n){return function(){t.locked||(n.mouseout.call(t,i.id),e.call(t,e))}}(i.element.onmouseout,i,e)),e.mousedown&&(i.element.onmousedown=function(e,t,n){return function(){t.locked||(n.mousedown.call(t,i.id),e.call(t,e))}}(i.element.onmousedown,i,e)),i},i}function Image(e,t){var i=new Item(e,t);return i.sources=[],i.type="image",i.tag=i.element.nodeName.toLowerCase(),void 0!==t&&(void 0!==t.map?jQuery(t.map).exists()||(void 0===i.map&&(i.map={}),i.map.nodeString='<map id="'+t.map.substring(1)+'" name="'+t.map.substring(1)+'"></map>',jQuery(document.body).append(i.map.nodeString),i.map.id=t.map,jQuery(i.element).attr("usemap",t.map)):(i.map={},i.map.id=t.map)),i.add=function(e,t){return void 0===t?i.sources.push(e):i.sources[t]=e,i},i.set=function(e){return void 0!==i.sources[e]&&(-1===i.type.indexOf("image")?(jQuery(i.id).empty(),jQuery(i.id).append('<img src="'+i.sources[e]+'" />"')):jQuery(i.id).attr("src",i.sources[e])),i},i.hotspot=function(e,t){var n,r,o,e;void 0===i.map&&(i.map={}),void 0===i.map.areas&&(i.map.areas=[]);var s=i.map.id.substring(1);return i.over=!1,i.path=e,n=i.map.areas.length,r=i.path.indexOf("M"),o=i.path.indexOf("Z"),i.map.areas[n]={},i.map.areas[n].path=i.path,i.path=i.path.substring(1,o-1).trim().replace(/\s/g,",").replace(/L+,/g,""),i.map.areas[n].nodeString='<area name="'+n+"_"+s+'" shape="poly" coords="'+i.path+'"/>',r=i.map.nodeString.substring(0,i.map.nodeString.indexOf(">")+1),o=i.map.nodeString.slice(i.map.nodeString.indexOf(">")+1),i.map.areas[n],jQuery("map[name="+s+"]").append(i.map.areas[n].nodeString),i.map.areas[n].button=new Button("area[name="+n+"_"+s+"]").bindOn({mouseover:function(){t()}}),delete i.path,i},i}function DropSpot(e,t){var i=new Button(e,t);return i.over=!1,t&&(i.expecting=t.expecting?t.expecting:"null",i.index=t.index?t.index:0,jQuery(e).css("pointer-events","none")),i}function Drag(e,t){var i=new Button(e,t);i.dragging=!1,i.origin=jQuery(e).getStyles(),i.bounds=t&&t.bounds?getRect(t.bounds):"null",i.type="drag",i.disable=function(e){return function(){i.dragEngine.disable(),e.call(i,e)}}(i.disable),i.enable=function(e){return function(){i.dragEngine.enable(),e.call(i,e)}}(i.enable),i.bindOn=function(e){return function(t){t.whileDragging&&i.whileDragging&&i.draggingTicker&&(i.whileDragging=t.whileDragging),e.call(t,i)}}(i.bindOn),i.onDrag=function(){i.dragging=!0,i.dragEngine.update(),unNull(i.interval)&&i.draggingTicker()},i.whileDragging=function(){},i.draggingTicker=function(){i.interval=function(){i.dragging?(i.whileDragging(),window.requestAnimationFrame(i.interval)):i.interval=null},window.requestAnimationFrame(i.interval)},i.onDragEnd=function(){i.dragging=!1},i.rebound=function(){TweenMax.to(this.element,.3,{x:0,y:0})},i.snap=function(){};var n;return t&&(t.bounds&&(n=t.bounds.id?t.bounds.id:t.bounds),t.onDragEnd&&(i.onDragEnd=function(e,t,n){return function(){n.call(e,i.id),t.call(i,t)}}(i,i.onDragEnd,t.onDragEnd)),t.onDrag&&(i.onDrag=function(e,t,n){return function(){n.call(e,i.id),t.call(i,t)}}(i,i.onDrag,t.onDrag)),i.index=t.index?t.index:0,t.parent&&(t.parent.onDrag&&(i.onDrag=function(e,n){return function(){t.parent.onDrag(),n.call(e,i.id)}}(i,i.onDrag)),t.parent.onDragEnd&&(i.onDragEnd=function(e,n){return function(){t.parent.onDragEnd(),n.call(e,i.id)}}(i,i.onDragEnd)))),i.dragEngine=Draggable.create(i.element,{type:"x,y",bounds:n,onDrag:i.onDrag,onDragEnd:i.onDragEnd})[0],i}function ScrubBar(e,t){var i,n,r,o,s=new Item(e,t);return t&&(s.stopped=t.paused?t.paused:!1),s.dragging=!1,s.complete=!1,s.interval=void 0,s.style={width:parseInt(jQuery(e).css("width"),10)},s.watch=function(e){o=e?!0:!1,o?this.interval||(this.interval=setInterval(function(){i=1e3*s.controller.duration(),n=Draggable.get(s.scrubber.id).x,r=n/(s.bar.style.width-s.scrubber.style.width),s.controller.gotoAndStop(i*r/1e3)},1e3/30)):(clearInterval(this.interval),this.interval=void 0,this.controller.stopped?this.controller.pause():this.controller.play())},s.onDrag=function(){s.watch(!0),this.dragging=this.scrubber.dragging},s.onDragEnd=function(){s.watch(!1)},s.bind=function(e){e&&(e.bar&&(s.bar=e.bar),e.scrubber&&(s.scrubber=e.scrubber),e.controller&&(s.controller=e.controller),e.fill&&(s.fill=e.fill))},s}function ProgressBar(e,t){var i=new Item(e,t);return t&&(i.stopped=t.paused?t.paused:!1,t.scrubber&&(i.scrubber=t.scrubber)),i.style={width:parseInt(jQuery(e).css("width"),10)},i.getProgress=function(){},i.setProgress=function(){},i}function FillBar(e,t){var i=new Item(e,t);return i.style={width:parseInt(jQuery(e).css("width"),10)},i}function Scrubber(e,t){var i=new Drag(e,t);return i.style={width:parseInt(jQuery(e).css("width"),10)},i.down=!1,t&&(i.bar=t.bar?t.bar:"null"),i}function ClickToPresent(e,t,i){var n,r,o={};return o.controller=new SceneController({scene:t[0]}),void 0===window._ready&&(window._ready=!0),o.scenes=t,o.hotspots={},o.modalTriggers={},o.current_scene=0,o.wrapper=e,o.interval,o.onComplete=function(){},i&&(o.onComplete=i.onComplete?i.onComplete:function(){},o.controller.userAction=!0),o.hide=function(){for(n=0,r=o.scenes.length;r>n;n++)void 0!==o.scenes[n].wrapper?n!==o.current_scene&&o.scenes[n].wrapper.hide():n!==o.current_scene&&o.scenes[n].hideAll();return this},o.show=function(){for(n=0,r=o.scenes.length;r>n;n++)void 0!==o.scenes[n].wrapper?n===o.current_scene&&o.scenes[n].wrapper.show():n===o.current_scene&&o.scenes[n].showAll();return this},o.exit=function(e,t){return o.modalTriggers["scene_"+t]=new Button(e).bindOn({mousedown:function(){(o._loading===!1||void 0===o._loading)&&(o._loading=!0,o.modalTriggers.active=!0,TweenMax.fadeOut(o.wrapper,.5,function(){o.current_scene=t,o.hide(),TweenMax.set(o.wrapper,{visibility:"hidden","pointer-events":"none"}),o.controller.kill(),o._loading=!1}))}}),this},o.hotspot=function(e,t){var i;return i=void 0===e.id?new Button(e):e,i.element.onmousedown=function(e,t,r){return function(){if(!o._loading){o._loading=!0,i.active=!0,e.call(this),o.goTo(r,function(){o._loading=!1,console.log("no longer loading")}),jQuery(o.hotspots[n]).addClass("active");for(n in o.hotspots)n!=="scene_"+r&&(o.hotspots[n].active=!1,jQuery(o.hotspots[n]).removeClass("active"))}}}(i.element.onmousedown,i,t),o.hotspots["scene_"+t]=i,this},o.triggers=function(e){return"object"==typeof e&&(void 0!==e.next&&(o.trigger_next=e.next?new Button(e.next):void 0),void 0!==e.previous&&(o.trigger_back=e.previous?new Button(e.previous):void 0)),"string"==typeof e&&(o.trigger_next=new Button(e)),void 0!==o.trigger_next&&o.trigger_next.bindOn({mousedown:function(){o.trigger_next.locked||o.next()}}),void 0!==o.trigger_back&&o.trigger_back.bindOn({mousedown:function(){o.trigger_back.locked||o.previous()}}),this},o.goTo=function(e,t){function i(){o.current_scene=e,o.hide(),TweenMax.set(o.wrapper,{css:{visibility:"hidden","pointer-events":"none"}}),o.controller.kill(),o.controller.swap(o.scenes[o.current_scene],!0),o.refresh(),"function"==typeof t&&t()}return setStates(o.hotspots,"locked",!0),void 0!==o.trigger_next&&(o.trigger_next.locked=!0),void 0!==o.trigger_back&&(o.trigger_back.locked=!0),void 0!==o.modalTriggers.active&&o.modalTriggers.active!==!1?i():TweenMax.fadeOut(o.wrapper,.5,i),this},o.next=function(){return setStates(o.hotspots,"locked",!0),o.trigger_next.locked=!0,o.trigger_back.locked=!0,TweenMax.fadeOut(o.wrapper,.5,function(){o.current_scene+=1,o.hide(),TweenMax.set(o.wrapper,{css:{visibility:"hidden"}}),o.controller.kill(),o.controller.swap(o.scenes[o.current_scene],!0),o.refresh()}),this},o.previous=function(){return setStates(o.hotspots,"locked",!0),o.trigger_next.locked=!0,o.trigger_back.locked=!0,TweenMax.fadeOut(o.wrapper,.5,function(){o.current_scene-=1,o.hide(),TweenMax.set(o.wrapper,{css:{visibility:"hidden"}}),o.controller.kill(),o.controller.swap(o.scenes[o.current_scene],!0),o.refresh()}),this},o.refresh=function(){var e=void 0!==o.scenes[o.current_scene-1]?!0:!1,t=void 0!==o.scenes[o.current_scene+1]?!0:!1,i=void 0!==o.trigger_next?!0:!1,n=void 0!==o.trigger_back?!0:!1;return n&&jQuery(o.trigger_back.id).html(e?"scene"!==o.scenes[o.current_scene-1].id&&void 0!==o.scenes[o.current_scene-1].id?""+o.scenes[o.current_scene-1].id:"Previous":"..."),i&&jQuery(o.trigger_next.id).html(t?"scene"!==o.scenes[o.current_scene+1].id&&void 0!==o.scenes[o.current_scene+1].id?""+o.scenes[o.current_scene+1].id:"Next":"..."),console.log(o.current_scene+" === "+(parseInt(o.scenes.length,10)-1)),o.current_scene===o.scenes.length-1&&(i&&o.trigger_next.disable(),n&&o.trigger_back.enable(),o.onComplete()),0===o.current_scene&&(i&&o.trigger_next.enable(),n&&o.trigger_back.disable()),o.current_scene<o.scenes.length-1&&o.current_scene>0&&(i&&o.trigger_next.enable(),n&&o.trigger_back.enable()),o.show(),o.controller.play(),TweenMax.set(o.wrapper,{css:{visibility:"visible","pointer-events":"auto"}}),TweenMax.fadeIn(o.wrapper,.5,function(){setStates(o.hotspots,"locked",!1)}),this},void 0===o.trigger_next&&void 0===o.trigger_back&&TweenMax.set(o.wrapper,{css:{visibility:"hidden","pointer-events":"none"}}),o.controller.init(!0),o}function Collage(e,t,i,r){function o(e,t){for(var i in e)"focal"!==i&&"axisrandom"!==i&&(e[i]=parseInt(e[i],10));for(e.xrandom=isNaN(e.xrandom)?t:e.xrandom,e.yrandom=isNaN(e.yrandom)?t:e.yrandom,e.zrandom=isNaN(e.zrandom)?t:e.zrandom,i=0,j=m.length;i<j;i++)d=String("x"+m[i]),e[d]=isNaN(e[d])?t:e[d],d=String("y"+m[i]),e[d]=isNaN(e[d])?t:e[d],d=String("z"+m[i]),e[d]=isNaN(e[d])?t:e[d];return e.x=isNaN(e.x)?t:e.x,e.y=isNaN(e.y)?t:e.y,e.z=isNaN(e.z)?t:e.z,e.rotx=isNaN(e.rotx)?t:e.rotx,e.roty=isNaN(e.roty)?t:e.roty,e.rotz=isNaN(e.rotz)?t:e.rotz,e.rotrandom=isNaN(e.rotrandom)?t:e.rotrandom,e}function s(t,i,s){function a(){return void 0!==i.rotrandom&&i.rotrandom>1&&0===Math.floor(2*Math.random())?-1:1}for(i=void 0===i?{}:o(i,0),l=0,u=t.length;u>l;l++)void 0===t[l].id&&(t[l]={id:t[l]});void 0===s?(s.rows=2,s.gutter=10):(s.rows=void 0===s.rows?2:s.rows,s.gutter=void 0===s.gutter?2:s.gutter,s.focal=void 0===s.focal?void 0:s.focal,void 0!==s.focal&&void 0===s.focal.id&&(s.focal={id:s.focal}));var l,u,c,c,h,d;d=t.length,h=t.length/s.rows,n=Math.floor(h);var f=n%1;c=Math.floor(f);var p=t.slice(),g=[],m={},_={};for(l=0,u=s.rows;u>l;l++){var v=[],y=0;if(_={top:0,left:0},console.log(m),void 0!==m.height&&(_.top+=m.height+(i.y*(l+1)+s.gutter)),n<h&&p.length>h+1)var b=!0;else b=!1;for(;v.length<n;)p.length>0&&v.length>0&&(m=jQuery(v[0].id).parseStyles()),v.unshift(p.shift()),y>0?isNaN(m.width)||isNaN(i.x)||(_.left+=Math.floor(m.width*i.x+(i.x*(l+1)+s.gutter)),_.left+=Math.floor(Math.random()*i.xrandom)*(m.width/100)*a()):(m=jQuery(v[0].id).parseStyles(),b&&(_.left+=Math.floor(m.width*s.x/n)),_.left+=Math.floor(Math.random()*i.xrandom)*(m.width/100)*a()),TweenMax.set(v[0].id,{rotationX:"+="+(i.rotx+i.rotx*Math.floor(Math.random()*i.rotrandom))*a(),rotationY:"+="+(i.roty+i.roty*Math.floor(Math.random()*i.rotrandom))*a(),rotationZ:"+="+(i.rotz+i.rotz*Math.floor(Math.random()*i.rotrandom))*a()}),_.top+=Math.floor(Math.random()*i.yrandom)*(m.height/100)*a(),jQuery(v[0].id).css(_),y++;y>0&&l===u-1&&n!==h&&(p.length>0&&v.length>0&&(m=jQuery(v[0].id).parseStyles()),v.unshift(p.shift()),isNaN(m.width)||isNaN(i.x)||(_.left+=Math.floor(m.width*i.x+(i.x*(l+1)+s.gutter)),_.left+=Math.floor(Math.random()*i.xrandom)*(m.width/100)*a()),TweenMax.set(v[0].id,{rotationX:"+="+(i.rotx+i.rotx*Math.floor(Math.random()*i.rotrandom))*a(),rotationY:"+="+(i.roty+i.roty*Math.floor(Math.random()*i.rotrandom))*a(),rotationZ:"+="+(i.rotz+i.rotz*Math.floor(Math.random()*i.rotrandom))*a()}),_.top+=Math.floor(Math.random()*i.yrandom)*(m.height/100)*a(),jQuery(v[0].id).css(_)),g.push(arrayReverse(v))}return _.left+=m.width,_.top+=m.height,void 0!==s.focal&&void 0!==s.focal.id&&(m=jQuery(s.focal.id).parseStyles(),TweenMax.set(s.focal.id,{x:_.left/2-m.width/2,y:_.top/2-m.height/2})),jQuery(e).css({width:_.left,height:_.top}),r&&r(),g}var a,l,u=[],c=jQuery(e).children().toArray();for(a=0,l=c.length;l>a;a++)jQuery(c[a]).attr("id",e+"-image-"+(a+1)),u[a]=c[a].id;var h,d,f="string"==typeof t?t:i,p="string"==typeof i?t:i,g={},m=["sine","cos","tan"];g.pile=function(e){return e.gutter=void 0===e.gutter?0:e.gutter,e.gutter-=100,s(u,{yrandom:10*e.yrandom,xrandom:10*e.xrandom,rotz:5*e.rotz,rotrandom:5*e.rotrandom,y:1*e.x,x:1*e.y},e)},g.square=function(e){return s(u,{rotx:e.rotx-1,roty:e.roty-1,rotz:e.rotz-1,y:1*e.x,x:1*e.y},e)};var _,v;return void 0===f&&(f="pile"),void 0!==g[f]&&(h=g[f],p=void 0===p?{}:p,o(p,1),void 0!==u[0].substring?_=u[0]:void 0!==u[0].id&&(_=u[0].id),v=0,h.checkComputedStyles=setInterval(function(){(400===v||jQuery(_).parseStyles().width>0)&&(clearInterval(h.checkComputedStyles),h=h(p)),v++},10)),u}function Test(e,t){var i,n={id:or("untitled",t.id),type:e,locked:t.lock?!0:!1,maxAttempts:or(void 0,t.maxAttempts),guide:or(!1,t.guide),answers:or([],t.answers),onSolve:or(function(){},t.onSolve),onWrong:or(function(){},t.onWrong),onUnChoose:or(function(){},t.onUnChoose),onChoose:or(function(){},t.onChoose),choice:function(){var e={};return e.checkAnswers=function(t){var i,n=0,r=0;for(i in t.buttons)t.buttons[i].active&&(r+=1,e.isCorrect(t,i)&&(n+=1));n===t.answers.length&&r===t.answers.length?t.onSolve():t.onWrong()},e.isCorrect=function(e,t){var i,n=!1,t=parseInt(t,10);for(i=0;i<e.answers.length;i++)t===parseInt(e.answers[i],10)&&(n=!0);return n},e.type="choice",e},matching:function(){var e={};return e.checkAnswers=function(e,t,r){var o,s=0;for(o=0;o<e.buttons.length;o++)e.slots[o].active&&(e.answers[t]===o?(e.slots[o].matched=!0,r(t,e.buttons[o],e.slots[o])):e.buttons[t].rebound());for(o=0;o<e.slots.length;o++)e.slots[o].matched&&s++;if(s===e.answers.length){if(n.locked)for(o=0,i=n.buttons.length;i>o;o++)n.buttons[o].disable(),console.log(n.buttons[o]);e.onSolve()}},e.type="matching",e}};return n.multiple=n.answers.length>1?!0:!1,n.testEvents={onSolve:n.onSolve,onWrong:n.onWrong,onChoose:n.onChoose,onUnChoose:n.onUnChoose},n.testInstance=n[e](),n}function ButtonList(e,t){function i(){var e=0;if(!s.multiple)for(n in s.buttons)e!==s.currentButton&&(s.buttons[n].active=!1,jQuery(s.buttons[n].checkbox).removeClass("active")),e+=1}var n,r,o,s=new Test(e,t),a=s.testInstance,l=[],u=t.flag;for(s.buttons={},s.currentButton=0,l=void 0!==t.nodes?"li"===t.nodes?jQuery(t.wrapper).parent().find(t.nodes):jQuery(t.wrapper).find(t.nodes):jQuery(t.wrapper).parent().find("li"),n=0,r=l.length;r>n;n++){l[n].id=s.id+"_"+n,o=jQuery(l[n]).getNodes(),s.buttons[n]=new Button("#"+o.id,{checkbox:or(">self",u)}),console.log(t.id+" - checkbox: "+s.buttons[n].checkbox),s.buttons[n].index=n,s.buttons[n].element.onmousedown=function(e,t,n,r){return function(){e(),n.currentButton=t.index,t.active?n.onUnChoose():n.onChoose(),i(),r.checkAnswers(n)}}(s.buttons[n].element.onmousedown,s.buttons[n],s,a);for(name in s.testEvents)s[name]=new GSAPEvent(name,s,s.testEvents,s.buttons,n)}return s}function DragAndDrop(e,t,i,n){function r(e,t,i){rel=-1*(e-h.answers[e]),rel=rel===-0?0:rel,console.log("relation: "+rel);var n=100,r=100;"horizontal"===h.orientation&&(n=(t.css["margin-left"]+t.css["margin-right"]+t.css.width)*rel,r=t.parent_css.height,r-=t.css["margin-top"],r+=i.css["margin-top"],r+=t.parent_css["padding-bottom"],r+=i.parent_css["padding-top"]),TweenMax.to(t.element,.2,{x:n,y:r}),t.placed=!0}var o,s,a,l,u,c,h=new Test(e,n);h.buttons=[],h.slots=[],h.a=t,h.b=i,h.orientation=or(void 0,n.orientation);var d=h.testInstance;c=jQuery(t).parent().find(".drag").getNodes(),void 0===c.length&&(c=[c]),h.checkComputedStyles=setInterval(function(){if(jQuery(c[0]).parseStyles().width>0){for(clearInterval(h.checkComputedStyles),o=0,a=c.length;a>o;o++)c[o].id=h.id+"_drag_"+o,c[o]=new Drag("#"+c[o].id,{index:o,onDrag:function(){for(h.currentButton=this.index,this.active=!1,s=0,l=h.slots.length;l>s;s++)if(!this.active)if(this.dragEngine.hitTest(h.slots[s].element)){for(this.active=!0,h.slots[s].active=!0,h.currentSlot=h.slots[s],u=0;l>u;u++)u!==s&&(h.slots[u].active=!1);jQuery(h.slots[s].id).addClass("active")}else this.active=!1,h.slots[s].active=!1,h.currentSlot=void 0,jQuery(h.slots[s].id).removeClass("active")},onDragEnd:function(){var e=this;if(this.active&&void 0!==h.currentSlot){console.log("drag instance"),console.log(this);var t=function(){r(e.index,e,h.currentSlot)};d.checkAnswers(h,this.index,t),this.hit=!1}else this.rebound()}}),c[o].element.onmousedown=function(e,t,i){return function(){e(),i.currentButton=t.index,i.onChoose()}}(c[o].element.onmousedown,c[o],h,d),c[o].element.onmouseup=function(e,t,i){return function(){e(),i.currentButton=t.index,i.onUnChoose()}}(c[o].element.onmouseup,c[o],h,d),c[o].css=jQuery(c[o].id).parseStyles(),c[o].parent_css=jQuery(c[o].id).parent().parseStyles();for(h.buttons=c,c="choice"===d.type?[jQuery(i).getNodes()]:jQuery(i).parent().find(".drop").getNodes(),o=0,a=c.length;a>o;o++){c[o].id=h.id+"_drop_"+o,c[o]=new DropSpot("#"+c[o].id,{index:o}),c[o].css=jQuery(c[o].id).parseStyles(),c[o].parent_css=jQuery(c[o].id).parent().parseStyles();for(name in h.testEvents)h[name]=new GSAPEvent(name,h,h.testEvents,h.buttons,o)}h.slots=c}},10)}!function(e,t){"object"==typeof module&&"object"==typeof module.exports?module.exports=e.document?t(e,!0):function(e){if(!e.document)throw new Error("jQuery requires a window with a document");return t(e)}:t(e)}("undefined"!=typeof window?window:this,function(e,t){function i(e){var t=e.length,i=rt.type(e);return"function"===i||rt.isWindow(e)?!1:1===e.nodeType&&t?!0:"array"===i||0===t||"number"==typeof t&&t>0&&t-1 in e}function n(e,t,i){if(rt.isFunction(t))return rt.grep(e,function(e,n){return!!t.call(e,n,e)!==i});if(t.nodeType)return rt.grep(e,function(e){return e===t!==i});if("string"==typeof t){if(dt.test(t))return rt.filter(t,e,i);t=rt.filter(t,e)}return rt.grep(e,function(e){return rt.inArray(e,t)>=0!==i})}function r(e,t){do e=e[t];while(e&&1!==e.nodeType);return e}function o(e){var t=bt[e]={};return rt.each(e.match(yt)||[],function(e,i){t[i]=!0}),t}function s(){pt.addEventListener?(pt.removeEventListener("DOMContentLoaded",a,!1),e.removeEventListener("load",a,!1)):(pt.detachEvent("onreadystatechange",a),e.detachEvent("onload",a))}function a(){(pt.addEventListener||"load"===event.type||"complete"===pt.readyState)&&(s(),rt.ready())}function l(e,t,i){if(void 0===i&&1===e.nodeType){var n="data-"+t.replace(St,"-$1").toLowerCase();if(i=e.getAttribute(n),"string"==typeof i){try{i="true"===i?!0:"false"===i?!1:"null"===i?null:+i+""===i?+i:kt.test(i)?rt.parseJSON(i):i}catch(r){}rt.data(e,t,i)}else i=void 0}return i}function u(e){var t;for(t in e)if(("data"!==t||!rt.isEmptyObject(e[t]))&&"toJSON"!==t)return!1;return!0}function c(e,t,i,n){if(rt.acceptData(e)){var r,o,s=rt.expando,a=e.nodeType,l=a?rt.cache:e,u=a?e[s]:e[s]&&s;if(u&&l[u]&&(n||l[u].data)||void 0!==i||"string"!=typeof t)return u||(u=a?e[s]=$.pop()||rt.guid++:s),l[u]||(l[u]=a?{}:{toJSON:rt.noop}),("object"==typeof t||"function"==typeof t)&&(n?l[u]=rt.extend(l[u],t):l[u].data=rt.extend(l[u].data,t)),o=l[u],n||(o.data||(o.data={}),o=o.data),void 0!==i&&(o[rt.camelCase(t)]=i),"string"==typeof t?(r=o[t],null==r&&(r=o[rt.camelCase(t)])):r=o,r}}function h(e,t,i){if(rt.acceptData(e)){var n,r,o=e.nodeType,s=o?rt.cache:e,a=o?e[rt.expando]:rt.expando;if(s[a]){if(t&&(n=i?s[a]:s[a].data)){rt.isArray(t)?t=t.concat(rt.map(t,rt.camelCase)):t in n?t=[t]:(t=rt.camelCase(t),t=t in n?[t]:t.split(" ")),r=t.length;for(;r--;)delete n[t[r]];if(i?!u(n):!rt.isEmptyObject(n))return}(i||(delete s[a].data,u(s[a])))&&(o?rt.cleanData([e],!0):it.deleteExpando||s!=s.window?delete s[a]:s[a]=null)}}}function d(){return!0}function f(){return!1}function p(){try{return pt.activeElement}catch(e){}}function g(e){var t=jt.split("|"),i=e.createDocumentFragment();if(i.createElement)for(;t.length;)i.createElement(t.pop());return i}function m(e,t){var i,n,r=0,o=typeof e.getElementsByTagName!==Tt?e.getElementsByTagName(t||"*"):typeof e.querySelectorAll!==Tt?e.querySelectorAll(t||"*"):void 0;if(!o)for(o=[],i=e.childNodes||e;null!=(n=i[r]);r++)!t||rt.nodeName(n,t)?o.push(n):rt.merge(o,m(n,t));return void 0===t||t&&rt.nodeName(e,t)?rt.merge([e],o):o}function _(e){Dt.test(e.type)&&(e.defaultChecked=e.checked)}function v(e,t){return rt.nodeName(e,"table")&&rt.nodeName(11!==t.nodeType?t:t.firstChild,"tr")?e.getElementsByTagName("tbody")[0]||e.appendChild(e.ownerDocument.createElement("tbody")):e}function y(e){return e.type=(null!==rt.find.attr(e,"type"))+"/"+e.type,e}function b(e){var t=Ut.exec(e.type);return t?e.type=t[1]:e.removeAttribute("type"),e}function x(e,t){for(var i,n=0;null!=(i=e[n]);n++)rt._data(i,"globalEval",!t||rt._data(t[n],"globalEval"))}function w(e,t){if(1===t.nodeType&&rt.hasData(e)){var i,n,r,o=rt._data(e),s=rt._data(t,o),a=o.events;if(a){delete s.handle,s.events={};for(i in a)for(n=0,r=a[i].length;r>n;n++)rt.event.add(t,i,a[i][n])}s.data&&(s.data=rt.extend({},s.data))}}function T(e,t){var i,n,r;if(1===t.nodeType){if(i=t.nodeName.toLowerCase(),!it.noCloneEvent&&t[rt.expando]){r=rt._data(t);for(n in r.events)rt.removeEvent(t,n,r.handle);t.removeAttribute(rt.expando)}"script"===i&&t.text!==e.text?(y(t).text=e.text,b(t)):"object"===i?(t.parentNode&&(t.outerHTML=e.outerHTML),it.html5Clone&&e.innerHTML&&!rt.trim(t.innerHTML)&&(t.innerHTML=e.innerHTML)):"input"===i&&Dt.test(e.type)?(t.defaultChecked=t.checked=e.checked,t.value!==e.value&&(t.value=e.value)):"option"===i?t.defaultSelected=t.selected=e.defaultSelected:("input"===i||"textarea"===i)&&(t.defaultValue=e.defaultValue)}}function k(t,i){var n,r=rt(i.createElement(t)).appendTo(i.body),o=e.getDefaultComputedStyle&&(n=e.getDefaultComputedStyle(r[0]))?n.display:rt.css(r[0],"display");return r.detach(),o}function S(e){var t=pt,i=Kt[e];return i||(i=k(e,t),"none"!==i&&i||(Jt=(Jt||rt("<iframe frameborder='0' width='0' height='0'/>")).appendTo(t.documentElement),t=(Jt[0].contentWindow||Jt[0].contentDocument).document,t.write(),t.close(),i=k(e,t),Jt.detach()),Kt[e]=i),i}function C(e,t){return{get:function(){var i=e();if(null!=i)return i?void delete this.get:(this.get=t).apply(this,arguments)}}}function P(e,t){if(t in e)return t;for(var i=t.charAt(0).toUpperCase()+t.slice(1),n=t,r=di.length;r--;)if(t=di[r]+i,t in e)return t;return n}function A(e,t){for(var i,n,r,o=[],s=0,a=e.length;a>s;s++)n=e[s],n.style&&(o[s]=rt._data(n,"olddisplay"),i=n.style.display,t?(o[s]||"none"!==i||(n.style.display=""),""===n.style.display&&At(n)&&(o[s]=rt._data(n,"olddisplay",S(n.nodeName)))):(r=At(n),(i&&"none"!==i||!r)&&rt._data(n,"olddisplay",r?i:rt.css(n,"display"))));for(s=0;a>s;s++)n=e[s],n.style&&(t&&"none"!==n.style.display&&""!==n.style.display||(n.style.display=t?o[s]||"":"none"));return e}function O(e,t,i){var n=li.exec(t);return n?Math.max(0,n[1]-(i||0))+(n[2]||"px"):t}function D(e,t,i,n,r){for(var o=i===(n?"border":"content")?4:"width"===t?1:0,s=0;4>o;o+=2)"margin"===i&&(s+=rt.css(e,i+Pt[o],!0,r)),n?("content"===i&&(s-=rt.css(e,"padding"+Pt[o],!0,r)),"margin"!==i&&(s-=rt.css(e,"border"+Pt[o]+"Width",!0,r))):(s+=rt.css(e,"padding"+Pt[o],!0,r),"padding"!==i&&(s+=rt.css(e,"border"+Pt[o]+"Width",!0,r)));return s}function M(e,t,i){var n=!0,r="width"===t?e.offsetWidth:e.offsetHeight,o=ei(e),s=it.boxSizing&&"border-box"===rt.css(e,"boxSizing",!1,o);if(0>=r||null==r){if(r=ti(e,t,o),(0>r||null==r)&&(r=e.style[t]),ni.test(r))return r;n=s&&(it.boxSizingReliable()||r===e.style[t]),r=parseFloat(r)||0}return r+D(e,t,i||(s?"border":"content"),n,o)+"px"}function R(e,t,i,n,r){return new R.prototype.init(e,t,i,n,r)}function N(){return setTimeout(function(){fi=void 0}),fi=rt.now()}function E(e,t){var i,n={height:e},r=0;for(t=t?1:0;4>r;r+=2-t)i=Pt[r],n["margin"+i]=n["padding"+i]=e;return t&&(n.opacity=n.width=e),n}function L(e,t,i){for(var n,r=(yi[t]||[]).concat(yi["*"]),o=0,s=r.length;s>o;o++)if(n=r[o].call(i,t,e))return n}function j(e,t,i){var n,r,o,s,a,l,u,c,h=this,d={},f=e.style,p=e.nodeType&&At(e),g=rt._data(e,"fxshow");i.queue||(a=rt._queueHooks(e,"fx"),null==a.unqueued&&(a.unqueued=0,l=a.empty.fire,a.empty.fire=function(){a.unqueued||l()}),a.unqueued++,h.always(function(){h.always(function(){a.unqueued--,rt.queue(e,"fx").length||a.empty.fire()})})),1===e.nodeType&&("height"in t||"width"in t)&&(i.overflow=[f.overflow,f.overflowX,f.overflowY],u=rt.css(e,"display"),c="none"===u?rt._data(e,"olddisplay")||S(e.nodeName):u,"inline"===c&&"none"===rt.css(e,"float")&&(it.inlineBlockNeedsLayout&&"inline"!==S(e.nodeName)?f.zoom=1:f.display="inline-block")),i.overflow&&(f.overflow="hidden",it.shrinkWrapBlocks()||h.always(function(){f.overflow=i.overflow[0],f.overflowX=i.overflow[1],f.overflowY=i.overflow[2]}));for(n in t)if(r=t[n],gi.exec(r)){if(delete t[n],o=o||"toggle"===r,r===(p?"hide":"show")){if("show"!==r||!g||void 0===g[n])continue;p=!0}d[n]=g&&g[n]||rt.style(e,n)}else u=void 0;if(rt.isEmptyObject(d))"inline"===("none"===u?S(e.nodeName):u)&&(f.display=u);else{g?"hidden"in g&&(p=g.hidden):g=rt._data(e,"fxshow",{}),o&&(g.hidden=!p),p?rt(e).show():h.done(function(){rt(e).hide()}),h.done(function(){var t;rt._removeData(e,"fxshow");for(t in d)rt.style(e,t,d[t])});for(n in d)s=L(p?g[n]:0,n,h),n in g||(g[n]=s.start,p&&(s.end=s.start,s.start="width"===n||"height"===n?1:0))}}function F(e,t){var i,n,r,o,s;for(i in e)if(n=rt.camelCase(i),r=t[n],o=e[i],rt.isArray(o)&&(r=o[1],o=e[i]=o[0]),i!==n&&(e[n]=o,delete e[i]),s=rt.cssHooks[n],s&&"expand"in s){o=s.expand(o),delete e[n];for(i in o)i in e||(e[i]=o[i],t[i]=r)}else t[n]=r}function I(e,t,i){var n,r,o=0,s=vi.length,a=rt.Deferred().always(function(){delete l.elem}),l=function(){if(r)return!1;for(var t=fi||N(),i=Math.max(0,u.startTime+u.duration-t),n=i/u.duration||0,o=1-n,s=0,l=u.tweens.length;l>s;s++)u.tweens[s].run(o);return a.notifyWith(e,[u,o,i]),1>o&&l?i:(a.resolveWith(e,[u]),!1)},u=a.promise({elem:e,props:rt.extend({},t),opts:rt.extend(!0,{specialEasing:{}},i),originalProperties:t,originalOptions:i,startTime:fi||N(),duration:i.duration,tweens:[],createTween:function(t,i){var n=rt.Tween(e,u.opts,t,i,u.opts.specialEasing[t]||u.opts.easing);return u.tweens.push(n),n},stop:function(t){var i=0,n=t?u.tweens.length:0;if(r)return this;for(r=!0;n>i;i++)u.tweens[i].run(1);return t?a.resolveWith(e,[u,t]):a.rejectWith(e,[u,t]),this}}),c=u.props;for(F(c,u.opts.specialEasing);s>o;o++)if(n=vi[o].call(u,e,c,u.opts))return n;return rt.map(c,L,u),rt.isFunction(u.opts.start)&&u.opts.start.call(e,u),rt.fx.timer(rt.extend(l,{elem:e,anim:u,queue:u.opts.queue})),u.progress(u.opts.progress).done(u.opts.done,u.opts.complete).fail(u.opts.fail).always(u.opts.always)}function z(e){return function(t,i){"string"!=typeof t&&(i=t,t="*");var n,r=0,o=t.toLowerCase().match(yt)||[];if(rt.isFunction(i))for(;n=o[r++];)"+"===n.charAt(0)?(n=n.slice(1)||"*",(e[n]=e[n]||[]).unshift(i)):(e[n]=e[n]||[]).push(i)}}function X(e,t,i,n){function r(a){var l;return o[a]=!0,rt.each(e[a]||[],function(e,a){var u=a(t,i,n);return"string"!=typeof u||s||o[u]?s?!(l=u):void 0:(t.dataTypes.unshift(u),r(u),!1)}),l}var o={},s=e===Yi;return r(t.dataTypes[0])||!o["*"]&&r("*")}function B(e,t){var i,n,r=rt.ajaxSettings.flatOptions||{};for(n in t)void 0!==t[n]&&((r[n]?e:i||(i={}))[n]=t[n]);return i&&rt.extend(!0,e,i),e}function H(e,t,i){for(var n,r,o,s,a=e.contents,l=e.dataTypes;"*"===l[0];)l.shift(),void 0===r&&(r=e.mimeType||t.getResponseHeader("Content-Type"));if(r)for(s in a)if(a[s]&&a[s].test(r)){l.unshift(s);break}if(l[0]in i)o=l[0];else{for(s in i){if(!l[0]||e.converters[s+" "+l[0]]){o=s;break}n||(n=s)}o=o||n}return o?(o!==l[0]&&l.unshift(o),i[o]):void 0}function Y(e,t,i,n){var r,o,s,a,l,u={},c=e.dataTypes.slice();if(c[1])for(s in e.converters)u[s.toLowerCase()]=e.converters[s];for(o=c.shift();o;)if(e.responseFields[o]&&(i[e.responseFields[o]]=t),!l&&n&&e.dataFilter&&(t=e.dataFilter(t,e.dataType)),l=o,o=c.shift())if("*"===o)o=l;else if("*"!==l&&l!==o){if(s=u[l+" "+o]||u["* "+o],!s)for(r in u)if(a=r.split(" "),a[1]===o&&(s=u[l+" "+a[0]]||u["* "+a[0]])){s===!0?s=u[r]:u[r]!==!0&&(o=a[0],c.unshift(a[1]));break}if(s!==!0)if(s&&e["throws"])t=s(t);else try{t=s(t)}catch(h){return{state:"parsererror",error:s?h:"No conversion from "+l+" to "+o}}}return{state:"success",data:t}}function q(e,t,i,n){var r;if(rt.isArray(t))rt.each(t,function(t,r){i||Ui.test(e)?n(e,r):q(e+"["+("object"==typeof r?t:"")+"]",r,i,n)});else if(i||"object"!==rt.type(t))n(e,t);else for(r in t)q(e+"["+r+"]",t[r],i,n)}function W(){try{return new e.XMLHttpRequest}catch(t){}}function Q(){try{return new e.ActiveXObject("Microsoft.XMLHTTP")}catch(t){}}function U(e){return rt.isWindow(e)?e:9===e.nodeType?e.defaultView||e.parentWindow:!1}var $=[],V=$.slice,Z=$.concat,G=$.push,J=$.indexOf,K={},et=K.toString,tt=K.hasOwnProperty,it={},nt="1.11.1",rt=function(e,t){return new rt.fn.init(e,t)},ot=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,st=/^-ms-/,at=/-([\da-z])/gi,lt=function(e,t){return t.toUpperCase()};rt.fn=rt.prototype={jquery:nt,constructor:rt,selector:"",length:0,toArray:function(){return V.call(this)},get:function(e){return null!=e?0>e?this[e+this.length]:this[e]:V.call(this)},pushStack:function(e){var t=rt.merge(this.constructor(),e);return t.prevObject=this,t.context=this.context,t},each:function(e,t){return rt.each(this,e,t)},map:function(e){return this.pushStack(rt.map(this,function(t,i){return e.call(t,i,t)}))},slice:function(){return this.pushStack(V.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(e){var t=this.length,i=+e+(0>e?t:0);return this.pushStack(i>=0&&t>i?[this[i]]:[])},end:function(){return this.prevObject||this.constructor(null)},push:G,sort:$.sort,splice:$.splice},rt.extend=rt.fn.extend=function(){var e,t,i,n,r,o,s=arguments[0]||{},a=1,l=arguments.length,u=!1;for("boolean"==typeof s&&(u=s,s=arguments[a]||{},a++),"object"==typeof s||rt.isFunction(s)||(s={}),a===l&&(s=this,a--);l>a;a++)if(null!=(r=arguments[a]))for(n in r)e=s[n],i=r[n],s!==i&&(u&&i&&(rt.isPlainObject(i)||(t=rt.isArray(i)))?(t?(t=!1,o=e&&rt.isArray(e)?e:[]):o=e&&rt.isPlainObject(e)?e:{},s[n]=rt.extend(u,o,i)):void 0!==i&&(s[n]=i));return s},rt.extend({expando:"jQuery"+(nt+Math.random()).replace(/\D/g,""),isReady:!0,error:function(e){throw new Error(e)},noop:function(){},isFunction:function(e){return"function"===rt.type(e)},isArray:Array.isArray||function(e){return"array"===rt.type(e)},isWindow:function(e){return null!=e&&e==e.window},isNumeric:function(e){return!rt.isArray(e)&&e-parseFloat(e)>=0},isEmptyObject:function(e){var t;for(t in e)return!1;return!0},isPlainObject:function(e){var t;if(!e||"object"!==rt.type(e)||e.nodeType||rt.isWindow(e))return!1;try{if(e.constructor&&!tt.call(e,"constructor")&&!tt.call(e.constructor.prototype,"isPrototypeOf"))return!1}catch(i){return!1}if(it.ownLast)for(t in e)return tt.call(e,t);for(t in e);return void 0===t||tt.call(e,t)},type:function(e){return null==e?e+"":"object"==typeof e||"function"==typeof e?K[et.call(e)]||"object":typeof e},globalEval:function(t){t&&rt.trim(t)&&(e.execScript||function(t){e.eval.call(e,t)
})(t)},camelCase:function(e){return e.replace(st,"ms-").replace(at,lt)},nodeName:function(e,t){return e.nodeName&&e.nodeName.toLowerCase()===t.toLowerCase()},each:function(e,t,n){var r,o=0,s=e.length,a=i(e);if(n){if(a)for(;s>o&&(r=t.apply(e[o],n),r!==!1);o++);else for(o in e)if(r=t.apply(e[o],n),r===!1)break}else if(a)for(;s>o&&(r=t.call(e[o],o,e[o]),r!==!1);o++);else for(o in e)if(r=t.call(e[o],o,e[o]),r===!1)break;return e},trim:function(e){return null==e?"":(e+"").replace(ot,"")},makeArray:function(e,t){var n=t||[];return null!=e&&(i(Object(e))?rt.merge(n,"string"==typeof e?[e]:e):G.call(n,e)),n},inArray:function(e,t,i){var n;if(t){if(J)return J.call(t,e,i);for(n=t.length,i=i?0>i?Math.max(0,n+i):i:0;n>i;i++)if(i in t&&t[i]===e)return i}return-1},merge:function(e,t){for(var i=+t.length,n=0,r=e.length;i>n;)e[r++]=t[n++];if(i!==i)for(;void 0!==t[n];)e[r++]=t[n++];return e.length=r,e},grep:function(e,t,i){for(var n,r=[],o=0,s=e.length,a=!i;s>o;o++)n=!t(e[o],o),n!==a&&r.push(e[o]);return r},map:function(e,t,n){var r,o=0,s=e.length,a=i(e),l=[];if(a)for(;s>o;o++)r=t(e[o],o,n),null!=r&&l.push(r);else for(o in e)r=t(e[o],o,n),null!=r&&l.push(r);return Z.apply([],l)},guid:1,proxy:function(e,t){var i,n,r;return"string"==typeof t&&(r=e[t],t=e,e=r),rt.isFunction(e)?(i=V.call(arguments,2),n=function(){return e.apply(t||this,i.concat(V.call(arguments)))},n.guid=e.guid=e.guid||rt.guid++,n):void 0},now:function(){return+new Date},support:it}),rt.each("Boolean Number String Function Array Date RegExp Object Error".split(" "),function(e,t){K["[object "+t+"]"]=t.toLowerCase()});var ut=function(e){function t(e,t,i,n){var r,o,s,a,l,u,h,f,p,g;if((t?t.ownerDocument||t:X)!==R&&M(t),t=t||R,i=i||[],!e||"string"!=typeof e)return i;if(1!==(a=t.nodeType)&&9!==a)return[];if(E&&!n){if(r=vt.exec(e))if(s=r[1]){if(9===a){if(o=t.getElementById(s),!o||!o.parentNode)return i;if(o.id===s)return i.push(o),i}else if(t.ownerDocument&&(o=t.ownerDocument.getElementById(s))&&I(t,o)&&o.id===s)return i.push(o),i}else{if(r[2])return K.apply(i,t.getElementsByTagName(e)),i;if((s=r[3])&&x.getElementsByClassName&&t.getElementsByClassName)return K.apply(i,t.getElementsByClassName(s)),i}if(x.qsa&&(!L||!L.test(e))){if(f=h=z,p=t,g=9===a&&e,1===a&&"object"!==t.nodeName.toLowerCase()){for(u=S(e),(h=t.getAttribute("id"))?f=h.replace(bt,"\\$&"):t.setAttribute("id",f),f="[id='"+f+"'] ",l=u.length;l--;)u[l]=f+d(u[l]);p=yt.test(e)&&c(t.parentNode)||t,g=u.join(",")}if(g)try{return K.apply(i,p.querySelectorAll(g)),i}catch(m){}finally{h||t.removeAttribute("id")}}}return P(e.replace(lt,"$1"),t,i,n)}function i(){function e(i,n){return t.push(i+" ")>w.cacheLength&&delete e[t.shift()],e[i+" "]=n}var t=[];return e}function n(e){return e[z]=!0,e}function r(e){var t=R.createElement("div");try{return!!e(t)}catch(i){return!1}finally{t.parentNode&&t.parentNode.removeChild(t),t=null}}function o(e,t){for(var i=e.split("|"),n=e.length;n--;)w.attrHandle[i[n]]=t}function s(e,t){var i=t&&e,n=i&&1===e.nodeType&&1===t.nodeType&&(~t.sourceIndex||$)-(~e.sourceIndex||$);if(n)return n;if(i)for(;i=i.nextSibling;)if(i===t)return-1;return e?1:-1}function a(e){return function(t){var i=t.nodeName.toLowerCase();return"input"===i&&t.type===e}}function l(e){return function(t){var i=t.nodeName.toLowerCase();return("input"===i||"button"===i)&&t.type===e}}function u(e){return n(function(t){return t=+t,n(function(i,n){for(var r,o=e([],i.length,t),s=o.length;s--;)i[r=o[s]]&&(i[r]=!(n[r]=i[r]))})})}function c(e){return e&&typeof e.getElementsByTagName!==U&&e}function h(){}function d(e){for(var t=0,i=e.length,n="";i>t;t++)n+=e[t].value;return n}function f(e,t,i){var n=t.dir,r=i&&"parentNode"===n,o=H++;return t.first?function(t,i,o){for(;t=t[n];)if(1===t.nodeType||r)return e(t,i,o)}:function(t,i,s){var a,l,u=[B,o];if(s){for(;t=t[n];)if((1===t.nodeType||r)&&e(t,i,s))return!0}else for(;t=t[n];)if(1===t.nodeType||r){if(l=t[z]||(t[z]={}),(a=l[n])&&a[0]===B&&a[1]===o)return u[2]=a[2];if(l[n]=u,u[2]=e(t,i,s))return!0}}}function p(e){return e.length>1?function(t,i,n){for(var r=e.length;r--;)if(!e[r](t,i,n))return!1;return!0}:e[0]}function g(e,i,n){for(var r=0,o=i.length;o>r;r++)t(e,i[r],n);return n}function m(e,t,i,n,r){for(var o,s=[],a=0,l=e.length,u=null!=t;l>a;a++)(o=e[a])&&(!i||i(o,n,r))&&(s.push(o),u&&t.push(a));return s}function _(e,t,i,r,o,s){return r&&!r[z]&&(r=_(r)),o&&!o[z]&&(o=_(o,s)),n(function(n,s,a,l){var u,c,h,d=[],f=[],p=s.length,_=n||g(t||"*",a.nodeType?[a]:a,[]),v=!e||!n&&t?_:m(_,d,e,a,l),y=i?o||(n?e:p||r)?[]:s:v;if(i&&i(v,y,a,l),r)for(u=m(y,f),r(u,[],a,l),c=u.length;c--;)(h=u[c])&&(y[f[c]]=!(v[f[c]]=h));if(n){if(o||e){if(o){for(u=[],c=y.length;c--;)(h=y[c])&&u.push(v[c]=h);o(null,y=[],u,l)}for(c=y.length;c--;)(h=y[c])&&(u=o?tt.call(n,h):d[c])>-1&&(n[u]=!(s[u]=h))}}else y=m(y===s?y.splice(p,y.length):y),o?o(null,s,y,l):K.apply(s,y)})}function v(e){for(var t,i,n,r=e.length,o=w.relative[e[0].type],s=o||w.relative[" "],a=o?1:0,l=f(function(e){return e===t},s,!0),u=f(function(e){return tt.call(t,e)>-1},s,!0),c=[function(e,i,n){return!o&&(n||i!==A)||((t=i).nodeType?l(e,i,n):u(e,i,n))}];r>a;a++)if(i=w.relative[e[a].type])c=[f(p(c),i)];else{if(i=w.filter[e[a].type].apply(null,e[a].matches),i[z]){for(n=++a;r>n&&!w.relative[e[n].type];n++);return _(a>1&&p(c),a>1&&d(e.slice(0,a-1).concat({value:" "===e[a-2].type?"*":""})).replace(lt,"$1"),i,n>a&&v(e.slice(a,n)),r>n&&v(e=e.slice(n)),r>n&&d(e))}c.push(i)}return p(c)}function y(e,i){var r=i.length>0,o=e.length>0,s=function(n,s,a,l,u){var c,h,d,f=0,p="0",g=n&&[],_=[],v=A,y=n||o&&w.find.TAG("*",u),b=B+=null==v?1:Math.random()||.1,x=y.length;for(u&&(A=s!==R&&s);p!==x&&null!=(c=y[p]);p++){if(o&&c){for(h=0;d=e[h++];)if(d(c,s,a)){l.push(c);break}u&&(B=b)}r&&((c=!d&&c)&&f--,n&&g.push(c))}if(f+=p,r&&p!==f){for(h=0;d=i[h++];)d(g,_,s,a);if(n){if(f>0)for(;p--;)g[p]||_[p]||(_[p]=G.call(l));_=m(_)}K.apply(l,_),u&&!n&&_.length>0&&f+i.length>1&&t.uniqueSort(l)}return u&&(B=b,A=v),g};return r?n(s):s}var b,x,w,T,k,S,C,P,A,O,D,M,R,N,E,L,j,F,I,z="sizzle"+-new Date,X=e.document,B=0,H=0,Y=i(),q=i(),W=i(),Q=function(e,t){return e===t&&(D=!0),0},U="undefined",$=1<<31,V={}.hasOwnProperty,Z=[],G=Z.pop,J=Z.push,K=Z.push,et=Z.slice,tt=Z.indexOf||function(e){for(var t=0,i=this.length;i>t;t++)if(this[t]===e)return t;return-1},it="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|repeat|multiple|open|readonly|required|scoped",nt="[\\x20\\t\\r\\n\\f]",rt="(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",ot=rt.replace("w","w#"),st="\\["+nt+"*("+rt+")(?:"+nt+"*([*^$|!~]?=)"+nt+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+ot+"))|)"+nt+"*\\]",at=":("+rt+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+st+")*)|.*)\\)|)",lt=new RegExp("^"+nt+"+|((?:^|[^\\\\])(?:\\\\.)*)"+nt+"+$","g"),ut=new RegExp("^"+nt+"*,"+nt+"*"),ct=new RegExp("^"+nt+"*([>+~]|"+nt+")"+nt+"*"),ht=new RegExp("="+nt+"*([^\\]'\"]*?)"+nt+"*\\]","g"),dt=new RegExp(at),ft=new RegExp("^"+ot+"$"),pt={ID:new RegExp("^#("+rt+")"),CLASS:new RegExp("^\\.("+rt+")"),TAG:new RegExp("^("+rt.replace("w","w*")+")"),ATTR:new RegExp("^"+st),PSEUDO:new RegExp("^"+at),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+nt+"*(even|odd|(([+-]|)(\\d*)n|)"+nt+"*(?:([+-]|)"+nt+"*(\\d+)|))"+nt+"*\\)|)","i"),bool:new RegExp("^(?:"+it+")$","i"),needsContext:new RegExp("^"+nt+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+nt+"*((?:-\\d)?\\d*)"+nt+"*\\)|)(?=[^-]|$)","i")},gt=/^(?:input|select|textarea|button)$/i,mt=/^h\d$/i,_t=/^[^{]+\{\s*\[native \w/,vt=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,yt=/[+~]/,bt=/'|\\/g,xt=new RegExp("\\\\([\\da-f]{1,6}"+nt+"?|("+nt+")|.)","ig"),wt=function(e,t,i){var n="0x"+t-65536;return n!==n||i?t:0>n?String.fromCharCode(n+65536):String.fromCharCode(n>>10|55296,1023&n|56320)};try{K.apply(Z=et.call(X.childNodes),X.childNodes),Z[X.childNodes.length].nodeType}catch(Tt){K={apply:Z.length?function(e,t){J.apply(e,et.call(t))}:function(e,t){for(var i=e.length,n=0;e[i++]=t[n++];);e.length=i-1}}}x=t.support={},k=t.isXML=function(e){var t=e&&(e.ownerDocument||e).documentElement;return t?"HTML"!==t.nodeName:!1},M=t.setDocument=function(e){var t,i=e?e.ownerDocument||e:X,n=i.defaultView;return i!==R&&9===i.nodeType&&i.documentElement?(R=i,N=i.documentElement,E=!k(i),n&&n!==n.top&&(n.addEventListener?n.addEventListener("unload",function(){M()},!1):n.attachEvent&&n.attachEvent("onunload",function(){M()})),x.attributes=r(function(e){return e.className="i",!e.getAttribute("className")}),x.getElementsByTagName=r(function(e){return e.appendChild(i.createComment("")),!e.getElementsByTagName("*").length}),x.getElementsByClassName=_t.test(i.getElementsByClassName)&&r(function(e){return e.innerHTML="<div class='a'></div><div class='a i'></div>",e.firstChild.className="i",2===e.getElementsByClassName("i").length}),x.getById=r(function(e){return N.appendChild(e).id=z,!i.getElementsByName||!i.getElementsByName(z).length}),x.getById?(w.find.ID=function(e,t){if(typeof t.getElementById!==U&&E){var i=t.getElementById(e);return i&&i.parentNode?[i]:[]}},w.filter.ID=function(e){var t=e.replace(xt,wt);return function(e){return e.getAttribute("id")===t}}):(delete w.find.ID,w.filter.ID=function(e){var t=e.replace(xt,wt);return function(e){var i=typeof e.getAttributeNode!==U&&e.getAttributeNode("id");return i&&i.value===t}}),w.find.TAG=x.getElementsByTagName?function(e,t){return typeof t.getElementsByTagName!==U?t.getElementsByTagName(e):void 0}:function(e,t){var i,n=[],r=0,o=t.getElementsByTagName(e);if("*"===e){for(;i=o[r++];)1===i.nodeType&&n.push(i);return n}return o},w.find.CLASS=x.getElementsByClassName&&function(e,t){return typeof t.getElementsByClassName!==U&&E?t.getElementsByClassName(e):void 0},j=[],L=[],(x.qsa=_t.test(i.querySelectorAll))&&(r(function(e){e.innerHTML="<select msallowclip=''><option selected=''></option></select>",e.querySelectorAll("[msallowclip^='']").length&&L.push("[*^$]="+nt+"*(?:''|\"\")"),e.querySelectorAll("[selected]").length||L.push("\\["+nt+"*(?:value|"+it+")"),e.querySelectorAll(":checked").length||L.push(":checked")}),r(function(e){var t=i.createElement("input");t.setAttribute("type","hidden"),e.appendChild(t).setAttribute("name","D"),e.querySelectorAll("[name=d]").length&&L.push("name"+nt+"*[*^$|!~]?="),e.querySelectorAll(":enabled").length||L.push(":enabled",":disabled"),e.querySelectorAll("*,:x"),L.push(",.*:")})),(x.matchesSelector=_t.test(F=N.matches||N.webkitMatchesSelector||N.mozMatchesSelector||N.oMatchesSelector||N.msMatchesSelector))&&r(function(e){x.disconnectedMatch=F.call(e,"div"),F.call(e,"[s!='']:x"),j.push("!=",at)}),L=L.length&&new RegExp(L.join("|")),j=j.length&&new RegExp(j.join("|")),t=_t.test(N.compareDocumentPosition),I=t||_t.test(N.contains)?function(e,t){var i=9===e.nodeType?e.documentElement:e,n=t&&t.parentNode;return e===n||!(!n||1!==n.nodeType||!(i.contains?i.contains(n):e.compareDocumentPosition&&16&e.compareDocumentPosition(n)))}:function(e,t){if(t)for(;t=t.parentNode;)if(t===e)return!0;return!1},Q=t?function(e,t){if(e===t)return D=!0,0;var n=!e.compareDocumentPosition-!t.compareDocumentPosition;return n?n:(n=(e.ownerDocument||e)===(t.ownerDocument||t)?e.compareDocumentPosition(t):1,1&n||!x.sortDetached&&t.compareDocumentPosition(e)===n?e===i||e.ownerDocument===X&&I(X,e)?-1:t===i||t.ownerDocument===X&&I(X,t)?1:O?tt.call(O,e)-tt.call(O,t):0:4&n?-1:1)}:function(e,t){if(e===t)return D=!0,0;var n,r=0,o=e.parentNode,a=t.parentNode,l=[e],u=[t];if(!o||!a)return e===i?-1:t===i?1:o?-1:a?1:O?tt.call(O,e)-tt.call(O,t):0;if(o===a)return s(e,t);for(n=e;n=n.parentNode;)l.unshift(n);for(n=t;n=n.parentNode;)u.unshift(n);for(;l[r]===u[r];)r++;return r?s(l[r],u[r]):l[r]===X?-1:u[r]===X?1:0},i):R},t.matches=function(e,i){return t(e,null,null,i)},t.matchesSelector=function(e,i){if((e.ownerDocument||e)!==R&&M(e),i=i.replace(ht,"='$1']"),!(!x.matchesSelector||!E||j&&j.test(i)||L&&L.test(i)))try{var n=F.call(e,i);if(n||x.disconnectedMatch||e.document&&11!==e.document.nodeType)return n}catch(r){}return t(i,R,null,[e]).length>0},t.contains=function(e,t){return(e.ownerDocument||e)!==R&&M(e),I(e,t)},t.attr=function(e,t){(e.ownerDocument||e)!==R&&M(e);var i=w.attrHandle[t.toLowerCase()],n=i&&V.call(w.attrHandle,t.toLowerCase())?i(e,t,!E):void 0;return void 0!==n?n:x.attributes||!E?e.getAttribute(t):(n=e.getAttributeNode(t))&&n.specified?n.value:null},t.error=function(e){throw new Error("Syntax error, unrecognized expression: "+e)},t.uniqueSort=function(e){var t,i=[],n=0,r=0;if(D=!x.detectDuplicates,O=!x.sortStable&&e.slice(0),e.sort(Q),D){for(;t=e[r++];)t===e[r]&&(n=i.push(r));for(;n--;)e.splice(i[n],1)}return O=null,e},T=t.getText=function(e){var t,i="",n=0,r=e.nodeType;if(r){if(1===r||9===r||11===r){if("string"==typeof e.textContent)return e.textContent;for(e=e.firstChild;e;e=e.nextSibling)i+=T(e)}else if(3===r||4===r)return e.nodeValue}else for(;t=e[n++];)i+=T(t);return i},w=t.selectors={cacheLength:50,createPseudo:n,match:pt,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(e){return e[1]=e[1].replace(xt,wt),e[3]=(e[3]||e[4]||e[5]||"").replace(xt,wt),"~="===e[2]&&(e[3]=" "+e[3]+" "),e.slice(0,4)},CHILD:function(e){return e[1]=e[1].toLowerCase(),"nth"===e[1].slice(0,3)?(e[3]||t.error(e[0]),e[4]=+(e[4]?e[5]+(e[6]||1):2*("even"===e[3]||"odd"===e[3])),e[5]=+(e[7]+e[8]||"odd"===e[3])):e[3]&&t.error(e[0]),e},PSEUDO:function(e){var t,i=!e[6]&&e[2];return pt.CHILD.test(e[0])?null:(e[3]?e[2]=e[4]||e[5]||"":i&&dt.test(i)&&(t=S(i,!0))&&(t=i.indexOf(")",i.length-t)-i.length)&&(e[0]=e[0].slice(0,t),e[2]=i.slice(0,t)),e.slice(0,3))}},filter:{TAG:function(e){var t=e.replace(xt,wt).toLowerCase();return"*"===e?function(){return!0}:function(e){return e.nodeName&&e.nodeName.toLowerCase()===t}},CLASS:function(e){var t=Y[e+" "];return t||(t=new RegExp("(^|"+nt+")"+e+"("+nt+"|$)"))&&Y(e,function(e){return t.test("string"==typeof e.className&&e.className||typeof e.getAttribute!==U&&e.getAttribute("class")||"")})},ATTR:function(e,i,n){return function(r){var o=t.attr(r,e);return null==o?"!="===i:i?(o+="","="===i?o===n:"!="===i?o!==n:"^="===i?n&&0===o.indexOf(n):"*="===i?n&&o.indexOf(n)>-1:"$="===i?n&&o.slice(-n.length)===n:"~="===i?(" "+o+" ").indexOf(n)>-1:"|="===i?o===n||o.slice(0,n.length+1)===n+"-":!1):!0}},CHILD:function(e,t,i,n,r){var o="nth"!==e.slice(0,3),s="last"!==e.slice(-4),a="of-type"===t;return 1===n&&0===r?function(e){return!!e.parentNode}:function(t,i,l){var u,c,h,d,f,p,g=o!==s?"nextSibling":"previousSibling",m=t.parentNode,_=a&&t.nodeName.toLowerCase(),v=!l&&!a;if(m){if(o){for(;g;){for(h=t;h=h[g];)if(a?h.nodeName.toLowerCase()===_:1===h.nodeType)return!1;p=g="only"===e&&!p&&"nextSibling"}return!0}if(p=[s?m.firstChild:m.lastChild],s&&v){for(c=m[z]||(m[z]={}),u=c[e]||[],f=u[0]===B&&u[1],d=u[0]===B&&u[2],h=f&&m.childNodes[f];h=++f&&h&&h[g]||(d=f=0)||p.pop();)if(1===h.nodeType&&++d&&h===t){c[e]=[B,f,d];break}}else if(v&&(u=(t[z]||(t[z]={}))[e])&&u[0]===B)d=u[1];else for(;(h=++f&&h&&h[g]||(d=f=0)||p.pop())&&((a?h.nodeName.toLowerCase()!==_:1!==h.nodeType)||!++d||(v&&((h[z]||(h[z]={}))[e]=[B,d]),h!==t)););return d-=r,d===n||d%n===0&&d/n>=0}}},PSEUDO:function(e,i){var r,o=w.pseudos[e]||w.setFilters[e.toLowerCase()]||t.error("unsupported pseudo: "+e);return o[z]?o(i):o.length>1?(r=[e,e,"",i],w.setFilters.hasOwnProperty(e.toLowerCase())?n(function(e,t){for(var n,r=o(e,i),s=r.length;s--;)n=tt.call(e,r[s]),e[n]=!(t[n]=r[s])}):function(e){return o(e,0,r)}):o}},pseudos:{not:n(function(e){var t=[],i=[],r=C(e.replace(lt,"$1"));return r[z]?n(function(e,t,i,n){for(var o,s=r(e,null,n,[]),a=e.length;a--;)(o=s[a])&&(e[a]=!(t[a]=o))}):function(e,n,o){return t[0]=e,r(t,null,o,i),!i.pop()}}),has:n(function(e){return function(i){return t(e,i).length>0}}),contains:n(function(e){return function(t){return(t.textContent||t.innerText||T(t)).indexOf(e)>-1}}),lang:n(function(e){return ft.test(e||"")||t.error("unsupported lang: "+e),e=e.replace(xt,wt).toLowerCase(),function(t){var i;do if(i=E?t.lang:t.getAttribute("xml:lang")||t.getAttribute("lang"))return i=i.toLowerCase(),i===e||0===i.indexOf(e+"-");while((t=t.parentNode)&&1===t.nodeType);return!1}}),target:function(t){var i=e.location&&e.location.hash;return i&&i.slice(1)===t.id},root:function(e){return e===N},focus:function(e){return e===R.activeElement&&(!R.hasFocus||R.hasFocus())&&!!(e.type||e.href||~e.tabIndex)},enabled:function(e){return e.disabled===!1},disabled:function(e){return e.disabled===!0},checked:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&!!e.checked||"option"===t&&!!e.selected},selected:function(e){return e.parentNode&&e.parentNode.selectedIndex,e.selected===!0},empty:function(e){for(e=e.firstChild;e;e=e.nextSibling)if(e.nodeType<6)return!1;return!0},parent:function(e){return!w.pseudos.empty(e)},header:function(e){return mt.test(e.nodeName)},input:function(e){return gt.test(e.nodeName)},button:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&"button"===e.type||"button"===t},text:function(e){var t;return"input"===e.nodeName.toLowerCase()&&"text"===e.type&&(null==(t=e.getAttribute("type"))||"text"===t.toLowerCase())},first:u(function(){return[0]}),last:u(function(e,t){return[t-1]}),eq:u(function(e,t,i){return[0>i?i+t:i]}),even:u(function(e,t){for(var i=0;t>i;i+=2)e.push(i);return e}),odd:u(function(e,t){for(var i=1;t>i;i+=2)e.push(i);return e}),lt:u(function(e,t,i){for(var n=0>i?i+t:i;--n>=0;)e.push(n);return e}),gt:u(function(e,t,i){for(var n=0>i?i+t:i;++n<t;)e.push(n);return e})}},w.pseudos.nth=w.pseudos.eq;for(b in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})w.pseudos[b]=a(b);for(b in{submit:!0,reset:!0})w.pseudos[b]=l(b);return h.prototype=w.filters=w.pseudos,w.setFilters=new h,S=t.tokenize=function(e,i){var n,r,o,s,a,l,u,c=q[e+" "];if(c)return i?0:c.slice(0);for(a=e,l=[],u=w.preFilter;a;){(!n||(r=ut.exec(a)))&&(r&&(a=a.slice(r[0].length)||a),l.push(o=[])),n=!1,(r=ct.exec(a))&&(n=r.shift(),o.push({value:n,type:r[0].replace(lt," ")}),a=a.slice(n.length));for(s in w.filter)!(r=pt[s].exec(a))||u[s]&&!(r=u[s](r))||(n=r.shift(),o.push({value:n,type:s,matches:r}),a=a.slice(n.length));if(!n)break}return i?a.length:a?t.error(e):q(e,l).slice(0)},C=t.compile=function(e,t){var i,n=[],r=[],o=W[e+" "];if(!o){for(t||(t=S(e)),i=t.length;i--;)o=v(t[i]),o[z]?n.push(o):r.push(o);o=W(e,y(r,n)),o.selector=e}return o},P=t.select=function(e,t,i,n){var r,o,s,a,l,u="function"==typeof e&&e,h=!n&&S(e=u.selector||e);if(i=i||[],1===h.length){if(o=h[0]=h[0].slice(0),o.length>2&&"ID"===(s=o[0]).type&&x.getById&&9===t.nodeType&&E&&w.relative[o[1].type]){if(t=(w.find.ID(s.matches[0].replace(xt,wt),t)||[])[0],!t)return i;u&&(t=t.parentNode),e=e.slice(o.shift().value.length)}for(r=pt.needsContext.test(e)?0:o.length;r--&&(s=o[r],!w.relative[a=s.type]);)if((l=w.find[a])&&(n=l(s.matches[0].replace(xt,wt),yt.test(o[0].type)&&c(t.parentNode)||t))){if(o.splice(r,1),e=n.length&&d(o),!e)return K.apply(i,n),i;break}}return(u||C(e,h))(n,t,!E,i,yt.test(e)&&c(t.parentNode)||t),i},x.sortStable=z.split("").sort(Q).join("")===z,x.detectDuplicates=!!D,M(),x.sortDetached=r(function(e){return 1&e.compareDocumentPosition(R.createElement("div"))}),r(function(e){return e.innerHTML="<a href='#'></a>","#"===e.firstChild.getAttribute("href")})||o("type|href|height|width",function(e,t,i){return i?void 0:e.getAttribute(t,"type"===t.toLowerCase()?1:2)}),x.attributes&&r(function(e){return e.innerHTML="<input/>",e.firstChild.setAttribute("value",""),""===e.firstChild.getAttribute("value")})||o("value",function(e,t,i){return i||"input"!==e.nodeName.toLowerCase()?void 0:e.defaultValue}),r(function(e){return null==e.getAttribute("disabled")})||o(it,function(e,t,i){var n;return i?void 0:e[t]===!0?t.toLowerCase():(n=e.getAttributeNode(t))&&n.specified?n.value:null}),t}(e);rt.find=ut,rt.expr=ut.selectors,rt.expr[":"]=rt.expr.pseudos,rt.unique=ut.uniqueSort,rt.text=ut.getText,rt.isXMLDoc=ut.isXML,rt.contains=ut.contains;var ct=rt.expr.match.needsContext,ht=/^<(\w+)\s*\/?>(?:<\/\1>|)$/,dt=/^.[^:#\[\.,]*$/;rt.filter=function(e,t,i){var n=t[0];return i&&(e=":not("+e+")"),1===t.length&&1===n.nodeType?rt.find.matchesSelector(n,e)?[n]:[]:rt.find.matches(e,rt.grep(t,function(e){return 1===e.nodeType}))},rt.fn.extend({find:function(e){var t,i=[],n=this,r=n.length;if("string"!=typeof e)return this.pushStack(rt(e).filter(function(){for(t=0;r>t;t++)if(rt.contains(n[t],this))return!0}));for(t=0;r>t;t++)rt.find(e,n[t],i);return i=this.pushStack(r>1?rt.unique(i):i),i.selector=this.selector?this.selector+" "+e:e,i},filter:function(e){return this.pushStack(n(this,e||[],!1))},not:function(e){return this.pushStack(n(this,e||[],!0))},is:function(e){return!!n(this,"string"==typeof e&&ct.test(e)?rt(e):e||[],!1).length}});var ft,pt=e.document,gt=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/,mt=rt.fn.init=function(e,t){var i,n;if(!e)return this;if("string"==typeof e){if(i="<"===e.charAt(0)&&">"===e.charAt(e.length-1)&&e.length>=3?[null,e,null]:gt.exec(e),!i||!i[1]&&t)return!t||t.jquery?(t||ft).find(e):this.constructor(t).find(e);if(i[1]){if(t=t instanceof rt?t[0]:t,rt.merge(this,rt.parseHTML(i[1],t&&t.nodeType?t.ownerDocument||t:pt,!0)),ht.test(i[1])&&rt.isPlainObject(t))for(i in t)rt.isFunction(this[i])?this[i](t[i]):this.attr(i,t[i]);return this}if(n=pt.getElementById(i[2]),n&&n.parentNode){if(n.id!==i[2])return ft.find(e);this.length=1,this[0]=n}return this.context=pt,this.selector=e,this}return e.nodeType?(this.context=this[0]=e,this.length=1,this):rt.isFunction(e)?"undefined"!=typeof ft.ready?ft.ready(e):e(rt):(void 0!==e.selector&&(this.selector=e.selector,this.context=e.context),rt.makeArray(e,this))};mt.prototype=rt.fn,ft=rt(pt);var _t=/^(?:parents|prev(?:Until|All))/,vt={children:!0,contents:!0,next:!0,prev:!0};rt.extend({dir:function(e,t,i){for(var n=[],r=e[t];r&&9!==r.nodeType&&(void 0===i||1!==r.nodeType||!rt(r).is(i));)1===r.nodeType&&n.push(r),r=r[t];return n},sibling:function(e,t){for(var i=[];e;e=e.nextSibling)1===e.nodeType&&e!==t&&i.push(e);return i}}),rt.fn.extend({has:function(e){var t,i=rt(e,this),n=i.length;return this.filter(function(){for(t=0;n>t;t++)if(rt.contains(this,i[t]))return!0})},closest:function(e,t){for(var i,n=0,r=this.length,o=[],s=ct.test(e)||"string"!=typeof e?rt(e,t||this.context):0;r>n;n++)for(i=this[n];i&&i!==t;i=i.parentNode)if(i.nodeType<11&&(s?s.index(i)>-1:1===i.nodeType&&rt.find.matchesSelector(i,e))){o.push(i);break}return this.pushStack(o.length>1?rt.unique(o):o)},index:function(e){return e?"string"==typeof e?rt.inArray(this[0],rt(e)):rt.inArray(e.jquery?e[0]:e,this):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(e,t){return this.pushStack(rt.unique(rt.merge(this.get(),rt(e,t))))},addBack:function(e){return this.add(null==e?this.prevObject:this.prevObject.filter(e))}}),rt.each({parent:function(e){var t=e.parentNode;return t&&11!==t.nodeType?t:null},parents:function(e){return rt.dir(e,"parentNode")},parentsUntil:function(e,t,i){return rt.dir(e,"parentNode",i)},next:function(e){return r(e,"nextSibling")},prev:function(e){return r(e,"previousSibling")},nextAll:function(e){return rt.dir(e,"nextSibling")},prevAll:function(e){return rt.dir(e,"previousSibling")},nextUntil:function(e,t,i){return rt.dir(e,"nextSibling",i)},prevUntil:function(e,t,i){return rt.dir(e,"previousSibling",i)},siblings:function(e){return rt.sibling((e.parentNode||{}).firstChild,e)},children:function(e){return rt.sibling(e.firstChild)},contents:function(e){return rt.nodeName(e,"iframe")?e.contentDocument||e.contentWindow.document:rt.merge([],e.childNodes)}},function(e,t){rt.fn[e]=function(i,n){var r=rt.map(this,t,i);return"Until"!==e.slice(-5)&&(n=i),n&&"string"==typeof n&&(r=rt.filter(n,r)),this.length>1&&(vt[e]||(r=rt.unique(r)),_t.test(e)&&(r=r.reverse())),this.pushStack(r)}});var yt=/\S+/g,bt={};rt.Callbacks=function(e){e="string"==typeof e?bt[e]||o(e):rt.extend({},e);var t,i,n,r,s,a,l=[],u=!e.once&&[],c=function(o){for(i=e.memory&&o,n=!0,s=a||0,a=0,r=l.length,t=!0;l&&r>s;s++)if(l[s].apply(o[0],o[1])===!1&&e.stopOnFalse){i=!1;break}t=!1,l&&(u?u.length&&c(u.shift()):i?l=[]:h.disable())},h={add:function(){if(l){var n=l.length;!function o(t){rt.each(t,function(t,i){var n=rt.type(i);"function"===n?e.unique&&h.has(i)||l.push(i):i&&i.length&&"string"!==n&&o(i)})}(arguments),t?r=l.length:i&&(a=n,c(i))}return this},remove:function(){return l&&rt.each(arguments,function(e,i){for(var n;(n=rt.inArray(i,l,n))>-1;)l.splice(n,1),t&&(r>=n&&r--,s>=n&&s--)}),this},has:function(e){return e?rt.inArray(e,l)>-1:!(!l||!l.length)},empty:function(){return l=[],r=0,this},disable:function(){return l=u=i=void 0,this},disabled:function(){return!l},lock:function(){return u=void 0,i||h.disable(),this},locked:function(){return!u},fireWith:function(e,i){return!l||n&&!u||(i=i||[],i=[e,i.slice?i.slice():i],t?u.push(i):c(i)),this},fire:function(){return h.fireWith(this,arguments),this},fired:function(){return!!n}};return h},rt.extend({Deferred:function(e){var t=[["resolve","done",rt.Callbacks("once memory"),"resolved"],["reject","fail",rt.Callbacks("once memory"),"rejected"],["notify","progress",rt.Callbacks("memory")]],i="pending",n={state:function(){return i},always:function(){return r.done(arguments).fail(arguments),this},then:function(){var e=arguments;return rt.Deferred(function(i){rt.each(t,function(t,o){var s=rt.isFunction(e[t])&&e[t];r[o[1]](function(){var e=s&&s.apply(this,arguments);e&&rt.isFunction(e.promise)?e.promise().done(i.resolve).fail(i.reject).progress(i.notify):i[o[0]+"With"](this===n?i.promise():this,s?[e]:arguments)})}),e=null}).promise()},promise:function(e){return null!=e?rt.extend(e,n):n}},r={};return n.pipe=n.then,rt.each(t,function(e,o){var s=o[2],a=o[3];n[o[1]]=s.add,a&&s.add(function(){i=a},t[1^e][2].disable,t[2][2].lock),r[o[0]]=function(){return r[o[0]+"With"](this===r?n:this,arguments),this},r[o[0]+"With"]=s.fireWith}),n.promise(r),e&&e.call(r,r),r},when:function(e){var t,i,n,r=0,o=V.call(arguments),s=o.length,a=1!==s||e&&rt.isFunction(e.promise)?s:0,l=1===a?e:rt.Deferred(),u=function(e,i,n){return function(r){i[e]=this,n[e]=arguments.length>1?V.call(arguments):r,n===t?l.notifyWith(i,n):--a||l.resolveWith(i,n)}};if(s>1)for(t=new Array(s),i=new Array(s),n=new Array(s);s>r;r++)o[r]&&rt.isFunction(o[r].promise)?o[r].promise().done(u(r,n,o)).fail(l.reject).progress(u(r,i,t)):--a;return a||l.resolveWith(n,o),l.promise()}});var xt;rt.fn.ready=function(e){return rt.ready.promise().done(e),this},rt.extend({isReady:!1,readyWait:1,holdReady:function(e){e?rt.readyWait++:rt.ready(!0)},ready:function(e){if(e===!0?!--rt.readyWait:!rt.isReady){if(!pt.body)return setTimeout(rt.ready);rt.isReady=!0,e!==!0&&--rt.readyWait>0||(xt.resolveWith(pt,[rt]),rt.fn.triggerHandler&&(rt(pt).triggerHandler("ready"),rt(pt).off("ready")))}}}),rt.ready.promise=function(t){if(!xt)if(xt=rt.Deferred(),"complete"===pt.readyState)setTimeout(rt.ready);else if(pt.addEventListener)pt.addEventListener("DOMContentLoaded",a,!1),e.addEventListener("load",a,!1);else{pt.attachEvent("onreadystatechange",a),e.attachEvent("onload",a);var i=!1;try{i=null==e.frameElement&&pt.documentElement}catch(n){}i&&i.doScroll&&!function r(){if(!rt.isReady){try{i.doScroll("left")}catch(e){return setTimeout(r,50)}s(),rt.ready()}}()}return xt.promise(t)};var wt,Tt="undefined";for(wt in rt(it))break;it.ownLast="0"!==wt,it.inlineBlockNeedsLayout=!1,rt(function(){var e,t,i,n;i=pt.getElementsByTagName("body")[0],i&&i.style&&(t=pt.createElement("div"),n=pt.createElement("div"),n.style.cssText="position:absolute;border:0;width:0;height:0;top:0;left:-9999px",i.appendChild(n).appendChild(t),typeof t.style.zoom!==Tt&&(t.style.cssText="display:inline;margin:0;border:0;padding:1px;width:1px;zoom:1",it.inlineBlockNeedsLayout=e=3===t.offsetWidth,e&&(i.style.zoom=1)),i.removeChild(n))}),function(){var e=pt.createElement("div");if(null==it.deleteExpando){it.deleteExpando=!0;try{delete e.test}catch(t){it.deleteExpando=!1}}e=null}(),rt.acceptData=function(e){var t=rt.noData[(e.nodeName+" ").toLowerCase()],i=+e.nodeType||1;return 1!==i&&9!==i?!1:!t||t!==!0&&e.getAttribute("classid")===t};var kt=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,St=/([A-Z])/g;rt.extend({cache:{},noData:{"applet ":!0,"embed ":!0,"object ":"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"},hasData:function(e){return e=e.nodeType?rt.cache[e[rt.expando]]:e[rt.expando],!!e&&!u(e)},data:function(e,t,i){return c(e,t,i)},removeData:function(e,t){return h(e,t)},_data:function(e,t,i){return c(e,t,i,!0)},_removeData:function(e,t){return h(e,t,!0)}}),rt.fn.extend({data:function(e,t){var i,n,r,o=this[0],s=o&&o.attributes;if(void 0===e){if(this.length&&(r=rt.data(o),1===o.nodeType&&!rt._data(o,"parsedAttrs"))){for(i=s.length;i--;)s[i]&&(n=s[i].name,0===n.indexOf("data-")&&(n=rt.camelCase(n.slice(5)),l(o,n,r[n])));rt._data(o,"parsedAttrs",!0)}return r}return"object"==typeof e?this.each(function(){rt.data(this,e)}):arguments.length>1?this.each(function(){rt.data(this,e,t)}):o?l(o,e,rt.data(o,e)):void 0},removeData:function(e){return this.each(function(){rt.removeData(this,e)})}}),rt.extend({queue:function(e,t,i){var n;return e?(t=(t||"fx")+"queue",n=rt._data(e,t),i&&(!n||rt.isArray(i)?n=rt._data(e,t,rt.makeArray(i)):n.push(i)),n||[]):void 0},dequeue:function(e,t){t=t||"fx";var i=rt.queue(e,t),n=i.length,r=i.shift(),o=rt._queueHooks(e,t),s=function(){rt.dequeue(e,t)};"inprogress"===r&&(r=i.shift(),n--),r&&("fx"===t&&i.unshift("inprogress"),delete o.stop,r.call(e,s,o)),!n&&o&&o.empty.fire()},_queueHooks:function(e,t){var i=t+"queueHooks";return rt._data(e,i)||rt._data(e,i,{empty:rt.Callbacks("once memory").add(function(){rt._removeData(e,t+"queue"),rt._removeData(e,i)})})}}),rt.fn.extend({queue:function(e,t){var i=2;return"string"!=typeof e&&(t=e,e="fx",i--),arguments.length<i?rt.queue(this[0],e):void 0===t?this:this.each(function(){var i=rt.queue(this,e,t);rt._queueHooks(this,e),"fx"===e&&"inprogress"!==i[0]&&rt.dequeue(this,e)})},dequeue:function(e){return this.each(function(){rt.dequeue(this,e)})},clearQueue:function(e){return this.queue(e||"fx",[])},promise:function(e,t){var i,n=1,r=rt.Deferred(),o=this,s=this.length,a=function(){--n||r.resolveWith(o,[o])};for("string"!=typeof e&&(t=e,e=void 0),e=e||"fx";s--;)i=rt._data(o[s],e+"queueHooks"),i&&i.empty&&(n++,i.empty.add(a));return a(),r.promise(t)}});var Ct=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,Pt=["Top","Right","Bottom","Left"],At=function(e,t){return e=t||e,"none"===rt.css(e,"display")||!rt.contains(e.ownerDocument,e)},Ot=rt.access=function(e,t,i,n,r,o,s){var a=0,l=e.length,u=null==i;if("object"===rt.type(i)){r=!0;for(a in i)rt.access(e,t,a,i[a],!0,o,s)}else if(void 0!==n&&(r=!0,rt.isFunction(n)||(s=!0),u&&(s?(t.call(e,n),t=null):(u=t,t=function(e,t,i){return u.call(rt(e),i)})),t))for(;l>a;a++)t(e[a],i,s?n:n.call(e[a],a,t(e[a],i)));return r?e:u?t.call(e):l?t(e[0],i):o},Dt=/^(?:checkbox|radio)$/i;!function(){var e=pt.createElement("input"),t=pt.createElement("div"),i=pt.createDocumentFragment();if(t.innerHTML="  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>",it.leadingWhitespace=3===t.firstChild.nodeType,it.tbody=!t.getElementsByTagName("tbody").length,it.htmlSerialize=!!t.getElementsByTagName("link").length,it.html5Clone="<:nav></:nav>"!==pt.createElement("nav").cloneNode(!0).outerHTML,e.type="checkbox",e.checked=!0,i.appendChild(e),it.appendChecked=e.checked,t.innerHTML="<textarea>x</textarea>",it.noCloneChecked=!!t.cloneNode(!0).lastChild.defaultValue,i.appendChild(t),t.innerHTML="<input type='radio' checked='checked' name='t'/>",it.checkClone=t.cloneNode(!0).cloneNode(!0).lastChild.checked,it.noCloneEvent=!0,t.attachEvent&&(t.attachEvent("onclick",function(){it.noCloneEvent=!1}),t.cloneNode(!0).click()),null==it.deleteExpando){it.deleteExpando=!0;try{delete t.test}catch(n){it.deleteExpando=!1}}}(),function(){var t,i,n=pt.createElement("div");for(t in{submit:!0,change:!0,focusin:!0})i="on"+t,(it[t+"Bubbles"]=i in e)||(n.setAttribute(i,"t"),it[t+"Bubbles"]=n.attributes[i].expando===!1);
n=null}();var Mt=/^(?:input|select|textarea)$/i,Rt=/^key/,Nt=/^(?:mouse|pointer|contextmenu)|click/,Et=/^(?:focusinfocus|focusoutblur)$/,Lt=/^([^.]*)(?:\.(.+)|)$/;rt.event={global:{},add:function(e,t,i,n,r){var o,s,a,l,u,c,h,d,f,p,g,m=rt._data(e);if(m){for(i.handler&&(l=i,i=l.handler,r=l.selector),i.guid||(i.guid=rt.guid++),(s=m.events)||(s=m.events={}),(c=m.handle)||(c=m.handle=function(e){return typeof rt===Tt||e&&rt.event.triggered===e.type?void 0:rt.event.dispatch.apply(c.elem,arguments)},c.elem=e),t=(t||"").match(yt)||[""],a=t.length;a--;)o=Lt.exec(t[a])||[],f=g=o[1],p=(o[2]||"").split(".").sort(),f&&(u=rt.event.special[f]||{},f=(r?u.delegateType:u.bindType)||f,u=rt.event.special[f]||{},h=rt.extend({type:f,origType:g,data:n,handler:i,guid:i.guid,selector:r,needsContext:r&&rt.expr.match.needsContext.test(r),namespace:p.join(".")},l),(d=s[f])||(d=s[f]=[],d.delegateCount=0,u.setup&&u.setup.call(e,n,p,c)!==!1||(e.addEventListener?e.addEventListener(f,c,!1):e.attachEvent&&e.attachEvent("on"+f,c))),u.add&&(u.add.call(e,h),h.handler.guid||(h.handler.guid=i.guid)),r?d.splice(d.delegateCount++,0,h):d.push(h),rt.event.global[f]=!0);e=null}},remove:function(e,t,i,n,r){var o,s,a,l,u,c,h,d,f,p,g,m=rt.hasData(e)&&rt._data(e);if(m&&(c=m.events)){for(t=(t||"").match(yt)||[""],u=t.length;u--;)if(a=Lt.exec(t[u])||[],f=g=a[1],p=(a[2]||"").split(".").sort(),f){for(h=rt.event.special[f]||{},f=(n?h.delegateType:h.bindType)||f,d=c[f]||[],a=a[2]&&new RegExp("(^|\\.)"+p.join("\\.(?:.*\\.|)")+"(\\.|$)"),l=o=d.length;o--;)s=d[o],!r&&g!==s.origType||i&&i.guid!==s.guid||a&&!a.test(s.namespace)||n&&n!==s.selector&&("**"!==n||!s.selector)||(d.splice(o,1),s.selector&&d.delegateCount--,h.remove&&h.remove.call(e,s));l&&!d.length&&(h.teardown&&h.teardown.call(e,p,m.handle)!==!1||rt.removeEvent(e,f,m.handle),delete c[f])}else for(f in c)rt.event.remove(e,f+t[u],i,n,!0);rt.isEmptyObject(c)&&(delete m.handle,rt._removeData(e,"events"))}},trigger:function(t,i,n,r){var o,s,a,l,u,c,h,d=[n||pt],f=tt.call(t,"type")?t.type:t,p=tt.call(t,"namespace")?t.namespace.split("."):[];if(a=c=n=n||pt,3!==n.nodeType&&8!==n.nodeType&&!Et.test(f+rt.event.triggered)&&(f.indexOf(".")>=0&&(p=f.split("."),f=p.shift(),p.sort()),s=f.indexOf(":")<0&&"on"+f,t=t[rt.expando]?t:new rt.Event(f,"object"==typeof t&&t),t.isTrigger=r?2:3,t.namespace=p.join("."),t.namespace_re=t.namespace?new RegExp("(^|\\.)"+p.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,t.result=void 0,t.target||(t.target=n),i=null==i?[t]:rt.makeArray(i,[t]),u=rt.event.special[f]||{},r||!u.trigger||u.trigger.apply(n,i)!==!1)){if(!r&&!u.noBubble&&!rt.isWindow(n)){for(l=u.delegateType||f,Et.test(l+f)||(a=a.parentNode);a;a=a.parentNode)d.push(a),c=a;c===(n.ownerDocument||pt)&&d.push(c.defaultView||c.parentWindow||e)}for(h=0;(a=d[h++])&&!t.isPropagationStopped();)t.type=h>1?l:u.bindType||f,o=(rt._data(a,"events")||{})[t.type]&&rt._data(a,"handle"),o&&o.apply(a,i),o=s&&a[s],o&&o.apply&&rt.acceptData(a)&&(t.result=o.apply(a,i),t.result===!1&&t.preventDefault());if(t.type=f,!r&&!t.isDefaultPrevented()&&(!u._default||u._default.apply(d.pop(),i)===!1)&&rt.acceptData(n)&&s&&n[f]&&!rt.isWindow(n)){c=n[s],c&&(n[s]=null),rt.event.triggered=f;try{n[f]()}catch(g){}rt.event.triggered=void 0,c&&(n[s]=c)}return t.result}},dispatch:function(e){e=rt.event.fix(e);var t,i,n,r,o,s=[],a=V.call(arguments),l=(rt._data(this,"events")||{})[e.type]||[],u=rt.event.special[e.type]||{};if(a[0]=e,e.delegateTarget=this,!u.preDispatch||u.preDispatch.call(this,e)!==!1){for(s=rt.event.handlers.call(this,e,l),t=0;(r=s[t++])&&!e.isPropagationStopped();)for(e.currentTarget=r.elem,o=0;(n=r.handlers[o++])&&!e.isImmediatePropagationStopped();)(!e.namespace_re||e.namespace_re.test(n.namespace))&&(e.handleObj=n,e.data=n.data,i=((rt.event.special[n.origType]||{}).handle||n.handler).apply(r.elem,a),void 0!==i&&(e.result=i)===!1&&(e.preventDefault(),e.stopPropagation()));return u.postDispatch&&u.postDispatch.call(this,e),e.result}},handlers:function(e,t){var i,n,r,o,s=[],a=t.delegateCount,l=e.target;if(a&&l.nodeType&&(!e.button||"click"!==e.type))for(;l!=this;l=l.parentNode||this)if(1===l.nodeType&&(l.disabled!==!0||"click"!==e.type)){for(r=[],o=0;a>o;o++)n=t[o],i=n.selector+" ",void 0===r[i]&&(r[i]=n.needsContext?rt(i,this).index(l)>=0:rt.find(i,this,null,[l]).length),r[i]&&r.push(n);r.length&&s.push({elem:l,handlers:r})}return a<t.length&&s.push({elem:this,handlers:t.slice(a)}),s},fix:function(e){if(e[rt.expando])return e;var t,i,n,r=e.type,o=e,s=this.fixHooks[r];for(s||(this.fixHooks[r]=s=Nt.test(r)?this.mouseHooks:Rt.test(r)?this.keyHooks:{}),n=s.props?this.props.concat(s.props):this.props,e=new rt.Event(o),t=n.length;t--;)i=n[t],e[i]=o[i];return e.target||(e.target=o.srcElement||pt),3===e.target.nodeType&&(e.target=e.target.parentNode),e.metaKey=!!e.metaKey,s.filter?s.filter(e,o):e},props:"altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),fixHooks:{},keyHooks:{props:"char charCode key keyCode".split(" "),filter:function(e,t){return null==e.which&&(e.which=null!=t.charCode?t.charCode:t.keyCode),e}},mouseHooks:{props:"button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "),filter:function(e,t){var i,n,r,o=t.button,s=t.fromElement;return null==e.pageX&&null!=t.clientX&&(n=e.target.ownerDocument||pt,r=n.documentElement,i=n.body,e.pageX=t.clientX+(r&&r.scrollLeft||i&&i.scrollLeft||0)-(r&&r.clientLeft||i&&i.clientLeft||0),e.pageY=t.clientY+(r&&r.scrollTop||i&&i.scrollTop||0)-(r&&r.clientTop||i&&i.clientTop||0)),!e.relatedTarget&&s&&(e.relatedTarget=s===e.target?t.toElement:s),e.which||void 0===o||(e.which=1&o?1:2&o?3:4&o?2:0),e}},special:{load:{noBubble:!0},focus:{trigger:function(){if(this!==p()&&this.focus)try{return this.focus(),!1}catch(e){}},delegateType:"focusin"},blur:{trigger:function(){return this===p()&&this.blur?(this.blur(),!1):void 0},delegateType:"focusout"},click:{trigger:function(){return rt.nodeName(this,"input")&&"checkbox"===this.type&&this.click?(this.click(),!1):void 0},_default:function(e){return rt.nodeName(e.target,"a")}},beforeunload:{postDispatch:function(e){void 0!==e.result&&e.originalEvent&&(e.originalEvent.returnValue=e.result)}}},simulate:function(e,t,i,n){var r=rt.extend(new rt.Event,i,{type:e,isSimulated:!0,originalEvent:{}});n?rt.event.trigger(r,null,t):rt.event.dispatch.call(t,r),r.isDefaultPrevented()&&i.preventDefault()}},rt.removeEvent=pt.removeEventListener?function(e,t,i){e.removeEventListener&&e.removeEventListener(t,i,!1)}:function(e,t,i){var n="on"+t;e.detachEvent&&(typeof e[n]===Tt&&(e[n]=null),e.detachEvent(n,i))},rt.Event=function(e,t){return this instanceof rt.Event?(e&&e.type?(this.originalEvent=e,this.type=e.type,this.isDefaultPrevented=e.defaultPrevented||void 0===e.defaultPrevented&&e.returnValue===!1?d:f):this.type=e,t&&rt.extend(this,t),this.timeStamp=e&&e.timeStamp||rt.now(),void(this[rt.expando]=!0)):new rt.Event(e,t)},rt.Event.prototype={isDefaultPrevented:f,isPropagationStopped:f,isImmediatePropagationStopped:f,preventDefault:function(){var e=this.originalEvent;this.isDefaultPrevented=d,e&&(e.preventDefault?e.preventDefault():e.returnValue=!1)},stopPropagation:function(){var e=this.originalEvent;this.isPropagationStopped=d,e&&(e.stopPropagation&&e.stopPropagation(),e.cancelBubble=!0)},stopImmediatePropagation:function(){var e=this.originalEvent;this.isImmediatePropagationStopped=d,e&&e.stopImmediatePropagation&&e.stopImmediatePropagation(),this.stopPropagation()}},rt.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(e,t){rt.event.special[e]={delegateType:t,bindType:t,handle:function(e){var i,n=this,r=e.relatedTarget,o=e.handleObj;return(!r||r!==n&&!rt.contains(n,r))&&(e.type=o.origType,i=o.handler.apply(this,arguments),e.type=t),i}}}),it.submitBubbles||(rt.event.special.submit={setup:function(){return rt.nodeName(this,"form")?!1:void rt.event.add(this,"click._submit keypress._submit",function(e){var t=e.target,i=rt.nodeName(t,"input")||rt.nodeName(t,"button")?t.form:void 0;i&&!rt._data(i,"submitBubbles")&&(rt.event.add(i,"submit._submit",function(e){e._submit_bubble=!0}),rt._data(i,"submitBubbles",!0))})},postDispatch:function(e){e._submit_bubble&&(delete e._submit_bubble,this.parentNode&&!e.isTrigger&&rt.event.simulate("submit",this.parentNode,e,!0))},teardown:function(){return rt.nodeName(this,"form")?!1:void rt.event.remove(this,"._submit")}}),it.changeBubbles||(rt.event.special.change={setup:function(){return Mt.test(this.nodeName)?(("checkbox"===this.type||"radio"===this.type)&&(rt.event.add(this,"propertychange._change",function(e){"checked"===e.originalEvent.propertyName&&(this._just_changed=!0)}),rt.event.add(this,"click._change",function(e){this._just_changed&&!e.isTrigger&&(this._just_changed=!1),rt.event.simulate("change",this,e,!0)})),!1):void rt.event.add(this,"beforeactivate._change",function(e){var t=e.target;Mt.test(t.nodeName)&&!rt._data(t,"changeBubbles")&&(rt.event.add(t,"change._change",function(e){!this.parentNode||e.isSimulated||e.isTrigger||rt.event.simulate("change",this.parentNode,e,!0)}),rt._data(t,"changeBubbles",!0))})},handle:function(e){var t=e.target;return this!==t||e.isSimulated||e.isTrigger||"radio"!==t.type&&"checkbox"!==t.type?e.handleObj.handler.apply(this,arguments):void 0},teardown:function(){return rt.event.remove(this,"._change"),!Mt.test(this.nodeName)}}),it.focusinBubbles||rt.each({focus:"focusin",blur:"focusout"},function(e,t){var i=function(e){rt.event.simulate(t,e.target,rt.event.fix(e),!0)};rt.event.special[t]={setup:function(){var n=this.ownerDocument||this,r=rt._data(n,t);r||n.addEventListener(e,i,!0),rt._data(n,t,(r||0)+1)},teardown:function(){var n=this.ownerDocument||this,r=rt._data(n,t)-1;r?rt._data(n,t,r):(n.removeEventListener(e,i,!0),rt._removeData(n,t))}}}),rt.fn.extend({on:function(e,t,i,n,r){var o,s;if("object"==typeof e){"string"!=typeof t&&(i=i||t,t=void 0);for(o in e)this.on(o,t,i,e[o],r);return this}if(null==i&&null==n?(n=t,i=t=void 0):null==n&&("string"==typeof t?(n=i,i=void 0):(n=i,i=t,t=void 0)),n===!1)n=f;else if(!n)return this;return 1===r&&(s=n,n=function(e){return rt().off(e),s.apply(this,arguments)},n.guid=s.guid||(s.guid=rt.guid++)),this.each(function(){rt.event.add(this,e,n,i,t)})},one:function(e,t,i,n){return this.on(e,t,i,n,1)},off:function(e,t,i){var n,r;if(e&&e.preventDefault&&e.handleObj)return n=e.handleObj,rt(e.delegateTarget).off(n.namespace?n.origType+"."+n.namespace:n.origType,n.selector,n.handler),this;if("object"==typeof e){for(r in e)this.off(r,t,e[r]);return this}return(t===!1||"function"==typeof t)&&(i=t,t=void 0),i===!1&&(i=f),this.each(function(){rt.event.remove(this,e,i,t)})},trigger:function(e,t){return this.each(function(){rt.event.trigger(e,t,this)})},triggerHandler:function(e,t){var i=this[0];return i?rt.event.trigger(e,t,i,!0):void 0}});var jt="abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video",Ft=/ jQuery\d+="(?:null|\d+)"/g,It=new RegExp("<(?:"+jt+")[\\s/>]","i"),zt=/^\s+/,Xt=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,Bt=/<([\w:]+)/,Ht=/<tbody/i,Yt=/<|&#?\w+;/,qt=/<(?:script|style|link)/i,Wt=/checked\s*(?:[^=]|=\s*.checked.)/i,Qt=/^$|\/(?:java|ecma)script/i,Ut=/^true\/(.*)/,$t=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g,Vt={option:[1,"<select multiple='multiple'>","</select>"],legend:[1,"<fieldset>","</fieldset>"],area:[1,"<map>","</map>"],param:[1,"<object>","</object>"],thead:[1,"<table>","</table>"],tr:[2,"<table><tbody>","</tbody></table>"],col:[2,"<table><tbody></tbody><colgroup>","</colgroup></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:it.htmlSerialize?[0,"",""]:[1,"X<div>","</div>"]},Zt=g(pt),Gt=Zt.appendChild(pt.createElement("div"));Vt.optgroup=Vt.option,Vt.tbody=Vt.tfoot=Vt.colgroup=Vt.caption=Vt.thead,Vt.th=Vt.td,rt.extend({clone:function(e,t,i){var n,r,o,s,a,l=rt.contains(e.ownerDocument,e);if(it.html5Clone||rt.isXMLDoc(e)||!It.test("<"+e.nodeName+">")?o=e.cloneNode(!0):(Gt.innerHTML=e.outerHTML,Gt.removeChild(o=Gt.firstChild)),!(it.noCloneEvent&&it.noCloneChecked||1!==e.nodeType&&11!==e.nodeType||rt.isXMLDoc(e)))for(n=m(o),a=m(e),s=0;null!=(r=a[s]);++s)n[s]&&T(r,n[s]);if(t)if(i)for(a=a||m(e),n=n||m(o),s=0;null!=(r=a[s]);s++)w(r,n[s]);else w(e,o);return n=m(o,"script"),n.length>0&&x(n,!l&&m(e,"script")),n=a=r=null,o},buildFragment:function(e,t,i,n){for(var r,o,s,a,l,u,c,h=e.length,d=g(t),f=[],p=0;h>p;p++)if(o=e[p],o||0===o)if("object"===rt.type(o))rt.merge(f,o.nodeType?[o]:o);else if(Yt.test(o)){for(a=a||d.appendChild(t.createElement("div")),l=(Bt.exec(o)||["",""])[1].toLowerCase(),c=Vt[l]||Vt._default,a.innerHTML=c[1]+o.replace(Xt,"<$1></$2>")+c[2],r=c[0];r--;)a=a.lastChild;if(!it.leadingWhitespace&&zt.test(o)&&f.push(t.createTextNode(zt.exec(o)[0])),!it.tbody)for(o="table"!==l||Ht.test(o)?"<table>"!==c[1]||Ht.test(o)?0:a:a.firstChild,r=o&&o.childNodes.length;r--;)rt.nodeName(u=o.childNodes[r],"tbody")&&!u.childNodes.length&&o.removeChild(u);for(rt.merge(f,a.childNodes),a.textContent="";a.firstChild;)a.removeChild(a.firstChild);a=d.lastChild}else f.push(t.createTextNode(o));for(a&&d.removeChild(a),it.appendChecked||rt.grep(m(f,"input"),_),p=0;o=f[p++];)if((!n||-1===rt.inArray(o,n))&&(s=rt.contains(o.ownerDocument,o),a=m(d.appendChild(o),"script"),s&&x(a),i))for(r=0;o=a[r++];)Qt.test(o.type||"")&&i.push(o);return a=null,d},cleanData:function(e,t){for(var i,n,r,o,s=0,a=rt.expando,l=rt.cache,u=it.deleteExpando,c=rt.event.special;null!=(i=e[s]);s++)if((t||rt.acceptData(i))&&(r=i[a],o=r&&l[r])){if(o.events)for(n in o.events)c[n]?rt.event.remove(i,n):rt.removeEvent(i,n,o.handle);l[r]&&(delete l[r],u?delete i[a]:typeof i.removeAttribute!==Tt?i.removeAttribute(a):i[a]=null,$.push(r))}}}),rt.fn.extend({text:function(e){return Ot(this,function(e){return void 0===e?rt.text(this):this.empty().append((this[0]&&this[0].ownerDocument||pt).createTextNode(e))},null,e,arguments.length)},append:function(){return this.domManip(arguments,function(e){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var t=v(this,e);t.appendChild(e)}})},prepend:function(){return this.domManip(arguments,function(e){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var t=v(this,e);t.insertBefore(e,t.firstChild)}})},before:function(){return this.domManip(arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this)})},after:function(){return this.domManip(arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this.nextSibling)})},remove:function(e,t){for(var i,n=e?rt.filter(e,this):this,r=0;null!=(i=n[r]);r++)t||1!==i.nodeType||rt.cleanData(m(i)),i.parentNode&&(t&&rt.contains(i.ownerDocument,i)&&x(m(i,"script")),i.parentNode.removeChild(i));return this},empty:function(){for(var e,t=0;null!=(e=this[t]);t++){for(1===e.nodeType&&rt.cleanData(m(e,!1));e.firstChild;)e.removeChild(e.firstChild);e.options&&rt.nodeName(e,"select")&&(e.options.length=0)}return this},clone:function(e,t){return e=null==e?!1:e,t=null==t?e:t,this.map(function(){return rt.clone(this,e,t)})},html:function(e){return Ot(this,function(e){var t=this[0]||{},i=0,n=this.length;if(void 0===e)return 1===t.nodeType?t.innerHTML.replace(Ft,""):void 0;if(!("string"!=typeof e||qt.test(e)||!it.htmlSerialize&&It.test(e)||!it.leadingWhitespace&&zt.test(e)||Vt[(Bt.exec(e)||["",""])[1].toLowerCase()])){e=e.replace(Xt,"<$1></$2>");try{for(;n>i;i++)t=this[i]||{},1===t.nodeType&&(rt.cleanData(m(t,!1)),t.innerHTML=e);t=0}catch(r){}}t&&this.empty().append(e)},null,e,arguments.length)},replaceWith:function(){var e=arguments[0];return this.domManip(arguments,function(t){e=this.parentNode,rt.cleanData(m(this)),e&&e.replaceChild(t,this)}),e&&(e.length||e.nodeType)?this:this.remove()},detach:function(e){return this.remove(e,!0)},domManip:function(e,t){e=Z.apply([],e);var i,n,r,o,s,a,l=0,u=this.length,c=this,h=u-1,d=e[0],f=rt.isFunction(d);if(f||u>1&&"string"==typeof d&&!it.checkClone&&Wt.test(d))return this.each(function(i){var n=c.eq(i);f&&(e[0]=d.call(this,i,n.html())),n.domManip(e,t)});if(u&&(a=rt.buildFragment(e,this[0].ownerDocument,!1,this),i=a.firstChild,1===a.childNodes.length&&(a=i),i)){for(o=rt.map(m(a,"script"),y),r=o.length;u>l;l++)n=a,l!==h&&(n=rt.clone(n,!0,!0),r&&rt.merge(o,m(n,"script"))),t.call(this[l],n,l);if(r)for(s=o[o.length-1].ownerDocument,rt.map(o,b),l=0;r>l;l++)n=o[l],Qt.test(n.type||"")&&!rt._data(n,"globalEval")&&rt.contains(s,n)&&(n.src?rt._evalUrl&&rt._evalUrl(n.src):rt.globalEval((n.text||n.textContent||n.innerHTML||"").replace($t,"")));a=i=null}return this}}),rt.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(e,t){rt.fn[e]=function(e){for(var i,n=0,r=[],o=rt(e),s=o.length-1;s>=n;n++)i=n===s?this:this.clone(!0),rt(o[n])[t](i),G.apply(r,i.get());return this.pushStack(r)}});var Jt,Kt={};!function(){var e;it.shrinkWrapBlocks=function(){if(null!=e)return e;e=!1;var t,i,n;return i=pt.getElementsByTagName("body")[0],i&&i.style?(t=pt.createElement("div"),n=pt.createElement("div"),n.style.cssText="position:absolute;border:0;width:0;height:0;top:0;left:-9999px",i.appendChild(n).appendChild(t),typeof t.style.zoom!==Tt&&(t.style.cssText="-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:1px;width:1px;zoom:1",t.appendChild(pt.createElement("div")).style.width="5px",e=3!==t.offsetWidth),i.removeChild(n),e):void 0}}();var ei,ti,ii=/^margin/,ni=new RegExp("^("+Ct+")(?!px)[a-z%]+$","i"),ri=/^(top|right|bottom|left)$/;e.getComputedStyle?(ei=function(e){return e.ownerDocument.defaultView.getComputedStyle(e,null)},ti=function(e,t,i){var n,r,o,s,a=e.style;return i=i||ei(e),s=i?i.getPropertyValue(t)||i[t]:void 0,i&&(""!==s||rt.contains(e.ownerDocument,e)||(s=rt.style(e,t)),ni.test(s)&&ii.test(t)&&(n=a.width,r=a.minWidth,o=a.maxWidth,a.minWidth=a.maxWidth=a.width=s,s=i.width,a.width=n,a.minWidth=r,a.maxWidth=o)),void 0===s?s:s+""}):pt.documentElement.currentStyle&&(ei=function(e){return e.currentStyle},ti=function(e,t,i){var n,r,o,s,a=e.style;return i=i||ei(e),s=i?i[t]:void 0,null==s&&a&&a[t]&&(s=a[t]),ni.test(s)&&!ri.test(t)&&(n=a.left,r=e.runtimeStyle,o=r&&r.left,o&&(r.left=e.currentStyle.left),a.left="fontSize"===t?"1em":s,s=a.pixelLeft+"px",a.left=n,o&&(r.left=o)),void 0===s?s:s+""||"auto"}),function(){function t(){var t,i,n,r;i=pt.getElementsByTagName("body")[0],i&&i.style&&(t=pt.createElement("div"),n=pt.createElement("div"),n.style.cssText="position:absolute;border:0;width:0;height:0;top:0;left:-9999px",i.appendChild(n).appendChild(t),t.style.cssText="-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;display:block;margin-top:1%;top:1%;border:1px;padding:1px;width:4px;position:absolute",o=s=!1,l=!0,e.getComputedStyle&&(o="1%"!==(e.getComputedStyle(t,null)||{}).top,s="4px"===(e.getComputedStyle(t,null)||{width:"4px"}).width,r=t.appendChild(pt.createElement("div")),r.style.cssText=t.style.cssText="-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0",r.style.marginRight=r.style.width="0",t.style.width="1px",l=!parseFloat((e.getComputedStyle(r,null)||{}).marginRight)),t.innerHTML="<table><tr><td></td><td>t</td></tr></table>",r=t.getElementsByTagName("td"),r[0].style.cssText="margin:0;border:0;padding:0;display:none",a=0===r[0].offsetHeight,a&&(r[0].style.display="",r[1].style.display="none",a=0===r[0].offsetHeight),i.removeChild(n))}var i,n,r,o,s,a,l;i=pt.createElement("div"),i.innerHTML="  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>",r=i.getElementsByTagName("a")[0],n=r&&r.style,n&&(n.cssText="float:left;opacity:.5",it.opacity="0.5"===n.opacity,it.cssFloat=!!n.cssFloat,i.style.backgroundClip="content-box",i.cloneNode(!0).style.backgroundClip="",it.clearCloneStyle="content-box"===i.style.backgroundClip,it.boxSizing=""===n.boxSizing||""===n.MozBoxSizing||""===n.WebkitBoxSizing,rt.extend(it,{reliableHiddenOffsets:function(){return null==a&&t(),a},boxSizingReliable:function(){return null==s&&t(),s},pixelPosition:function(){return null==o&&t(),o},reliableMarginRight:function(){return null==l&&t(),l}}))}(),rt.swap=function(e,t,i,n){var r,o,s={};for(o in t)s[o]=e.style[o],e.style[o]=t[o];r=i.apply(e,n||[]);for(o in t)e.style[o]=s[o];return r};var oi=/alpha\([^)]*\)/i,si=/opacity\s*=\s*([^)]*)/,ai=/^(none|table(?!-c[ea]).+)/,li=new RegExp("^("+Ct+")(.*)$","i"),ui=new RegExp("^([+-])=("+Ct+")","i"),ci={position:"absolute",visibility:"hidden",display:"block"},hi={letterSpacing:"0",fontWeight:"400"},di=["Webkit","O","Moz","ms"];rt.extend({cssHooks:{opacity:{get:function(e,t){if(t){var i=ti(e,"opacity");return""===i?"1":i}}}},cssNumber:{columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{"float":it.cssFloat?"cssFloat":"styleFloat"},style:function(e,t,i,n){if(e&&3!==e.nodeType&&8!==e.nodeType&&e.style){var r,o,s,a=rt.camelCase(t),l=e.style;if(t=rt.cssProps[a]||(rt.cssProps[a]=P(l,a)),s=rt.cssHooks[t]||rt.cssHooks[a],void 0===i)return s&&"get"in s&&void 0!==(r=s.get(e,!1,n))?r:l[t];if(o=typeof i,"string"===o&&(r=ui.exec(i))&&(i=(r[1]+1)*r[2]+parseFloat(rt.css(e,t)),o="number"),null!=i&&i===i&&("number"!==o||rt.cssNumber[a]||(i+="px"),it.clearCloneStyle||""!==i||0!==t.indexOf("background")||(l[t]="inherit"),!(s&&"set"in s&&void 0===(i=s.set(e,i,n)))))try{l[t]=i}catch(u){}}},css:function(e,t,i,n){var r,o,s,a=rt.camelCase(t);return t=rt.cssProps[a]||(rt.cssProps[a]=P(e.style,a)),s=rt.cssHooks[t]||rt.cssHooks[a],s&&"get"in s&&(o=s.get(e,!0,i)),void 0===o&&(o=ti(e,t,n)),"normal"===o&&t in hi&&(o=hi[t]),""===i||i?(r=parseFloat(o),i===!0||rt.isNumeric(r)?r||0:o):o}}),rt.each(["height","width"],function(e,t){rt.cssHooks[t]={get:function(e,i,n){return i?ai.test(rt.css(e,"display"))&&0===e.offsetWidth?rt.swap(e,ci,function(){return M(e,t,n)}):M(e,t,n):void 0},set:function(e,i,n){var r=n&&ei(e);return O(e,i,n?D(e,t,n,it.boxSizing&&"border-box"===rt.css(e,"boxSizing",!1,r),r):0)}}}),it.opacity||(rt.cssHooks.opacity={get:function(e,t){return si.test((t&&e.currentStyle?e.currentStyle.filter:e.style.filter)||"")?.01*parseFloat(RegExp.$1)+"":t?"1":""},set:function(e,t){var i=e.style,n=e.currentStyle,r=rt.isNumeric(t)?"alpha(opacity="+100*t+")":"",o=n&&n.filter||i.filter||"";i.zoom=1,(t>=1||""===t)&&""===rt.trim(o.replace(oi,""))&&i.removeAttribute&&(i.removeAttribute("filter"),""===t||n&&!n.filter)||(i.filter=oi.test(o)?o.replace(oi,r):o+" "+r)}}),rt.cssHooks.marginRight=C(it.reliableMarginRight,function(e,t){return t?rt.swap(e,{display:"inline-block"},ti,[e,"marginRight"]):void 0}),rt.each({margin:"",padding:"",border:"Width"},function(e,t){rt.cssHooks[e+t]={expand:function(i){for(var n=0,r={},o="string"==typeof i?i.split(" "):[i];4>n;n++)r[e+Pt[n]+t]=o[n]||o[n-2]||o[0];return r}},ii.test(e)||(rt.cssHooks[e+t].set=O)}),rt.fn.extend({css:function(e,t){return Ot(this,function(e,t,i){var n,r,o={},s=0;if(rt.isArray(t)){for(n=ei(e),r=t.length;r>s;s++)o[t[s]]=rt.css(e,t[s],!1,n);return o}return void 0!==i?rt.style(e,t,i):rt.css(e,t)},e,t,arguments.length>1)},show:function(){return A(this,!0)},hide:function(){return A(this)},toggle:function(e){return"boolean"==typeof e?e?this.show():this.hide():this.each(function(){At(this)?rt(this).show():rt(this).hide()})}}),rt.Tween=R,R.prototype={constructor:R,init:function(e,t,i,n,r,o){this.elem=e,this.prop=i,this.easing=r||"swing",this.options=t,this.start=this.now=this.cur(),this.end=n,this.unit=o||(rt.cssNumber[i]?"":"px")},cur:function(){var e=R.propHooks[this.prop];return e&&e.get?e.get(this):R.propHooks._default.get(this)},run:function(e){var t,i=R.propHooks[this.prop];return this.pos=t=this.options.duration?rt.easing[this.easing](e,this.options.duration*e,0,1,this.options.duration):e,this.now=(this.end-this.start)*t+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),i&&i.set?i.set(this):R.propHooks._default.set(this),this}},R.prototype.init.prototype=R.prototype,R.propHooks={_default:{get:function(e){var t;return null==e.elem[e.prop]||e.elem.style&&null!=e.elem.style[e.prop]?(t=rt.css(e.elem,e.prop,""),t&&"auto"!==t?t:0):e.elem[e.prop]},set:function(e){rt.fx.step[e.prop]?rt.fx.step[e.prop](e):e.elem.style&&(null!=e.elem.style[rt.cssProps[e.prop]]||rt.cssHooks[e.prop])?rt.style(e.elem,e.prop,e.now+e.unit):e.elem[e.prop]=e.now}}},R.propHooks.scrollTop=R.propHooks.scrollLeft={set:function(e){e.elem.nodeType&&e.elem.parentNode&&(e.elem[e.prop]=e.now)}},rt.easing={linear:function(e){return e},swing:function(e){return.5-Math.cos(e*Math.PI)/2}},rt.fx=R.prototype.init,rt.fx.step={};var fi,pi,gi=/^(?:toggle|show|hide)$/,mi=new RegExp("^(?:([+-])=|)("+Ct+")([a-z%]*)$","i"),_i=/queueHooks$/,vi=[j],yi={"*":[function(e,t){var i=this.createTween(e,t),n=i.cur(),r=mi.exec(t),o=r&&r[3]||(rt.cssNumber[e]?"":"px"),s=(rt.cssNumber[e]||"px"!==o&&+n)&&mi.exec(rt.css(i.elem,e)),a=1,l=20;if(s&&s[3]!==o){o=o||s[3],r=r||[],s=+n||1;do a=a||".5",s/=a,rt.style(i.elem,e,s+o);while(a!==(a=i.cur()/n)&&1!==a&&--l)}return r&&(s=i.start=+s||+n||0,i.unit=o,i.end=r[1]?s+(r[1]+1)*r[2]:+r[2]),i}]};rt.Animation=rt.extend(I,{tweener:function(e,t){rt.isFunction(e)?(t=e,e=["*"]):e=e.split(" ");for(var i,n=0,r=e.length;r>n;n++)i=e[n],yi[i]=yi[i]||[],yi[i].unshift(t)},prefilter:function(e,t){t?vi.unshift(e):vi.push(e)}}),rt.speed=function(e,t,i){var n=e&&"object"==typeof e?rt.extend({},e):{complete:i||!i&&t||rt.isFunction(e)&&e,duration:e,easing:i&&t||t&&!rt.isFunction(t)&&t};return n.duration=rt.fx.off?0:"number"==typeof n.duration?n.duration:n.duration in rt.fx.speeds?rt.fx.speeds[n.duration]:rt.fx.speeds._default,(null==n.queue||n.queue===!0)&&(n.queue="fx"),n.old=n.complete,n.complete=function(){rt.isFunction(n.old)&&n.old.call(this),n.queue&&rt.dequeue(this,n.queue)},n},rt.fn.extend({fadeTo:function(e,t,i,n){return this.filter(At).css("opacity",0).show().end().animate({opacity:t},e,i,n)},animate:function(e,t,i,n){var r=rt.isEmptyObject(e),o=rt.speed(t,i,n),s=function(){var t=I(this,rt.extend({},e),o);(r||rt._data(this,"finish"))&&t.stop(!0)};return s.finish=s,r||o.queue===!1?this.each(s):this.queue(o.queue,s)},stop:function(e,t,i){var n=function(e){var t=e.stop;delete e.stop,t(i)};return"string"!=typeof e&&(i=t,t=e,e=void 0),t&&e!==!1&&this.queue(e||"fx",[]),this.each(function(){var t=!0,r=null!=e&&e+"queueHooks",o=rt.timers,s=rt._data(this);if(r)s[r]&&s[r].stop&&n(s[r]);else for(r in s)s[r]&&s[r].stop&&_i.test(r)&&n(s[r]);for(r=o.length;r--;)o[r].elem!==this||null!=e&&o[r].queue!==e||(o[r].anim.stop(i),t=!1,o.splice(r,1));(t||!i)&&rt.dequeue(this,e)})},finish:function(e){return e!==!1&&(e=e||"fx"),this.each(function(){var t,i=rt._data(this),n=i[e+"queue"],r=i[e+"queueHooks"],o=rt.timers,s=n?n.length:0;for(i.finish=!0,rt.queue(this,e,[]),r&&r.stop&&r.stop.call(this,!0),t=o.length;t--;)o[t].elem===this&&o[t].queue===e&&(o[t].anim.stop(!0),o.splice(t,1));for(t=0;s>t;t++)n[t]&&n[t].finish&&n[t].finish.call(this);delete i.finish})}}),rt.each(["toggle","show","hide"],function(e,t){var i=rt.fn[t];rt.fn[t]=function(e,n,r){return null==e||"boolean"==typeof e?i.apply(this,arguments):this.animate(E(t,!0),e,n,r)}}),rt.each({slideDown:E("show"),slideUp:E("hide"),slideToggle:E("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(e,t){rt.fn[e]=function(e,i,n){return this.animate(t,e,i,n)}}),rt.timers=[],rt.fx.tick=function(){var e,t=rt.timers,i=0;for(fi=rt.now();i<t.length;i++)e=t[i],e()||t[i]!==e||t.splice(i--,1);t.length||rt.fx.stop(),fi=void 0},rt.fx.timer=function(e){rt.timers.push(e),e()?rt.fx.start():rt.timers.pop()},rt.fx.interval=13,rt.fx.start=function(){pi||(pi=setInterval(rt.fx.tick,rt.fx.interval))},rt.fx.stop=function(){clearInterval(pi),pi=null},rt.fx.speeds={slow:600,fast:200,_default:400},rt.fn.delay=function(e,t){return e=rt.fx?rt.fx.speeds[e]||e:e,t=t||"fx",this.queue(t,function(t,i){var n=setTimeout(t,e);i.stop=function(){clearTimeout(n)}})},function(){var e,t,i,n,r;t=pt.createElement("div"),t.setAttribute("className","t"),t.innerHTML="  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>",n=t.getElementsByTagName("a")[0],i=pt.createElement("select"),r=i.appendChild(pt.createElement("option")),e=t.getElementsByTagName("input")[0],n.style.cssText="top:1px",it.getSetAttribute="t"!==t.className,it.style=/top/.test(n.getAttribute("style")),it.hrefNormalized="/a"===n.getAttribute("href"),it.checkOn=!!e.value,it.optSelected=r.selected,it.enctype=!!pt.createElement("form").enctype,i.disabled=!0,it.optDisabled=!r.disabled,e=pt.createElement("input"),e.setAttribute("value",""),it.input=""===e.getAttribute("value"),e.value="t",e.setAttribute("type","radio"),it.radioValue="t"===e.value}();var bi=/\r/g;rt.fn.extend({val:function(e){var t,i,n,r=this[0];{if(arguments.length)return n=rt.isFunction(e),this.each(function(i){var r;1===this.nodeType&&(r=n?e.call(this,i,rt(this).val()):e,null==r?r="":"number"==typeof r?r+="":rt.isArray(r)&&(r=rt.map(r,function(e){return null==e?"":e+""})),t=rt.valHooks[this.type]||rt.valHooks[this.nodeName.toLowerCase()],t&&"set"in t&&void 0!==t.set(this,r,"value")||(this.value=r))});if(r)return t=rt.valHooks[r.type]||rt.valHooks[r.nodeName.toLowerCase()],t&&"get"in t&&void 0!==(i=t.get(r,"value"))?i:(i=r.value,"string"==typeof i?i.replace(bi,""):null==i?"":i)}}}),rt.extend({valHooks:{option:{get:function(e){var t=rt.find.attr(e,"value");return null!=t?t:rt.trim(rt.text(e))}},select:{get:function(e){for(var t,i,n=e.options,r=e.selectedIndex,o="select-one"===e.type||0>r,s=o?null:[],a=o?r+1:n.length,l=0>r?a:o?r:0;a>l;l++)if(i=n[l],!(!i.selected&&l!==r||(it.optDisabled?i.disabled:null!==i.getAttribute("disabled"))||i.parentNode.disabled&&rt.nodeName(i.parentNode,"optgroup"))){if(t=rt(i).val(),o)return t;s.push(t)}return s},set:function(e,t){for(var i,n,r=e.options,o=rt.makeArray(t),s=r.length;s--;)if(n=r[s],rt.inArray(rt.valHooks.option.get(n),o)>=0)try{n.selected=i=!0}catch(a){n.scrollHeight}else n.selected=!1;return i||(e.selectedIndex=-1),r}}}}),rt.each(["radio","checkbox"],function(){rt.valHooks[this]={set:function(e,t){return rt.isArray(t)?e.checked=rt.inArray(rt(e).val(),t)>=0:void 0}},it.checkOn||(rt.valHooks[this].get=function(e){return null===e.getAttribute("value")?"on":e.value})});var xi,wi,Ti=rt.expr.attrHandle,ki=/^(?:checked|selected)$/i,Si=it.getSetAttribute,Ci=it.input;rt.fn.extend({attr:function(e,t){return Ot(this,rt.attr,e,t,arguments.length>1)},removeAttr:function(e){return this.each(function(){rt.removeAttr(this,e)})}}),rt.extend({attr:function(e,t,i){var n,r,o=e.nodeType;if(e&&3!==o&&8!==o&&2!==o)return typeof e.getAttribute===Tt?rt.prop(e,t,i):(1===o&&rt.isXMLDoc(e)||(t=t.toLowerCase(),n=rt.attrHooks[t]||(rt.expr.match.bool.test(t)?wi:xi)),void 0===i?n&&"get"in n&&null!==(r=n.get(e,t))?r:(r=rt.find.attr(e,t),null==r?void 0:r):null!==i?n&&"set"in n&&void 0!==(r=n.set(e,i,t))?r:(e.setAttribute(t,i+""),i):void rt.removeAttr(e,t))},removeAttr:function(e,t){var i,n,r=0,o=t&&t.match(yt);if(o&&1===e.nodeType)for(;i=o[r++];)n=rt.propFix[i]||i,rt.expr.match.bool.test(i)?Ci&&Si||!ki.test(i)?e[n]=!1:e[rt.camelCase("default-"+i)]=e[n]=!1:rt.attr(e,i,""),e.removeAttribute(Si?i:n)},attrHooks:{type:{set:function(e,t){if(!it.radioValue&&"radio"===t&&rt.nodeName(e,"input")){var i=e.value;return e.setAttribute("type",t),i&&(e.value=i),t}}}}}),wi={set:function(e,t,i){return t===!1?rt.removeAttr(e,i):Ci&&Si||!ki.test(i)?e.setAttribute(!Si&&rt.propFix[i]||i,i):e[rt.camelCase("default-"+i)]=e[i]=!0,i}},rt.each(rt.expr.match.bool.source.match(/\w+/g),function(e,t){var i=Ti[t]||rt.find.attr;Ti[t]=Ci&&Si||!ki.test(t)?function(e,t,n){var r,o;return n||(o=Ti[t],Ti[t]=r,r=null!=i(e,t,n)?t.toLowerCase():null,Ti[t]=o),r}:function(e,t,i){return i?void 0:e[rt.camelCase("default-"+t)]?t.toLowerCase():null
}}),Ci&&Si||(rt.attrHooks.value={set:function(e,t,i){return rt.nodeName(e,"input")?void(e.defaultValue=t):xi&&xi.set(e,t,i)}}),Si||(xi={set:function(e,t,i){var n=e.getAttributeNode(i);return n||e.setAttributeNode(n=e.ownerDocument.createAttribute(i)),n.value=t+="","value"===i||t===e.getAttribute(i)?t:void 0}},Ti.id=Ti.name=Ti.coords=function(e,t,i){var n;return i?void 0:(n=e.getAttributeNode(t))&&""!==n.value?n.value:null},rt.valHooks.button={get:function(e,t){var i=e.getAttributeNode(t);return i&&i.specified?i.value:void 0},set:xi.set},rt.attrHooks.contenteditable={set:function(e,t,i){xi.set(e,""===t?!1:t,i)}},rt.each(["width","height"],function(e,t){rt.attrHooks[t]={set:function(e,i){return""===i?(e.setAttribute(t,"auto"),i):void 0}}})),it.style||(rt.attrHooks.style={get:function(e){return e.style.cssText||void 0},set:function(e,t){return e.style.cssText=t+""}});var Pi=/^(?:input|select|textarea|button|object)$/i,Ai=/^(?:a|area)$/i;rt.fn.extend({prop:function(e,t){return Ot(this,rt.prop,e,t,arguments.length>1)},removeProp:function(e){return e=rt.propFix[e]||e,this.each(function(){try{this[e]=void 0,delete this[e]}catch(t){}})}}),rt.extend({propFix:{"for":"htmlFor","class":"className"},prop:function(e,t,i){var n,r,o,s=e.nodeType;if(e&&3!==s&&8!==s&&2!==s)return o=1!==s||!rt.isXMLDoc(e),o&&(t=rt.propFix[t]||t,r=rt.propHooks[t]),void 0!==i?r&&"set"in r&&void 0!==(n=r.set(e,i,t))?n:e[t]=i:r&&"get"in r&&null!==(n=r.get(e,t))?n:e[t]},propHooks:{tabIndex:{get:function(e){var t=rt.find.attr(e,"tabindex");return t?parseInt(t,10):Pi.test(e.nodeName)||Ai.test(e.nodeName)&&e.href?0:-1}}}}),it.hrefNormalized||rt.each(["href","src"],function(e,t){rt.propHooks[t]={get:function(e){return e.getAttribute(t,4)}}}),it.optSelected||(rt.propHooks.selected={get:function(e){var t=e.parentNode;return t&&(t.selectedIndex,t.parentNode&&t.parentNode.selectedIndex),null}}),rt.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){rt.propFix[this.toLowerCase()]=this}),it.enctype||(rt.propFix.enctype="encoding");var Oi=/[\t\r\n\f]/g;rt.fn.extend({addClass:function(e){var t,i,n,r,o,s,a=0,l=this.length,u="string"==typeof e&&e;if(rt.isFunction(e))return this.each(function(t){rt(this).addClass(e.call(this,t,this.className))});if(u)for(t=(e||"").match(yt)||[];l>a;a++)if(i=this[a],n=1===i.nodeType&&(i.className?(" "+i.className+" ").replace(Oi," "):" ")){for(o=0;r=t[o++];)n.indexOf(" "+r+" ")<0&&(n+=r+" ");s=rt.trim(n),i.className!==s&&(i.className=s)}return this},removeClass:function(e){var t,i,n,r,o,s,a=0,l=this.length,u=0===arguments.length||"string"==typeof e&&e;if(rt.isFunction(e))return this.each(function(t){rt(this).removeClass(e.call(this,t,this.className))});if(u)for(t=(e||"").match(yt)||[];l>a;a++)if(i=this[a],n=1===i.nodeType&&(i.className?(" "+i.className+" ").replace(Oi," "):"")){for(o=0;r=t[o++];)for(;n.indexOf(" "+r+" ")>=0;)n=n.replace(" "+r+" "," ");s=e?rt.trim(n):"",i.className!==s&&(i.className=s)}return this},toggleClass:function(e,t){var i=typeof e;return"boolean"==typeof t&&"string"===i?t?this.addClass(e):this.removeClass(e):this.each(rt.isFunction(e)?function(i){rt(this).toggleClass(e.call(this,i,this.className,t),t)}:function(){if("string"===i)for(var t,n=0,r=rt(this),o=e.match(yt)||[];t=o[n++];)r.hasClass(t)?r.removeClass(t):r.addClass(t);else(i===Tt||"boolean"===i)&&(this.className&&rt._data(this,"__className__",this.className),this.className=this.className||e===!1?"":rt._data(this,"__className__")||"")})},hasClass:function(e){for(var t=" "+e+" ",i=0,n=this.length;n>i;i++)if(1===this[i].nodeType&&(" "+this[i].className+" ").replace(Oi," ").indexOf(t)>=0)return!0;return!1}}),rt.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "),function(e,t){rt.fn[t]=function(e,i){return arguments.length>0?this.on(t,null,e,i):this.trigger(t)}}),rt.fn.extend({hover:function(e,t){return this.mouseenter(e).mouseleave(t||e)},bind:function(e,t,i){return this.on(e,null,t,i)},unbind:function(e,t){return this.off(e,null,t)},delegate:function(e,t,i,n){return this.on(t,e,i,n)},undelegate:function(e,t,i){return 1===arguments.length?this.off(e,"**"):this.off(t,e||"**",i)}});var Di=rt.now(),Mi=/\?/,Ri=/(,)|(\[|{)|(}|])|"(?:[^"\\\r\n]|\\["\\\/bfnrt]|\\u[\da-fA-F]{4})*"\s*:?|true|false|null|-?(?!0\d)\d+(?:\.\d+|)(?:[eE][+-]?\d+|)/g;rt.parseJSON=function(t){if(e.JSON&&e.JSON.parse)return e.JSON.parse(t+"");var i,n=null,r=rt.trim(t+"");return r&&!rt.trim(r.replace(Ri,function(e,t,r,o){return i&&t&&(n=0),0===n?e:(i=r||t,n+=!o-!r,"")}))?Function("return "+r)():rt.error("Invalid JSON: "+t)},rt.parseXML=function(t){var i,n;if(!t||"string"!=typeof t)return null;try{e.DOMParser?(n=new DOMParser,i=n.parseFromString(t,"text/xml")):(i=new ActiveXObject("Microsoft.XMLDOM"),i.async="false",i.loadXML(t))}catch(r){i=void 0}return i&&i.documentElement&&!i.getElementsByTagName("parsererror").length||rt.error("Invalid XML: "+t),i};var Ni,Ei,Li=/#.*$/,ji=/([?&])_=[^&]*/,Fi=/^(.*?):[ \t]*([^\r\n]*)\r?$/gm,Ii=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,zi=/^(?:GET|HEAD)$/,Xi=/^\/\//,Bi=/^([\w.+-]+:)(?:\/\/(?:[^\/?#]*@|)([^\/?#:]*)(?::(\d+)|)|)/,Hi={},Yi={},qi="*/".concat("*");try{Ei=location.href}catch(Wi){Ei=pt.createElement("a"),Ei.href="",Ei=Ei.href}Ni=Bi.exec(Ei.toLowerCase())||[],rt.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:Ei,type:"GET",isLocal:Ii.test(Ni[1]),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":qi,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":rt.parseJSON,"text xml":rt.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(e,t){return t?B(B(e,rt.ajaxSettings),t):B(rt.ajaxSettings,e)},ajaxPrefilter:z(Hi),ajaxTransport:z(Yi),ajax:function(e,t){function i(e,t,i,n){var r,c,_,v,b,w=t;2!==y&&(y=2,a&&clearTimeout(a),u=void 0,s=n||"",x.readyState=e>0?4:0,r=e>=200&&300>e||304===e,i&&(v=H(h,x,i)),v=Y(h,v,x,r),r?(h.ifModified&&(b=x.getResponseHeader("Last-Modified"),b&&(rt.lastModified[o]=b),b=x.getResponseHeader("etag"),b&&(rt.etag[o]=b)),204===e||"HEAD"===h.type?w="nocontent":304===e?w="notmodified":(w=v.state,c=v.data,_=v.error,r=!_)):(_=w,(e||!w)&&(w="error",0>e&&(e=0))),x.status=e,x.statusText=(t||w)+"",r?p.resolveWith(d,[c,w,x]):p.rejectWith(d,[x,w,_]),x.statusCode(m),m=void 0,l&&f.trigger(r?"ajaxSuccess":"ajaxError",[x,h,r?c:_]),g.fireWith(d,[x,w]),l&&(f.trigger("ajaxComplete",[x,h]),--rt.active||rt.event.trigger("ajaxStop")))}"object"==typeof e&&(t=e,e=void 0),t=t||{};var n,r,o,s,a,l,u,c,h=rt.ajaxSetup({},t),d=h.context||h,f=h.context&&(d.nodeType||d.jquery)?rt(d):rt.event,p=rt.Deferred(),g=rt.Callbacks("once memory"),m=h.statusCode||{},_={},v={},y=0,b="canceled",x={readyState:0,getResponseHeader:function(e){var t;if(2===y){if(!c)for(c={};t=Fi.exec(s);)c[t[1].toLowerCase()]=t[2];t=c[e.toLowerCase()]}return null==t?null:t},getAllResponseHeaders:function(){return 2===y?s:null},setRequestHeader:function(e,t){var i=e.toLowerCase();return y||(e=v[i]=v[i]||e,_[e]=t),this},overrideMimeType:function(e){return y||(h.mimeType=e),this},statusCode:function(e){var t;if(e)if(2>y)for(t in e)m[t]=[m[t],e[t]];else x.always(e[x.status]);return this},abort:function(e){var t=e||b;return u&&u.abort(t),i(0,t),this}};if(p.promise(x).complete=g.add,x.success=x.done,x.error=x.fail,h.url=((e||h.url||Ei)+"").replace(Li,"").replace(Xi,Ni[1]+"//"),h.type=t.method||t.type||h.method||h.type,h.dataTypes=rt.trim(h.dataType||"*").toLowerCase().match(yt)||[""],null==h.crossDomain&&(n=Bi.exec(h.url.toLowerCase()),h.crossDomain=!(!n||n[1]===Ni[1]&&n[2]===Ni[2]&&(n[3]||("http:"===n[1]?"80":"443"))===(Ni[3]||("http:"===Ni[1]?"80":"443")))),h.data&&h.processData&&"string"!=typeof h.data&&(h.data=rt.param(h.data,h.traditional)),X(Hi,h,t,x),2===y)return x;l=h.global,l&&0===rt.active++&&rt.event.trigger("ajaxStart"),h.type=h.type.toUpperCase(),h.hasContent=!zi.test(h.type),o=h.url,h.hasContent||(h.data&&(o=h.url+=(Mi.test(o)?"&":"?")+h.data,delete h.data),h.cache===!1&&(h.url=ji.test(o)?o.replace(ji,"$1_="+Di++):o+(Mi.test(o)?"&":"?")+"_="+Di++)),h.ifModified&&(rt.lastModified[o]&&x.setRequestHeader("If-Modified-Since",rt.lastModified[o]),rt.etag[o]&&x.setRequestHeader("If-None-Match",rt.etag[o])),(h.data&&h.hasContent&&h.contentType!==!1||t.contentType)&&x.setRequestHeader("Content-Type",h.contentType),x.setRequestHeader("Accept",h.dataTypes[0]&&h.accepts[h.dataTypes[0]]?h.accepts[h.dataTypes[0]]+("*"!==h.dataTypes[0]?", "+qi+"; q=0.01":""):h.accepts["*"]);for(r in h.headers)x.setRequestHeader(r,h.headers[r]);if(h.beforeSend&&(h.beforeSend.call(d,x,h)===!1||2===y))return x.abort();b="abort";for(r in{success:1,error:1,complete:1})x[r](h[r]);if(u=X(Yi,h,t,x)){x.readyState=1,l&&f.trigger("ajaxSend",[x,h]),h.async&&h.timeout>0&&(a=setTimeout(function(){x.abort("timeout")},h.timeout));try{y=1,u.send(_,i)}catch(w){if(!(2>y))throw w;i(-1,w)}}else i(-1,"No Transport");return x},getJSON:function(e,t,i){return rt.get(e,t,i,"json")},getScript:function(e,t){return rt.get(e,void 0,t,"script")}}),rt.each(["get","post"],function(e,t){rt[t]=function(e,i,n,r){return rt.isFunction(i)&&(r=r||n,n=i,i=void 0),rt.ajax({url:e,type:t,dataType:r,data:i,success:n})}}),rt.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(e,t){rt.fn[t]=function(e){return this.on(t,e)}}),rt._evalUrl=function(e){return rt.ajax({url:e,type:"GET",dataType:"script",async:!1,global:!1,"throws":!0})},rt.fn.extend({wrapAll:function(e){if(rt.isFunction(e))return this.each(function(t){rt(this).wrapAll(e.call(this,t))});if(this[0]){var t=rt(e,this[0].ownerDocument).eq(0).clone(!0);this[0].parentNode&&t.insertBefore(this[0]),t.map(function(){for(var e=this;e.firstChild&&1===e.firstChild.nodeType;)e=e.firstChild;return e}).append(this)}return this},wrapInner:function(e){return this.each(rt.isFunction(e)?function(t){rt(this).wrapInner(e.call(this,t))}:function(){var t=rt(this),i=t.contents();i.length?i.wrapAll(e):t.append(e)})},wrap:function(e){var t=rt.isFunction(e);return this.each(function(i){rt(this).wrapAll(t?e.call(this,i):e)})},unwrap:function(){return this.parent().each(function(){rt.nodeName(this,"body")||rt(this).replaceWith(this.childNodes)}).end()}}),rt.expr.filters.hidden=function(e){return e.offsetWidth<=0&&e.offsetHeight<=0||!it.reliableHiddenOffsets()&&"none"===(e.style&&e.style.display||rt.css(e,"display"))},rt.expr.filters.visible=function(e){return!rt.expr.filters.hidden(e)};var Qi=/%20/g,Ui=/\[\]$/,$i=/\r?\n/g,Vi=/^(?:submit|button|image|reset|file)$/i,Zi=/^(?:input|select|textarea|keygen)/i;rt.param=function(e,t){var i,n=[],r=function(e,t){t=rt.isFunction(t)?t():null==t?"":t,n[n.length]=encodeURIComponent(e)+"="+encodeURIComponent(t)};if(void 0===t&&(t=rt.ajaxSettings&&rt.ajaxSettings.traditional),rt.isArray(e)||e.jquery&&!rt.isPlainObject(e))rt.each(e,function(){r(this.name,this.value)});else for(i in e)q(i,e[i],t,r);return n.join("&").replace(Qi,"+")},rt.fn.extend({serialize:function(){return rt.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var e=rt.prop(this,"elements");return e?rt.makeArray(e):this}).filter(function(){var e=this.type;return this.name&&!rt(this).is(":disabled")&&Zi.test(this.nodeName)&&!Vi.test(e)&&(this.checked||!Dt.test(e))}).map(function(e,t){var i=rt(this).val();return null==i?null:rt.isArray(i)?rt.map(i,function(e){return{name:t.name,value:e.replace($i,"\r\n")}}):{name:t.name,value:i.replace($i,"\r\n")}}).get()}}),rt.ajaxSettings.xhr=void 0!==e.ActiveXObject?function(){return!this.isLocal&&/^(get|post|head|put|delete|options)$/i.test(this.type)&&W()||Q()}:W;var Gi=0,Ji={},Ki=rt.ajaxSettings.xhr();e.ActiveXObject&&rt(e).on("unload",function(){for(var e in Ji)Ji[e](void 0,!0)}),it.cors=!!Ki&&"withCredentials"in Ki,Ki=it.ajax=!!Ki,Ki&&rt.ajaxTransport(function(e){if(!e.crossDomain||it.cors){var t;return{send:function(i,n){var r,o=e.xhr(),s=++Gi;if(o.open(e.type,e.url,e.async,e.username,e.password),e.xhrFields)for(r in e.xhrFields)o[r]=e.xhrFields[r];e.mimeType&&o.overrideMimeType&&o.overrideMimeType(e.mimeType),e.crossDomain||i["X-Requested-With"]||(i["X-Requested-With"]="XMLHttpRequest");for(r in i)void 0!==i[r]&&o.setRequestHeader(r,i[r]+"");o.send(e.hasContent&&e.data||null),t=function(i,r){var a,l,u;if(t&&(r||4===o.readyState))if(delete Ji[s],t=void 0,o.onreadystatechange=rt.noop,r)4!==o.readyState&&o.abort();else{u={},a=o.status,"string"==typeof o.responseText&&(u.text=o.responseText);try{l=o.statusText}catch(c){l=""}a||!e.isLocal||e.crossDomain?1223===a&&(a=204):a=u.text?200:404}u&&n(a,l,u,o.getAllResponseHeaders())},e.async?4===o.readyState?setTimeout(t):o.onreadystatechange=Ji[s]=t:t()},abort:function(){t&&t(void 0,!0)}}}}),rt.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/(?:java|ecma)script/},converters:{"text script":function(e){return rt.globalEval(e),e}}}),rt.ajaxPrefilter("script",function(e){void 0===e.cache&&(e.cache=!1),e.crossDomain&&(e.type="GET",e.global=!1)}),rt.ajaxTransport("script",function(e){if(e.crossDomain){var t,i=pt.head||rt("head")[0]||pt.documentElement;return{send:function(n,r){t=pt.createElement("script"),t.async=!0,e.scriptCharset&&(t.charset=e.scriptCharset),t.src=e.url,t.onload=t.onreadystatechange=function(e,i){(i||!t.readyState||/loaded|complete/.test(t.readyState))&&(t.onload=t.onreadystatechange=null,t.parentNode&&t.parentNode.removeChild(t),t=null,i||r(200,"success"))},i.insertBefore(t,i.firstChild)},abort:function(){t&&t.onload(void 0,!0)}}}});var en=[],tn=/(=)\?(?=&|$)|\?\?/;rt.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var e=en.pop()||rt.expando+"_"+Di++;return this[e]=!0,e}}),rt.ajaxPrefilter("json jsonp",function(t,i,n){var r,o,s,a=t.jsonp!==!1&&(tn.test(t.url)?"url":"string"==typeof t.data&&!(t.contentType||"").indexOf("application/x-www-form-urlencoded")&&tn.test(t.data)&&"data");return a||"jsonp"===t.dataTypes[0]?(r=t.jsonpCallback=rt.isFunction(t.jsonpCallback)?t.jsonpCallback():t.jsonpCallback,a?t[a]=t[a].replace(tn,"$1"+r):t.jsonp!==!1&&(t.url+=(Mi.test(t.url)?"&":"?")+t.jsonp+"="+r),t.converters["script json"]=function(){return s||rt.error(r+" was not called"),s[0]},t.dataTypes[0]="json",o=e[r],e[r]=function(){s=arguments},n.always(function(){e[r]=o,t[r]&&(t.jsonpCallback=i.jsonpCallback,en.push(r)),s&&rt.isFunction(o)&&o(s[0]),s=o=void 0}),"script"):void 0}),rt.parseHTML=function(e,t,i){if(!e||"string"!=typeof e)return null;"boolean"==typeof t&&(i=t,t=!1),t=t||pt;var n=ht.exec(e),r=!i&&[];return n?[t.createElement(n[1])]:(n=rt.buildFragment([e],t,r),r&&r.length&&rt(r).remove(),rt.merge([],n.childNodes))};var nn=rt.fn.load;rt.fn.load=function(e,t,i){if("string"!=typeof e&&nn)return nn.apply(this,arguments);var n,r,o,s=this,a=e.indexOf(" ");return a>=0&&(n=rt.trim(e.slice(a,e.length)),e=e.slice(0,a)),rt.isFunction(t)?(i=t,t=void 0):t&&"object"==typeof t&&(o="POST"),s.length>0&&rt.ajax({url:e,type:o,dataType:"html",data:t}).done(function(e){r=arguments,s.html(n?rt("<div>").append(rt.parseHTML(e)).find(n):e)}).complete(i&&function(e,t){s.each(i,r||[e.responseText,t,e])}),this},rt.expr.filters.animated=function(e){return rt.grep(rt.timers,function(t){return e===t.elem}).length};var rn=e.document.documentElement;rt.offset={setOffset:function(e,t,i){var n,r,o,s,a,l,u,c=rt.css(e,"position"),h=rt(e),d={};"static"===c&&(e.style.position="relative"),a=h.offset(),o=rt.css(e,"top"),l=rt.css(e,"left"),u=("absolute"===c||"fixed"===c)&&rt.inArray("auto",[o,l])>-1,u?(n=h.position(),s=n.top,r=n.left):(s=parseFloat(o)||0,r=parseFloat(l)||0),rt.isFunction(t)&&(t=t.call(e,i,a)),null!=t.top&&(d.top=t.top-a.top+s),null!=t.left&&(d.left=t.left-a.left+r),"using"in t?t.using.call(e,d):h.css(d)}},rt.fn.extend({offset:function(e){if(arguments.length)return void 0===e?this:this.each(function(t){rt.offset.setOffset(this,e,t)});var t,i,n={top:0,left:0},r=this[0],o=r&&r.ownerDocument;if(o)return t=o.documentElement,rt.contains(t,r)?(typeof r.getBoundingClientRect!==Tt&&(n=r.getBoundingClientRect()),i=U(o),{top:n.top+(i.pageYOffset||t.scrollTop)-(t.clientTop||0),left:n.left+(i.pageXOffset||t.scrollLeft)-(t.clientLeft||0)}):n},position:function(){if(this[0]){var e,t,i={top:0,left:0},n=this[0];return"fixed"===rt.css(n,"position")?t=n.getBoundingClientRect():(e=this.offsetParent(),t=this.offset(),rt.nodeName(e[0],"html")||(i=e.offset()),i.top+=rt.css(e[0],"borderTopWidth",!0),i.left+=rt.css(e[0],"borderLeftWidth",!0)),{top:t.top-i.top-rt.css(n,"marginTop",!0),left:t.left-i.left-rt.css(n,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){for(var e=this.offsetParent||rn;e&&!rt.nodeName(e,"html")&&"static"===rt.css(e,"position");)e=e.offsetParent;return e||rn})}}),rt.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(e,t){var i=/Y/.test(t);rt.fn[e]=function(n){return Ot(this,function(e,n,r){var o=U(e);return void 0===r?o?t in o?o[t]:o.document.documentElement[n]:e[n]:void(o?o.scrollTo(i?rt(o).scrollLeft():r,i?r:rt(o).scrollTop()):e[n]=r)},e,n,arguments.length,null)}}),rt.each(["top","left"],function(e,t){rt.cssHooks[t]=C(it.pixelPosition,function(e,i){return i?(i=ti(e,t),ni.test(i)?rt(e).position()[t]+"px":i):void 0})}),rt.each({Height:"height",Width:"width"},function(e,t){rt.each({padding:"inner"+e,content:t,"":"outer"+e},function(i,n){rt.fn[n]=function(n,r){var o=arguments.length&&(i||"boolean"!=typeof n),s=i||(n===!0||r===!0?"margin":"border");return Ot(this,function(t,i,n){var r;return rt.isWindow(t)?t.document.documentElement["client"+e]:9===t.nodeType?(r=t.documentElement,Math.max(t.body["scroll"+e],r["scroll"+e],t.body["offset"+e],r["offset"+e],r["client"+e])):void 0===n?rt.css(t,i,s):rt.style(t,i,n,s)},t,o?n:void 0,o,null)}})}),rt.fn.size=function(){return this.length},rt.fn.andSelf=rt.fn.addBack,"function"==typeof define&&define.amd&&define("jquery",[],function(){return rt});var on=e.jQuery,sn=e.$;return rt.noConflict=function(t){return e.$===rt&&(e.$=sn),t&&e.jQuery===rt&&(e.jQuery=on),rt},typeof t===Tt&&(e.jQuery=e.$=rt),rt});var _gsScope="undefined"!=typeof module&&module.exports&&"undefined"!=typeof global?global:this||window;(_gsScope._gsQueue||(_gsScope._gsQueue=[])).push(function(){"use strict";_gsScope._gsDefine("TweenMax",["core.Animation","core.SimpleTimeline","TweenLite"],function(e,t,i){var n=function(e){var t,i=[],n=e.length;for(t=0;t!==n;i.push(e[t++]));return i},r=function(e,t,n){i.call(this,e,t,n),this._cycle=0,this._yoyo=this.vars.yoyo===!0,this._repeat=this.vars.repeat||0,this._repeatDelay=this.vars.repeatDelay||0,this._dirty=!0,this.render=r.prototype.render},o=1e-10,s=i._internals,a=s.isSelector,l=s.isArray,u=r.prototype=i.to({},.1,{}),c=[];r.version="1.14.2",u.constructor=r,u.kill()._gc=!1,r.killTweensOf=r.killDelayedCallsTo=i.killTweensOf,r.getTweensOf=i.getTweensOf,r.lagSmoothing=i.lagSmoothing,r.ticker=i.ticker,r.render=i.render,u.invalidate=function(){return this._yoyo=this.vars.yoyo===!0,this._repeat=this.vars.repeat||0,this._repeatDelay=this.vars.repeatDelay||0,this._uncache(!0),i.prototype.invalidate.call(this)},u.updateTo=function(e,t){var n,r=this.ratio,o=this.vars.immediateRender||e.immediateRender;t&&this._startTime<this._timeline._time&&(this._startTime=this._timeline._time,this._uncache(!1),this._gc?this._enabled(!0,!1):this._timeline.insert(this,this._startTime-this._delay));for(n in e)this.vars[n]=e[n];if(this._initted||o)if(t)this._initted=!1;else if(this._gc&&this._enabled(!0,!1),this._notifyPluginsOfEnabled&&this._firstPT&&i._onPluginEvent("_onDisable",this),this._time/this._duration>.998){var s=this._time;this.render(0,!0,!1),this._initted=!1,this.render(s,!0,!1)}else if(this._time>0||o){this._initted=!1,this._init();for(var a,l=1/(1-r),u=this._firstPT;u;)a=u.s+u.c,u.c*=l,u.s=a-u.c,u=u._next}return this},u.render=function(e,t,i){this._initted||0===this._duration&&this.vars.repeat&&this.invalidate();var n,r,a,l,u,h,d,f,p=this._dirty?this.totalDuration():this._totalDuration,g=this._time,m=this._totalTime,_=this._cycle,v=this._duration,y=this._rawPrevTime;if(e>=p?(this._totalTime=p,this._cycle=this._repeat,this._yoyo&&0!==(1&this._cycle)?(this._time=0,this.ratio=this._ease._calcEnd?this._ease.getRatio(0):0):(this._time=v,this.ratio=this._ease._calcEnd?this._ease.getRatio(1):1),this._reversed||(n=!0,r="onComplete"),0===v&&(this._initted||!this.vars.lazy||i)&&(this._startTime===this._timeline._duration&&(e=0),(0===e||0>y||y===o)&&y!==e&&(i=!0,y>o&&(r="onReverseComplete")),this._rawPrevTime=f=!t||e||y===e?e:o)):1e-7>e?(this._totalTime=this._time=this._cycle=0,this.ratio=this._ease._calcEnd?this._ease.getRatio(0):0,(0!==m||0===v&&y>0&&y!==o)&&(r="onReverseComplete",n=this._reversed),0>e&&(this._active=!1,0===v&&(this._initted||!this.vars.lazy||i)&&(y>=0&&(i=!0),this._rawPrevTime=f=!t||e||y===e?e:o)),this._initted||(i=!0)):(this._totalTime=this._time=e,0!==this._repeat&&(l=v+this._repeatDelay,this._cycle=this._totalTime/l>>0,0!==this._cycle&&this._cycle===this._totalTime/l&&this._cycle--,this._time=this._totalTime-this._cycle*l,this._yoyo&&0!==(1&this._cycle)&&(this._time=v-this._time),this._time>v?this._time=v:0>this._time&&(this._time=0)),this._easeType?(u=this._time/v,h=this._easeType,d=this._easePower,(1===h||3===h&&u>=.5)&&(u=1-u),3===h&&(u*=2),1===d?u*=u:2===d?u*=u*u:3===d?u*=u*u*u:4===d&&(u*=u*u*u*u),this.ratio=1===h?1-u:2===h?u:.5>this._time/v?u/2:1-u/2):this.ratio=this._ease.getRatio(this._time/v)),g===this._time&&!i&&_===this._cycle)return void(m!==this._totalTime&&this._onUpdate&&(t||this._onUpdate.apply(this.vars.onUpdateScope||this,this.vars.onUpdateParams||c)));if(!this._initted){if(this._init(),!this._initted||this._gc)return;if(!i&&this._firstPT&&(this.vars.lazy!==!1&&this._duration||this.vars.lazy&&!this._duration))return this._time=g,this._totalTime=m,this._rawPrevTime=y,this._cycle=_,s.lazyTweens.push(this),void(this._lazy=[e,t]);this._time&&!n?this.ratio=this._ease.getRatio(this._time/v):n&&this._ease._calcEnd&&(this.ratio=this._ease.getRatio(0===this._time?0:1))}for(this._lazy!==!1&&(this._lazy=!1),this._active||!this._paused&&this._time!==g&&e>=0&&(this._active=!0),0===m&&(2===this._initted&&e>0&&this._init(),this._startAt&&(e>=0?this._startAt.render(e,t,i):r||(r="_dummyGS")),this.vars.onStart&&(0!==this._totalTime||0===v)&&(t||this.vars.onStart.apply(this.vars.onStartScope||this,this.vars.onStartParams||c))),a=this._firstPT;a;)a.f?a.t[a.p](a.c*this.ratio+a.s):a.t[a.p]=a.c*this.ratio+a.s,a=a._next;this._onUpdate&&(0>e&&this._startAt&&this._startTime&&this._startAt.render(e,t,i),t||(this._totalTime!==m||n)&&this._onUpdate.apply(this.vars.onUpdateScope||this,this.vars.onUpdateParams||c)),this._cycle!==_&&(t||this._gc||this.vars.onRepeat&&this.vars.onRepeat.apply(this.vars.onRepeatScope||this,this.vars.onRepeatParams||c)),r&&(!this._gc||i)&&(0>e&&this._startAt&&!this._onUpdate&&this._startTime&&this._startAt.render(e,t,i),n&&(this._timeline.autoRemoveChildren&&this._enabled(!1,!1),this._active=!1),!t&&this.vars[r]&&this.vars[r].apply(this.vars[r+"Scope"]||this,this.vars[r+"Params"]||c),0===v&&this._rawPrevTime===o&&f!==o&&(this._rawPrevTime=0))},r.to=function(e,t,i){return new r(e,t,i)},r.from=function(e,t,i){return i.runBackwards=!0,i.immediateRender=0!=i.immediateRender,new r(e,t,i)},r.fromTo=function(e,t,i,n){return n.startAt=i,n.immediateRender=0!=n.immediateRender&&0!=i.immediateRender,new r(e,t,n)},r.staggerTo=r.allTo=function(e,t,o,s,u,h,d){s=s||0;var f,p,g,m,_=o.delay||0,v=[],y=function(){o.onComplete&&o.onComplete.apply(o.onCompleteScope||this,arguments),u.apply(d||this,h||c)};for(l(e)||("string"==typeof e&&(e=i.selector(e)||e),a(e)&&(e=n(e))),e=e||[],0>s&&(e=n(e),e.reverse(),s*=-1),f=e.length-1,g=0;f>=g;g++){p={};for(m in o)p[m]=o[m];p.delay=_,g===f&&u&&(p.onComplete=y),v[g]=new r(e[g],t,p),_+=s}return v},r.staggerFrom=r.allFrom=function(e,t,i,n,o,s,a){return i.runBackwards=!0,i.immediateRender=0!=i.immediateRender,r.staggerTo(e,t,i,n,o,s,a)},r.staggerFromTo=r.allFromTo=function(e,t,i,n,o,s,a,l){return n.startAt=i,n.immediateRender=0!=n.immediateRender&&0!=i.immediateRender,r.staggerTo(e,t,n,o,s,a,l)},r.delayedCall=function(e,t,i,n,o){return new r(t,0,{delay:e,onComplete:t,onCompleteParams:i,onCompleteScope:n,onReverseComplete:t,onReverseCompleteParams:i,onReverseCompleteScope:n,immediateRender:!1,useFrames:o,overwrite:0})},r.set=function(e,t){return new r(e,0,t)},r.isTweening=function(e){return i.getTweensOf(e,!0).length>0};var h=function(e,t){for(var n=[],r=0,o=e._first;o;)o instanceof i?n[r++]=o:(t&&(n[r++]=o),n=n.concat(h(o,t)),r=n.length),o=o._next;return n},d=r.getAllTweens=function(t){return h(e._rootTimeline,t).concat(h(e._rootFramesTimeline,t))};r.killAll=function(e,i,n,r){null==i&&(i=!0),null==n&&(n=!0);var o,s,a,l=d(0!=r),u=l.length,c=i&&n&&r;for(a=0;u>a;a++)s=l[a],(c||s instanceof t||(o=s.target===s.vars.onComplete)&&n||i&&!o)&&(e?s.totalTime(s._reversed?0:s.totalDuration()):s._enabled(!1,!1))},r.killChildTweensOf=function(e,t){if(null!=e){var o,u,c,h,d,f=s.tweenLookup;if("string"==typeof e&&(e=i.selector(e)||e),a(e)&&(e=n(e)),l(e))for(h=e.length;--h>-1;)r.killChildTweensOf(e[h],t);else{o=[];for(c in f)for(u=f[c].target.parentNode;u;)u===e&&(o=o.concat(f[c].tweens)),u=u.parentNode;for(d=o.length,h=0;d>h;h++)t&&o[h].totalTime(o[h].totalDuration()),o[h]._enabled(!1,!1)}}};var f=function(e,i,n,r){i=i!==!1,n=n!==!1,r=r!==!1;for(var o,s,a=d(r),l=i&&n&&r,u=a.length;--u>-1;)s=a[u],(l||s instanceof t||(o=s.target===s.vars.onComplete)&&n||i&&!o)&&s.paused(e)};return r.pauseAll=function(e,t,i){f(!0,e,t,i)},r.resumeAll=function(e,t,i){f(!1,e,t,i)},r.globalTimeScale=function(t){var n=e._rootTimeline,r=i.ticker.time;return arguments.length?(t=t||o,n._startTime=r-(r-n._startTime)*n._timeScale/t,n=e._rootFramesTimeline,r=i.ticker.frame,n._startTime=r-(r-n._startTime)*n._timeScale/t,n._timeScale=e._rootTimeline._timeScale=t,t):n._timeScale},u.progress=function(e){return arguments.length?this.totalTime(this.duration()*(this._yoyo&&0!==(1&this._cycle)?1-e:e)+this._cycle*(this._duration+this._repeatDelay),!1):this._time/this.duration()},u.totalProgress=function(e){return arguments.length?this.totalTime(this.totalDuration()*e,!1):this._totalTime/this.totalDuration()},u.time=function(e,t){return arguments.length?(this._dirty&&this.totalDuration(),e>this._duration&&(e=this._duration),this._yoyo&&0!==(1&this._cycle)?e=this._duration-e+this._cycle*(this._duration+this._repeatDelay):0!==this._repeat&&(e+=this._cycle*(this._duration+this._repeatDelay)),this.totalTime(e,t)):this._time},u.duration=function(t){return arguments.length?e.prototype.duration.call(this,t):this._duration},u.totalDuration=function(e){return arguments.length?-1===this._repeat?this:this.duration((e-this._repeat*this._repeatDelay)/(this._repeat+1)):(this._dirty&&(this._totalDuration=-1===this._repeat?999999999999:this._duration*(this._repeat+1)+this._repeatDelay*this._repeat,this._dirty=!1),this._totalDuration)},u.repeat=function(e){return arguments.length?(this._repeat=e,this._uncache(!0)):this._repeat},u.repeatDelay=function(e){return arguments.length?(this._repeatDelay=e,this._uncache(!0)):this._repeatDelay},u.yoyo=function(e){return arguments.length?(this._yoyo=e,this):this._yoyo},r},!0),_gsScope._gsDefine("TimelineLite",["core.Animation","core.SimpleTimeline","TweenLite"],function(e,t,i){var n=function(e){t.call(this,e),this._labels={},this.autoRemoveChildren=this.vars.autoRemoveChildren===!0,this.smoothChildTiming=this.vars.smoothChildTiming===!0,this._sortChildren=!0,this._onUpdate=this.vars.onUpdate;var i,n,r=this.vars;for(n in r)i=r[n],a(i)&&-1!==i.join("").indexOf("{self}")&&(r[n]=this._swapSelfInParams(i));a(r.tweens)&&this.add(r.tweens,0,r.align,r.stagger)},r=1e-10,o=i._internals,s=o.isSelector,a=o.isArray,l=o.lazyTweens,u=o.lazyRender,c=[],h=_gsScope._gsDefine.globals,d=function(e){var t,i={};for(t in e)i[t]=e[t];return i},f=function(e,t,i,n){var r=e._timeline._totalTime;(t||!this._forcingPlayhead)&&(e._timeline.pause(e._startTime),t&&t.apply(n||e._timeline,i||c),this._forcingPlayhead&&e._timeline.seek(r))},p=function(e){var t,i=[],n=e.length;for(t=0;t!==n;i.push(e[t++]));return i},g=n.prototype=new t;return n.version="1.14.2",g.constructor=n,g.kill()._gc=g._forcingPlayhead=!1,g.to=function(e,t,n,r){var o=n.repeat&&h.TweenMax||i;return t?this.add(new o(e,t,n),r):this.set(e,n,r)},g.from=function(e,t,n,r){return this.add((n.repeat&&h.TweenMax||i).from(e,t,n),r)},g.fromTo=function(e,t,n,r,o){var s=r.repeat&&h.TweenMax||i;return t?this.add(s.fromTo(e,t,n,r),o):this.set(e,r,o)},g.staggerTo=function(e,t,r,o,a,l,u,c){var h,f=new n({onComplete:l,onCompleteParams:u,onCompleteScope:c,smoothChildTiming:this.smoothChildTiming});for("string"==typeof e&&(e=i.selector(e)||e),e=e||[],s(e)&&(e=p(e)),o=o||0,0>o&&(e=p(e),e.reverse(),o*=-1),h=0;e.length>h;h++)r.startAt&&(r.startAt=d(r.startAt)),f.to(e[h],t,d(r),h*o);return this.add(f,a)},g.staggerFrom=function(e,t,i,n,r,o,s,a){return i.immediateRender=0!=i.immediateRender,i.runBackwards=!0,this.staggerTo(e,t,i,n,r,o,s,a)},g.staggerFromTo=function(e,t,i,n,r,o,s,a,l){return n.startAt=i,n.immediateRender=0!=n.immediateRender&&0!=i.immediateRender,this.staggerTo(e,t,n,r,o,s,a,l)},g.call=function(e,t,n,r){return this.add(i.delayedCall(0,e,t,n),r)},g.set=function(e,t,n){return n=this._parseTimeOrLabel(n,0,!0),null==t.immediateRender&&(t.immediateRender=n===this._time&&!this._paused),this.add(new i(e,0,t),n)},n.exportRoot=function(e,t){e=e||{},null==e.smoothChildTiming&&(e.smoothChildTiming=!0);var r,o,s=new n(e),a=s._timeline;for(null==t&&(t=!0),a._remove(s,!0),s._startTime=0,s._rawPrevTime=s._time=s._totalTime=a._time,r=a._first;r;)o=r._next,t&&r instanceof i&&r.target===r.vars.onComplete||s.add(r,r._startTime-r._delay),r=o;return a.add(s,0),s},g.add=function(r,o,s,l){var u,c,h,d,f,p;if("number"!=typeof o&&(o=this._parseTimeOrLabel(o,0,!0,r)),!(r instanceof e)){if(r instanceof Array||r&&r.push&&a(r)){for(s=s||"normal",l=l||0,u=o,c=r.length,h=0;c>h;h++)a(d=r[h])&&(d=new n({tweens:d})),this.add(d,u),"string"!=typeof d&&"function"!=typeof d&&("sequence"===s?u=d._startTime+d.totalDuration()/d._timeScale:"start"===s&&(d._startTime-=d.delay())),u+=l;return this._uncache(!0)}if("string"==typeof r)return this.addLabel(r,o);if("function"!=typeof r)throw"Cannot add "+r+" into the timeline; it is not a tween, timeline, function, or string.";r=i.delayedCall(0,r)}if(t.prototype.add.call(this,r,o),(this._gc||this._time===this._duration)&&!this._paused&&this._duration<this.duration())for(f=this,p=f.rawTime()>r._startTime;f._timeline;)p&&f._timeline.smoothChildTiming?f.totalTime(f._totalTime,!0):f._gc&&f._enabled(!0,!1),f=f._timeline;return this},g.remove=function(t){if(t instanceof e)return this._remove(t,!1);if(t instanceof Array||t&&t.push&&a(t)){for(var i=t.length;--i>-1;)this.remove(t[i]);return this}return"string"==typeof t?this.removeLabel(t):this.kill(null,t)},g._remove=function(e,i){t.prototype._remove.call(this,e,i);var n=this._last;return n?this._time>n._startTime+n._totalDuration/n._timeScale&&(this._time=this.duration(),this._totalTime=this._totalDuration):this._time=this._totalTime=this._duration=this._totalDuration=0,this},g.append=function(e,t){return this.add(e,this._parseTimeOrLabel(null,t,!0,e))},g.insert=g.insertMultiple=function(e,t,i,n){return this.add(e,t||0,i,n)},g.appendMultiple=function(e,t,i,n){return this.add(e,this._parseTimeOrLabel(null,t,!0,e),i,n)},g.addLabel=function(e,t){return this._labels[e]=this._parseTimeOrLabel(t),this},g.addPause=function(e,t,i,n){return this.call(f,["{self}",t,i,n],this,e)
},g.removeLabel=function(e){return delete this._labels[e],this},g.getLabelTime=function(e){return null!=this._labels[e]?this._labels[e]:-1},g._parseTimeOrLabel=function(t,i,n,r){var o;if(r instanceof e&&r.timeline===this)this.remove(r);else if(r&&(r instanceof Array||r.push&&a(r)))for(o=r.length;--o>-1;)r[o]instanceof e&&r[o].timeline===this&&this.remove(r[o]);if("string"==typeof i)return this._parseTimeOrLabel(i,n&&"number"==typeof t&&null==this._labels[i]?t-this.duration():0,n);if(i=i||0,"string"!=typeof t||!isNaN(t)&&null==this._labels[t])null==t&&(t=this.duration());else{if(o=t.indexOf("="),-1===o)return null==this._labels[t]?n?this._labels[t]=this.duration()+i:i:this._labels[t]+i;i=parseInt(t.charAt(o-1)+"1",10)*Number(t.substr(o+1)),t=o>1?this._parseTimeOrLabel(t.substr(0,o-1),0,n):this.duration()}return Number(t)+i},g.seek=function(e,t){return this.totalTime("number"==typeof e?e:this._parseTimeOrLabel(e),t!==!1)},g.stop=function(){return this.paused(!0)},g.gotoAndPlay=function(e,t){return this.play(e,t)},g.gotoAndStop=function(e,t){return this.pause(e,t)},g.render=function(e,t,i){this._gc&&this._enabled(!0,!1);var n,o,s,a,h,d=this._dirty?this.totalDuration():this._totalDuration,f=this._time,p=this._startTime,g=this._timeScale,m=this._paused;if(e>=d?(this._totalTime=this._time=d,this._reversed||this._hasPausedChild()||(o=!0,a="onComplete",0===this._duration&&(0===e||0>this._rawPrevTime||this._rawPrevTime===r)&&this._rawPrevTime!==e&&this._first&&(h=!0,this._rawPrevTime>r&&(a="onReverseComplete"))),this._rawPrevTime=this._duration||!t||e||this._rawPrevTime===e?e:r,e=d+1e-4):1e-7>e?(this._totalTime=this._time=0,(0!==f||0===this._duration&&this._rawPrevTime!==r&&(this._rawPrevTime>0||0>e&&this._rawPrevTime>=0))&&(a="onReverseComplete",o=this._reversed),0>e?(this._active=!1,this._rawPrevTime>=0&&this._first&&(h=!0),this._rawPrevTime=e):(this._rawPrevTime=this._duration||!t||e||this._rawPrevTime===e?e:r,e=0,this._initted||(h=!0))):this._totalTime=this._time=this._rawPrevTime=e,this._time!==f&&this._first||i||h){if(this._initted||(this._initted=!0),this._active||!this._paused&&this._time!==f&&e>0&&(this._active=!0),0===f&&this.vars.onStart&&0!==this._time&&(t||this.vars.onStart.apply(this.vars.onStartScope||this,this.vars.onStartParams||c)),this._time>=f)for(n=this._first;n&&(s=n._next,!this._paused||m);)(n._active||n._startTime<=this._time&&!n._paused&&!n._gc)&&(n._reversed?n.render((n._dirty?n.totalDuration():n._totalDuration)-(e-n._startTime)*n._timeScale,t,i):n.render((e-n._startTime)*n._timeScale,t,i)),n=s;else for(n=this._last;n&&(s=n._prev,!this._paused||m);)(n._active||f>=n._startTime&&!n._paused&&!n._gc)&&(n._reversed?n.render((n._dirty?n.totalDuration():n._totalDuration)-(e-n._startTime)*n._timeScale,t,i):n.render((e-n._startTime)*n._timeScale,t,i)),n=s;this._onUpdate&&(t||(l.length&&u(),this._onUpdate.apply(this.vars.onUpdateScope||this,this.vars.onUpdateParams||c))),a&&(this._gc||(p===this._startTime||g!==this._timeScale)&&(0===this._time||d>=this.totalDuration())&&(o&&(l.length&&u(),this._timeline.autoRemoveChildren&&this._enabled(!1,!1),this._active=!1),!t&&this.vars[a]&&this.vars[a].apply(this.vars[a+"Scope"]||this,this.vars[a+"Params"]||c)))}},g._hasPausedChild=function(){for(var e=this._first;e;){if(e._paused||e instanceof n&&e._hasPausedChild())return!0;e=e._next}return!1},g.getChildren=function(e,t,n,r){r=r||-9999999999;for(var o=[],s=this._first,a=0;s;)r>s._startTime||(s instanceof i?t!==!1&&(o[a++]=s):(n!==!1&&(o[a++]=s),e!==!1&&(o=o.concat(s.getChildren(!0,t,n)),a=o.length))),s=s._next;return o},g.getTweensOf=function(e,t){var n,r,o=this._gc,s=[],a=0;for(o&&this._enabled(!0,!0),n=i.getTweensOf(e),r=n.length;--r>-1;)(n[r].timeline===this||t&&this._contains(n[r]))&&(s[a++]=n[r]);return o&&this._enabled(!1,!0),s},g.recent=function(){return this._recent},g._contains=function(e){for(var t=e.timeline;t;){if(t===this)return!0;t=t.timeline}return!1},g.shiftChildren=function(e,t,i){i=i||0;for(var n,r=this._first,o=this._labels;r;)r._startTime>=i&&(r._startTime+=e),r=r._next;if(t)for(n in o)o[n]>=i&&(o[n]+=e);return this._uncache(!0)},g._kill=function(e,t){if(!e&&!t)return this._enabled(!1,!1);for(var i=t?this.getTweensOf(t):this.getChildren(!0,!0,!1),n=i.length,r=!1;--n>-1;)i[n]._kill(e,t)&&(r=!0);return r},g.clear=function(e){var t=this.getChildren(!1,!0,!0),i=t.length;for(this._time=this._totalTime=0;--i>-1;)t[i]._enabled(!1,!1);return e!==!1&&(this._labels={}),this._uncache(!0)},g.invalidate=function(){for(var t=this._first;t;)t.invalidate(),t=t._next;return e.prototype.invalidate.call(this)},g._enabled=function(e,i){if(e===this._gc)for(var n=this._first;n;)n._enabled(e,!0),n=n._next;return t.prototype._enabled.call(this,e,i)},g.totalTime=function(){this._forcingPlayhead=!0;var t=e.prototype.totalTime.apply(this,arguments);return this._forcingPlayhead=!1,t},g.duration=function(e){return arguments.length?(0!==this.duration()&&0!==e&&this.timeScale(this._duration/e),this):(this._dirty&&this.totalDuration(),this._duration)},g.totalDuration=function(e){if(!arguments.length){if(this._dirty){for(var t,i,n=0,r=this._last,o=999999999999;r;)t=r._prev,r._dirty&&r.totalDuration(),r._startTime>o&&this._sortChildren&&!r._paused?this.add(r,r._startTime-r._delay):o=r._startTime,0>r._startTime&&!r._paused&&(n-=r._startTime,this._timeline.smoothChildTiming&&(this._startTime+=r._startTime/this._timeScale),this.shiftChildren(-r._startTime,!1,-9999999999),o=0),i=r._startTime+r._totalDuration/r._timeScale,i>n&&(n=i),r=t;this._duration=this._totalDuration=n,this._dirty=!1}return this._totalDuration}return 0!==this.totalDuration()&&0!==e&&this.timeScale(this._totalDuration/e),this},g.usesFrames=function(){for(var t=this._timeline;t._timeline;)t=t._timeline;return t===e._rootFramesTimeline},g.rawTime=function(){return this._paused?this._totalTime:(this._timeline.rawTime()-this._startTime)*this._timeScale},n},!0),_gsScope._gsDefine("TimelineMax",["TimelineLite","TweenLite","easing.Ease"],function(e,t,i){var n=function(t){e.call(this,t),this._repeat=this.vars.repeat||0,this._repeatDelay=this.vars.repeatDelay||0,this._cycle=0,this._yoyo=this.vars.yoyo===!0,this._dirty=!0},r=1e-10,o=[],s=t._internals,a=s.lazyTweens,l=s.lazyRender,u=new i(null,null,1,0),c=n.prototype=new e;return c.constructor=n,c.kill()._gc=!1,n.version="1.14.2",c.invalidate=function(){return this._yoyo=this.vars.yoyo===!0,this._repeat=this.vars.repeat||0,this._repeatDelay=this.vars.repeatDelay||0,this._uncache(!0),e.prototype.invalidate.call(this)},c.addCallback=function(e,i,n,r){return this.add(t.delayedCall(0,e,n,r),i)},c.removeCallback=function(e,t){if(e)if(null==t)this._kill(null,e);else for(var i=this.getTweensOf(e,!1),n=i.length,r=this._parseTimeOrLabel(t);--n>-1;)i[n]._startTime===r&&i[n]._enabled(!1,!1);return this},c.tweenTo=function(e,i){i=i||{};var n,r,s,a={ease:u,overwrite:i.delay?2:1,useFrames:this.usesFrames(),immediateRender:!1};for(r in i)a[r]=i[r];return a.time=this._parseTimeOrLabel(e),n=Math.abs(Number(a.time)-this._time)/this._timeScale||.001,s=new t(this,n,a),a.onStart=function(){s.target.paused(!0),s.vars.time!==s.target.time()&&n===s.duration()&&s.duration(Math.abs(s.vars.time-s.target.time())/s.target._timeScale),i.onStart&&i.onStart.apply(i.onStartScope||s,i.onStartParams||o)},s},c.tweenFromTo=function(e,t,i){i=i||{},e=this._parseTimeOrLabel(e),i.startAt={onComplete:this.seek,onCompleteParams:[e],onCompleteScope:this},i.immediateRender=i.immediateRender!==!1;var n=this.tweenTo(t,i);return n.duration(Math.abs(n.vars.time-e)/this._timeScale||.001)},c.render=function(e,t,i){this._gc&&this._enabled(!0,!1);var n,s,u,c,h,d,f=this._dirty?this.totalDuration():this._totalDuration,p=this._duration,g=this._time,m=this._totalTime,_=this._startTime,v=this._timeScale,y=this._rawPrevTime,b=this._paused,x=this._cycle;if(e>=f?(this._locked||(this._totalTime=f,this._cycle=this._repeat),this._reversed||this._hasPausedChild()||(s=!0,c="onComplete",0===this._duration&&(0===e||0>y||y===r)&&y!==e&&this._first&&(h=!0,y>r&&(c="onReverseComplete"))),this._rawPrevTime=this._duration||!t||e||this._rawPrevTime===e?e:r,this._yoyo&&0!==(1&this._cycle)?this._time=e=0:(this._time=p,e=p+1e-4)):1e-7>e?(this._locked||(this._totalTime=this._cycle=0),this._time=0,(0!==g||0===p&&y!==r&&(y>0||0>e&&y>=0)&&!this._locked)&&(c="onReverseComplete",s=this._reversed),0>e?(this._active=!1,y>=0&&this._first&&(h=!0),this._rawPrevTime=e):(this._rawPrevTime=p||!t||e||this._rawPrevTime===e?e:r,e=0,this._initted||(h=!0))):(0===p&&0>y&&(h=!0),this._time=this._rawPrevTime=e,this._locked||(this._totalTime=e,0!==this._repeat&&(d=p+this._repeatDelay,this._cycle=this._totalTime/d>>0,0!==this._cycle&&this._cycle===this._totalTime/d&&this._cycle--,this._time=this._totalTime-this._cycle*d,this._yoyo&&0!==(1&this._cycle)&&(this._time=p-this._time),this._time>p?(this._time=p,e=p+1e-4):0>this._time?this._time=e=0:e=this._time))),this._cycle!==x&&!this._locked){var w=this._yoyo&&0!==(1&x),T=w===(this._yoyo&&0!==(1&this._cycle)),k=this._totalTime,S=this._cycle,C=this._rawPrevTime,P=this._time;if(this._totalTime=x*p,x>this._cycle?w=!w:this._totalTime+=p,this._time=g,this._rawPrevTime=0===p?y-1e-4:y,this._cycle=x,this._locked=!0,g=w?0:p,this.render(g,t,0===p),t||this._gc||this.vars.onRepeat&&this.vars.onRepeat.apply(this.vars.onRepeatScope||this,this.vars.onRepeatParams||o),T&&(g=w?p+1e-4:-1e-4,this.render(g,!0,!1)),this._locked=!1,this._paused&&!b)return;this._time=P,this._totalTime=k,this._cycle=S,this._rawPrevTime=C}if(!(this._time!==g&&this._first||i||h))return void(m!==this._totalTime&&this._onUpdate&&(t||this._onUpdate.apply(this.vars.onUpdateScope||this,this.vars.onUpdateParams||o)));if(this._initted||(this._initted=!0),this._active||!this._paused&&this._totalTime!==m&&e>0&&(this._active=!0),0===m&&this.vars.onStart&&0!==this._totalTime&&(t||this.vars.onStart.apply(this.vars.onStartScope||this,this.vars.onStartParams||o)),this._time>=g)for(n=this._first;n&&(u=n._next,!this._paused||b);)(n._active||n._startTime<=this._time&&!n._paused&&!n._gc)&&(n._reversed?n.render((n._dirty?n.totalDuration():n._totalDuration)-(e-n._startTime)*n._timeScale,t,i):n.render((e-n._startTime)*n._timeScale,t,i)),n=u;else for(n=this._last;n&&(u=n._prev,!this._paused||b);)(n._active||g>=n._startTime&&!n._paused&&!n._gc)&&(n._reversed?n.render((n._dirty?n.totalDuration():n._totalDuration)-(e-n._startTime)*n._timeScale,t,i):n.render((e-n._startTime)*n._timeScale,t,i)),n=u;this._onUpdate&&(t||(a.length&&l(),this._onUpdate.apply(this.vars.onUpdateScope||this,this.vars.onUpdateParams||o))),c&&(this._locked||this._gc||(_===this._startTime||v!==this._timeScale)&&(0===this._time||f>=this.totalDuration())&&(s&&(a.length&&l(),this._timeline.autoRemoveChildren&&this._enabled(!1,!1),this._active=!1),!t&&this.vars[c]&&this.vars[c].apply(this.vars[c+"Scope"]||this,this.vars[c+"Params"]||o)))},c.getActive=function(e,t,i){null==e&&(e=!0),null==t&&(t=!0),null==i&&(i=!1);var n,r,o=[],s=this.getChildren(e,t,i),a=0,l=s.length;for(n=0;l>n;n++)r=s[n],r.isActive()&&(o[a++]=r);return o},c.getLabelAfter=function(e){e||0!==e&&(e=this._time);var t,i=this.getLabelsArray(),n=i.length;for(t=0;n>t;t++)if(i[t].time>e)return i[t].name;return null},c.getLabelBefore=function(e){null==e&&(e=this._time);for(var t=this.getLabelsArray(),i=t.length;--i>-1;)if(e>t[i].time)return t[i].name;return null},c.getLabelsArray=function(){var e,t=[],i=0;for(e in this._labels)t[i++]={time:this._labels[e],name:e};return t.sort(function(e,t){return e.time-t.time}),t},c.progress=function(e,t){return arguments.length?this.totalTime(this.duration()*(this._yoyo&&0!==(1&this._cycle)?1-e:e)+this._cycle*(this._duration+this._repeatDelay),t):this._time/this.duration()},c.totalProgress=function(e,t){return arguments.length?this.totalTime(this.totalDuration()*e,t):this._totalTime/this.totalDuration()},c.totalDuration=function(t){return arguments.length?-1===this._repeat?this:this.duration((t-this._repeat*this._repeatDelay)/(this._repeat+1)):(this._dirty&&(e.prototype.totalDuration.call(this),this._totalDuration=-1===this._repeat?999999999999:this._duration*(this._repeat+1)+this._repeatDelay*this._repeat),this._totalDuration)},c.time=function(e,t){return arguments.length?(this._dirty&&this.totalDuration(),e>this._duration&&(e=this._duration),this._yoyo&&0!==(1&this._cycle)?e=this._duration-e+this._cycle*(this._duration+this._repeatDelay):0!==this._repeat&&(e+=this._cycle*(this._duration+this._repeatDelay)),this.totalTime(e,t)):this._time},c.repeat=function(e){return arguments.length?(this._repeat=e,this._uncache(!0)):this._repeat},c.repeatDelay=function(e){return arguments.length?(this._repeatDelay=e,this._uncache(!0)):this._repeatDelay},c.yoyo=function(e){return arguments.length?(this._yoyo=e,this):this._yoyo},c.currentLabel=function(e){return arguments.length?this.seek(e,!0):this.getLabelBefore(this._time+1e-8)},n},!0),function(){var e=180/Math.PI,t=[],i=[],n=[],r={},o=function(e,t,i,n){this.a=e,this.b=t,this.c=i,this.d=n,this.da=n-e,this.ca=i-e,this.ba=t-e},s=",x,y,z,left,top,right,bottom,marginTop,marginLeft,marginRight,marginBottom,paddingLeft,paddingTop,paddingRight,paddingBottom,backgroundPosition,backgroundPosition_y,",a=function(e,t,i,n){var r={a:e},o={},s={},a={c:n},l=(e+t)/2,u=(t+i)/2,c=(i+n)/2,h=(l+u)/2,d=(u+c)/2,f=(d-h)/8;return r.b=l+(e-l)/4,o.b=h+f,r.c=o.a=(r.b+o.b)/2,o.c=s.a=(h+d)/2,s.b=d-f,a.b=c+(n-c)/4,s.c=a.a=(s.b+a.b)/2,[r,o,s,a]},l=function(e,r,o,s,l){var u,c,h,d,f,p,g,m,_,v,y,b,x,w=e.length-1,T=0,k=e[0].a;for(u=0;w>u;u++)f=e[T],c=f.a,h=f.d,d=e[T+1].d,l?(y=t[u],b=i[u],x=.25*(b+y)*r/(s?.5:n[u]||.5),p=h-(h-c)*(s?.5*r:0!==y?x/y:0),g=h+(d-h)*(s?.5*r:0!==b?x/b:0),m=h-(p+((g-p)*(3*y/(y+b)+.5)/4||0))):(p=h-.5*(h-c)*r,g=h+.5*(d-h)*r,m=h-(p+g)/2),p+=m,g+=m,f.c=_=p,f.b=0!==u?k:k=f.a+.6*(f.c-f.a),f.da=h-c,f.ca=_-c,f.ba=k-c,o?(v=a(c,k,_,h),e.splice(T,1,v[0],v[1],v[2],v[3]),T+=4):T++,k=g;f=e[T],f.b=k,f.c=k+.4*(f.d-k),f.da=f.d-f.a,f.ca=f.c-f.a,f.ba=k-f.a,o&&(v=a(f.a,k,f.c,f.d),e.splice(T,1,v[0],v[1],v[2],v[3]))},u=function(e,n,r,s){var a,l,u,c,h,d,f=[];if(s)for(e=[s].concat(e),l=e.length;--l>-1;)"string"==typeof(d=e[l][n])&&"="===d.charAt(1)&&(e[l][n]=s[n]+Number(d.charAt(0)+d.substr(2)));if(a=e.length-2,0>a)return f[0]=new o(e[0][n],0,0,e[-1>a?0:1][n]),f;for(l=0;a>l;l++)u=e[l][n],c=e[l+1][n],f[l]=new o(u,0,0,c),r&&(h=e[l+2][n],t[l]=(t[l]||0)+(c-u)*(c-u),i[l]=(i[l]||0)+(h-c)*(h-c));return f[l]=new o(e[l][n],0,0,e[l+1][n]),f},c=function(e,o,a,c,h,d){var f,p,g,m,_,v,y,b,x={},w=[],T=d||e[0];h="string"==typeof h?","+h+",":s,null==o&&(o=1);for(p in e[0])w.push(p);if(e.length>1){for(b=e[e.length-1],y=!0,f=w.length;--f>-1;)if(p=w[f],Math.abs(T[p]-b[p])>.05){y=!1;break}y&&(e=e.concat(),d&&e.unshift(d),e.push(e[1]),d=e[e.length-3])}for(t.length=i.length=n.length=0,f=w.length;--f>-1;)p=w[f],r[p]=-1!==h.indexOf(","+p+","),x[p]=u(e,p,r[p],d);for(f=t.length;--f>-1;)t[f]=Math.sqrt(t[f]),i[f]=Math.sqrt(i[f]);if(!c){for(f=w.length;--f>-1;)if(r[p])for(g=x[w[f]],v=g.length-1,m=0;v>m;m++)_=g[m+1].da/i[m]+g[m].da/t[m],n[m]=(n[m]||0)+_*_;for(f=n.length;--f>-1;)n[f]=Math.sqrt(n[f])}for(f=w.length,m=a?4:1;--f>-1;)p=w[f],g=x[p],l(g,o,a,c,r[p]),y&&(g.splice(0,m),g.splice(g.length-m,m));return x},h=function(e,t,i){t=t||"soft";var n,r,s,a,l,u,c,h,d,f,p,g={},m="cubic"===t?3:2,_="soft"===t,v=[];if(_&&i&&(e=[i].concat(e)),null==e||m+1>e.length)throw"invalid Bezier data";for(d in e[0])v.push(d);for(u=v.length;--u>-1;){for(d=v[u],g[d]=l=[],f=0,h=e.length,c=0;h>c;c++)n=null==i?e[c][d]:"string"==typeof(p=e[c][d])&&"="===p.charAt(1)?i[d]+Number(p.charAt(0)+p.substr(2)):Number(p),_&&c>1&&h-1>c&&(l[f++]=(n+l[f-2])/2),l[f++]=n;for(h=f-m+1,f=0,c=0;h>c;c+=m)n=l[c],r=l[c+1],s=l[c+2],a=2===m?0:l[c+3],l[f++]=p=3===m?new o(n,r,s,a):new o(n,(2*r+n)/3,(2*r+s)/3,s);l.length=f}return g},d=function(e,t,i){for(var n,r,o,s,a,l,u,c,h,d,f,p=1/i,g=e.length;--g>-1;)for(d=e[g],o=d.a,s=d.d-o,a=d.c-o,l=d.b-o,n=r=0,c=1;i>=c;c++)u=p*c,h=1-u,n=r-(r=(u*u*s+3*h*(u*a+h*l))*u),f=g*i+c-1,t[f]=(t[f]||0)+n*n},f=function(e,t){t=t>>0||6;var i,n,r,o,s=[],a=[],l=0,u=0,c=t-1,h=[],f=[];for(i in e)d(e[i],s,t);for(r=s.length,n=0;r>n;n++)l+=Math.sqrt(s[n]),o=n%t,f[o]=l,o===c&&(u+=l,o=n/t>>0,h[o]=f,a[o]=u,l=0,f=[]);return{length:u,lengths:a,segments:h}},p=_gsScope._gsDefine.plugin({propName:"bezier",priority:-1,version:"1.3.3",API:2,global:!0,init:function(e,t,i){this._target=e,t instanceof Array&&(t={values:t}),this._func={},this._round={},this._props=[],this._timeRes=null==t.timeResolution?6:parseInt(t.timeResolution,10);var n,r,o,s,a,l=t.values||[],u={},d=l[0],p=t.autoRotate||i.vars.orientToBezier;this._autoRotate=p?p instanceof Array?p:[["x","y","rotation",p===!0?0:Number(p)||0]]:null;for(n in d)this._props.push(n);for(o=this._props.length;--o>-1;)n=this._props[o],this._overwriteProps.push(n),r=this._func[n]="function"==typeof e[n],u[n]=r?e[n.indexOf("set")||"function"!=typeof e["get"+n.substr(3)]?n:"get"+n.substr(3)]():parseFloat(e[n]),a||u[n]!==l[0][n]&&(a=u);if(this._beziers="cubic"!==t.type&&"quadratic"!==t.type&&"soft"!==t.type?c(l,isNaN(t.curviness)?1:t.curviness,!1,"thruBasic"===t.type,t.correlate,a):h(l,t.type,u),this._segCount=this._beziers[n].length,this._timeRes){var g=f(this._beziers,this._timeRes);this._length=g.length,this._lengths=g.lengths,this._segments=g.segments,this._l1=this._li=this._s1=this._si=0,this._l2=this._lengths[0],this._curSeg=this._segments[0],this._s2=this._curSeg[0],this._prec=1/this._curSeg.length}if(p=this._autoRotate)for(this._initialRotations=[],p[0]instanceof Array||(this._autoRotate=p=[p]),o=p.length;--o>-1;){for(s=0;3>s;s++)n=p[o][s],this._func[n]="function"==typeof e[n]?e[n.indexOf("set")||"function"!=typeof e["get"+n.substr(3)]?n:"get"+n.substr(3)]:!1;n=p[o][2],this._initialRotations[o]=this._func[n]?this._func[n].call(this._target):this._target[n]}return this._startRatio=i.vars.runBackwards?1:0,!0},set:function(t){var i,n,r,o,s,a,l,u,c,h,d=this._segCount,f=this._func,p=this._target,g=t!==this._startRatio;if(this._timeRes){if(c=this._lengths,h=this._curSeg,t*=this._length,r=this._li,t>this._l2&&d-1>r){for(u=d-1;u>r&&t>=(this._l2=c[++r]););this._l1=c[r-1],this._li=r,this._curSeg=h=this._segments[r],this._s2=h[this._s1=this._si=0]}else if(this._l1>t&&r>0){for(;r>0&&(this._l1=c[--r])>=t;);0===r&&this._l1>t?this._l1=0:r++,this._l2=c[r],this._li=r,this._curSeg=h=this._segments[r],this._s1=h[(this._si=h.length-1)-1]||0,this._s2=h[this._si]}if(i=r,t-=this._l1,r=this._si,t>this._s2&&h.length-1>r){for(u=h.length-1;u>r&&t>=(this._s2=h[++r]););this._s1=h[r-1],this._si=r}else if(this._s1>t&&r>0){for(;r>0&&(this._s1=h[--r])>=t;);0===r&&this._s1>t?this._s1=0:r++,this._s2=h[r],this._si=r}a=(r+(t-this._s1)/(this._s2-this._s1))*this._prec}else i=0>t?0:t>=1?d-1:d*t>>0,a=(t-i*(1/d))*d;for(n=1-a,r=this._props.length;--r>-1;)o=this._props[r],s=this._beziers[o][i],l=(a*a*s.da+3*n*(a*s.ca+n*s.ba))*a+s.a,this._round[o]&&(l=Math.round(l)),f[o]?p[o](l):p[o]=l;if(this._autoRotate){var m,_,v,y,b,x,w,T=this._autoRotate;for(r=T.length;--r>-1;)o=T[r][2],x=T[r][3]||0,w=T[r][4]===!0?1:e,s=this._beziers[T[r][0]],m=this._beziers[T[r][1]],s&&m&&(s=s[i],m=m[i],_=s.a+(s.b-s.a)*a,y=s.b+(s.c-s.b)*a,_+=(y-_)*a,y+=(s.c+(s.d-s.c)*a-y)*a,v=m.a+(m.b-m.a)*a,b=m.b+(m.c-m.b)*a,v+=(b-v)*a,b+=(m.c+(m.d-m.c)*a-b)*a,l=g?Math.atan2(b-v,y-_)*w+x:this._initialRotations[r],f[o]?p[o](l):p[o]=l)}}}),g=p.prototype;p.bezierThrough=c,p.cubicToQuadratic=a,p._autoCSS=!0,p.quadraticToCubic=function(e,t,i){return new o(e,(2*t+e)/3,(2*t+i)/3,i)},p._cssRegister=function(){var e=_gsScope._gsDefine.globals.CSSPlugin;if(e){var t=e._internals,i=t._parseToProxy,n=t._setPluginRatio,r=t.CSSPropTween;t._registerComplexSpecialProp("bezier",{parser:function(e,t,o,s,a,l){t instanceof Array&&(t={values:t}),l=new p;var u,c,h,d=t.values,f=d.length-1,g=[],m={};if(0>f)return a;for(u=0;f>=u;u++)h=i(e,d[u],s,a,l,f!==u),g[u]=h.end;for(c in t)m[c]=t[c];return m.values=g,a=new r(e,"bezier",0,0,h.pt,2),a.data=h,a.plugin=l,a.setRatio=n,0===m.autoRotate&&(m.autoRotate=!0),!m.autoRotate||m.autoRotate instanceof Array||(u=m.autoRotate===!0?0:Number(m.autoRotate),m.autoRotate=null!=h.end.left?[["left","top","rotation",u,!1]]:null!=h.end.x?[["x","y","rotation",u,!1]]:!1),m.autoRotate&&(s._transform||s._enableTransforms(!1),h.autoRotate=s._target._gsTransform),l._onInitTween(h.proxy,m,s._tween),a}})}},g._roundProps=function(e,t){for(var i=this._overwriteProps,n=i.length;--n>-1;)(e[i[n]]||e.bezier||e.bezierThrough)&&(this._round[i[n]]=t)},g._kill=function(e){var t,i,n=this._props;for(t in this._beziers)if(t in e)for(delete this._beziers[t],delete this._func[t],i=n.length;--i>-1;)n[i]===t&&n.splice(i,1);return this._super._kill.call(this,e)}}(),_gsScope._gsDefine("plugins.CSSPlugin",["plugins.TweenPlugin","TweenLite"],function(e,t){var i,n,r,o,s=function(){e.call(this,"css"),this._overwriteProps.length=0,this.setRatio=s.prototype.setRatio},a={},l=s.prototype=new e("css");l.constructor=s,s.version="1.14.2",s.API=2,s.defaultTransformPerspective=0,s.defaultSkewType="compensated",l="px",s.suffixMap={top:l,right:l,bottom:l,left:l,width:l,height:l,fontSize:l,padding:l,margin:l,perspective:l,lineHeight:""};var u,c,h,d,f,p,g=/(?:\d|\-\d|\.\d|\-\.\d)+/g,m=/(?:\d|\-\d|\.\d|\-\.\d|\+=\d|\-=\d|\+=.\d|\-=\.\d)+/g,_=/(?:\+=|\-=|\-|\b)[\d\-\.]+[a-zA-Z0-9]*(?:%|\b)/gi,v=/(?![+-]?\d*\.?\d+|e[+-]\d+)[^0-9]/g,y=/(?:\d|\-|\+|=|#|\.)*/g,b=/opacity *= *([^)]*)/i,x=/opacity:([^;]*)/i,w=/alpha\(opacity *=.+?\)/i,T=/^(rgb|hsl)/,k=/([A-Z])/g,S=/-([a-z])/gi,C=/(^(?:url\(\"|url\())|(?:(\"\))$|\)$)/gi,P=function(e,t){return t.toUpperCase()},A=/(?:Left|Right|Width)/i,O=/(M11|M12|M21|M22)=[\d\-\.e]+/gi,D=/progid\:DXImageTransform\.Microsoft\.Matrix\(.+?\)/i,M=/,(?=[^\)]*(?:\(|$))/gi,R=Math.PI/180,N=180/Math.PI,E={},L=document,j=L.createElement("div"),F=L.createElement("img"),I=s._internals={_specialProps:a},z=navigator.userAgent,X=function(){var e,t=z.indexOf("Android"),i=L.createElement("div");return h=-1!==z.indexOf("Safari")&&-1===z.indexOf("Chrome")&&(-1===t||Number(z.substr(t+8,1))>3),f=h&&6>Number(z.substr(z.indexOf("Version/")+8,1)),d=-1!==z.indexOf("Firefox"),(/MSIE ([0-9]{1,}[\.0-9]{0,})/.exec(z)||/Trident\/.*rv:([0-9]{1,}[\.0-9]{0,})/.exec(z))&&(p=parseFloat(RegExp.$1)),i.innerHTML="<a style='top:1px;opacity:.55;'>a</a>",e=i.getElementsByTagName("a")[0],e?/^0.55/.test(e.style.opacity):!1}(),B=function(e){return b.test("string"==typeof e?e:(e.currentStyle?e.currentStyle.filter:e.style.filter)||"")?parseFloat(RegExp.$1)/100:1},H=function(e){window.console&&console.log(e)},Y="",q="",W=function(e,t){t=t||j;var i,n,r=t.style;if(void 0!==r[e])return e;for(e=e.charAt(0).toUpperCase()+e.substr(1),i=["O","Moz","ms","Ms","Webkit"],n=5;--n>-1&&void 0===r[i[n]+e];);return n>=0?(q=3===n?"ms":i[n],Y="-"+q.toLowerCase()+"-",q+e):null},Q=L.defaultView?L.defaultView.getComputedStyle:function(){},U=s.getStyle=function(e,t,i,n,r){var o;return X||"opacity"!==t?(!n&&e.style[t]?o=e.style[t]:(i=i||Q(e))?o=i[t]||i.getPropertyValue(t)||i.getPropertyValue(t.replace(k,"-$1").toLowerCase()):e.currentStyle&&(o=e.currentStyle[t]),null==r||o&&"none"!==o&&"auto"!==o&&"auto auto"!==o?o:r):B(e)},$=I.convertToPixels=function(e,i,n,r,o){if("px"===r||!r)return n;if("auto"===r||!n)return 0;var a,l,u,c=A.test(i),h=e,d=j.style,f=0>n;if(f&&(n=-n),"%"===r&&-1!==i.indexOf("border"))a=n/100*(c?e.clientWidth:e.clientHeight);else{if(d.cssText="border:0 solid red;position:"+U(e,"position")+";line-height:0;","%"!==r&&h.appendChild)d[c?"borderLeftWidth":"borderTopWidth"]=n+r;else{if(h=e.parentNode||L.body,l=h._gsCache,u=t.ticker.frame,l&&c&&l.time===u)return l.width*n/100;d[c?"width":"height"]=n+r}h.appendChild(j),a=parseFloat(j[c?"offsetWidth":"offsetHeight"]),h.removeChild(j),c&&"%"===r&&s.cacheWidths!==!1&&(l=h._gsCache=h._gsCache||{},l.time=u,l.width=100*(a/n)),0!==a||o||(a=$(e,i,n,r,!0))}return f?-a:a},V=I.calculateOffset=function(e,t,i){if("absolute"!==U(e,"position",i))return 0;var n="left"===t?"Left":"Top",r=U(e,"margin"+n,i);return e["offset"+n]-($(e,t,parseFloat(r),r.replace(y,""))||0)},Z=function(e,t){var i,n,r={};if(t=t||Q(e,null))if(i=t.length)for(;--i>-1;)r[t[i].replace(S,P)]=t.getPropertyValue(t[i]);else for(i in t)r[i]=t[i];else if(t=e.currentStyle||e.style)for(i in t)"string"==typeof i&&void 0===r[i]&&(r[i.replace(S,P)]=t[i]);return X||(r.opacity=B(e)),n=Dt(e,t,!1),r.rotation=n.rotation,r.skewX=n.skewX,r.scaleX=n.scaleX,r.scaleY=n.scaleY,r.x=n.x,r.y=n.y,Tt&&(r.z=n.z,r.rotationX=n.rotationX,r.rotationY=n.rotationY,r.scaleZ=n.scaleZ),r.filters&&delete r.filters,r},G=function(e,t,i,n,r){var o,s,a,l={},u=e.style;for(s in i)"cssText"!==s&&"length"!==s&&isNaN(s)&&(t[s]!==(o=i[s])||r&&r[s])&&-1===s.indexOf("Origin")&&("number"==typeof o||"string"==typeof o)&&(l[s]="auto"!==o||"left"!==s&&"top"!==s?""!==o&&"auto"!==o&&"none"!==o||"string"!=typeof t[s]||""===t[s].replace(v,"")?o:0:V(e,s),void 0!==u[s]&&(a=new ht(u,s,u[s],a)));if(n)for(s in n)"className"!==s&&(l[s]=n[s]);return{difs:l,firstMPT:a}},J={width:["Left","Right"],height:["Top","Bottom"]},K=["marginLeft","marginRight","marginTop","marginBottom"],et=function(e,t,i){var n=parseFloat("width"===t?e.offsetWidth:e.offsetHeight),r=J[t],o=r.length;for(i=i||Q(e,null);--o>-1;)n-=parseFloat(U(e,"padding"+r[o],i,!0))||0,n-=parseFloat(U(e,"border"+r[o]+"Width",i,!0))||0;return n},tt=function(e,t){(null==e||""===e||"auto"===e||"auto auto"===e)&&(e="0 0");var i=e.split(" "),n=-1!==e.indexOf("left")?"0%":-1!==e.indexOf("right")?"100%":i[0],r=-1!==e.indexOf("top")?"0%":-1!==e.indexOf("bottom")?"100%":i[1];return null==r?r="0":"center"===r&&(r="50%"),("center"===n||isNaN(parseFloat(n))&&-1===(n+"").indexOf("="))&&(n="50%"),t&&(t.oxp=-1!==n.indexOf("%"),t.oyp=-1!==r.indexOf("%"),t.oxr="="===n.charAt(1),t.oyr="="===r.charAt(1),t.ox=parseFloat(n.replace(v,"")),t.oy=parseFloat(r.replace(v,""))),n+" "+r+(i.length>2?" "+i[2]:"")},it=function(e,t){return"string"==typeof e&&"="===e.charAt(1)?parseInt(e.charAt(0)+"1",10)*parseFloat(e.substr(2)):parseFloat(e)-parseFloat(t)},nt=function(e,t){return null==e?t:"string"==typeof e&&"="===e.charAt(1)?parseInt(e.charAt(0)+"1",10)*parseFloat(e.substr(2))+t:parseFloat(e)},rt=function(e,t,i,n){var r,o,s,a,l=1e-6;return null==e?a=t:"number"==typeof e?a=e:(r=360,o=e.split("_"),s=Number(o[0].replace(v,""))*(-1===e.indexOf("rad")?1:N)-("="===e.charAt(1)?0:t),o.length&&(n&&(n[i]=t+s),-1!==e.indexOf("short")&&(s%=r,s!==s%(r/2)&&(s=0>s?s+r:s-r)),-1!==e.indexOf("_cw")&&0>s?s=(s+9999999999*r)%r-(0|s/r)*r:-1!==e.indexOf("ccw")&&s>0&&(s=(s-9999999999*r)%r-(0|s/r)*r)),a=t+s),l>a&&a>-l&&(a=0),a},ot={aqua:[0,255,255],lime:[0,255,0],silver:[192,192,192],black:[0,0,0],maroon:[128,0,0],teal:[0,128,128],blue:[0,0,255],navy:[0,0,128],white:[255,255,255],fuchsia:[255,0,255],olive:[128,128,0],yellow:[255,255,0],orange:[255,165,0],gray:[128,128,128],purple:[128,0,128],green:[0,128,0],red:[255,0,0],pink:[255,192,203],cyan:[0,255,255],transparent:[255,255,255,0]},st=function(e,t,i){return e=0>e?e+1:e>1?e-1:e,0|255*(1>6*e?t+6*(i-t)*e:.5>e?i:2>3*e?t+6*(i-t)*(2/3-e):t)+.5},at=s.parseColor=function(e){var t,i,n,r,o,s;return e&&""!==e?"number"==typeof e?[e>>16,255&e>>8,255&e]:(","===e.charAt(e.length-1)&&(e=e.substr(0,e.length-1)),ot[e]?ot[e]:"#"===e.charAt(0)?(4===e.length&&(t=e.charAt(1),i=e.charAt(2),n=e.charAt(3),e="#"+t+t+i+i+n+n),e=parseInt(e.substr(1),16),[e>>16,255&e>>8,255&e]):"hsl"===e.substr(0,3)?(e=e.match(g),r=Number(e[0])%360/360,o=Number(e[1])/100,s=Number(e[2])/100,i=.5>=s?s*(o+1):s+o-s*o,t=2*s-i,e.length>3&&(e[3]=Number(e[3])),e[0]=st(r+1/3,t,i),e[1]=st(r,t,i),e[2]=st(r-1/3,t,i),e):(e=e.match(g)||ot.transparent,e[0]=Number(e[0]),e[1]=Number(e[1]),e[2]=Number(e[2]),e.length>3&&(e[3]=Number(e[3])),e)):ot.black},lt="(?:\\b(?:(?:rgb|rgba|hsl|hsla)\\(.+?\\))|\\B#.+?\\b";for(l in ot)lt+="|"+l+"\\b";lt=RegExp(lt+")","gi");var ut=function(e,t,i,n){if(null==e)return function(e){return e};var r,o=t?(e.match(lt)||[""])[0]:"",s=e.split(o).join("").match(_)||[],a=e.substr(0,e.indexOf(s[0])),l=")"===e.charAt(e.length-1)?")":"",u=-1!==e.indexOf(" ")?" ":",",c=s.length,h=c>0?s[0].replace(g,""):"";return c?r=t?function(e){var t,d,f,p;if("number"==typeof e)e+=h;else if(n&&M.test(e)){for(p=e.replace(M,"|").split("|"),f=0;p.length>f;f++)p[f]=r(p[f]);return p.join(",")}if(t=(e.match(lt)||[o])[0],d=e.split(t).join("").match(_)||[],f=d.length,c>f--)for(;c>++f;)d[f]=i?d[0|(f-1)/2]:s[f];return a+d.join(u)+u+t+l+(-1!==e.indexOf("inset")?" inset":"")}:function(e){var t,o,d;if("number"==typeof e)e+=h;else if(n&&M.test(e)){for(o=e.replace(M,"|").split("|"),d=0;o.length>d;d++)o[d]=r(o[d]);return o.join(",")}if(t=e.match(_)||[],d=t.length,c>d--)for(;c>++d;)t[d]=i?t[0|(d-1)/2]:s[d];return a+t.join(u)+l}:function(e){return e}},ct=function(e){return e=e.split(","),function(t,i,n,r,o,s,a){var l,u=(i+"").split(" ");for(a={},l=0;4>l;l++)a[e[l]]=u[l]=u[l]||u[(l-1)/2>>0];return r.parse(t,a,o,s)}},ht=(I._setPluginRatio=function(e){this.plugin.setRatio(e);for(var t,i,n,r,o=this.data,s=o.proxy,a=o.firstMPT,l=1e-6;a;)t=s[a.v],a.r?t=Math.round(t):l>t&&t>-l&&(t=0),a.t[a.p]=t,a=a._next;if(o.autoRotate&&(o.autoRotate.rotation=s.rotation),1===e)for(a=o.firstMPT;a;){if(i=a.t,i.type){if(1===i.type){for(r=i.xs0+i.s+i.xs1,n=1;i.l>n;n++)r+=i["xn"+n]+i["xs"+(n+1)];i.e=r}}else i.e=i.s+i.xs0;a=a._next}},function(e,t,i,n,r){this.t=e,this.p=t,this.v=i,this.r=r,n&&(n._prev=this,this._next=n)}),dt=(I._parseToProxy=function(e,t,i,n,r,o){var s,a,l,u,c,h=n,d={},f={},p=i._transform,g=E;for(i._transform=null,E=t,n=c=i.parse(e,t,n,r),E=g,o&&(i._transform=p,h&&(h._prev=null,h._prev&&(h._prev._next=null)));n&&n!==h;){if(1>=n.type&&(a=n.p,f[a]=n.s+n.c,d[a]=n.s,o||(u=new ht(n,"s",a,u,n.r),n.c=0),1===n.type))for(s=n.l;--s>0;)l="xn"+s,a=n.p+"_"+l,f[a]=n.data[l],d[a]=n[l],o||(u=new ht(n,l,a,u,n.rxp[l]));n=n._next}return{proxy:d,end:f,firstMPT:u,pt:c}},I.CSSPropTween=function(e,t,n,r,s,a,l,u,c,h,d){this.t=e,this.p=t,this.s=n,this.c=r,this.n=l||t,e instanceof dt||o.push(this.n),this.r=u,this.type=a||0,c&&(this.pr=c,i=!0),this.b=void 0===h?n:h,this.e=void 0===d?n+r:d,s&&(this._next=s,s._prev=this)}),ft=s.parseComplex=function(e,t,i,n,r,o,s,a,l,c){i=i||o||"",s=new dt(e,t,0,0,s,c?2:1,null,!1,a,i,n),n+="";var h,d,f,p,_,v,y,b,x,w,k,S,C=i.split(", ").join(",").split(" "),P=n.split(", ").join(",").split(" "),A=C.length,O=u!==!1;for((-1!==n.indexOf(",")||-1!==i.indexOf(","))&&(C=C.join(" ").replace(M,", ").split(" "),P=P.join(" ").replace(M,", ").split(" "),A=C.length),A!==P.length&&(C=(o||"").split(" "),A=C.length),s.plugin=l,s.setRatio=c,h=0;A>h;h++)if(p=C[h],_=P[h],b=parseFloat(p),b||0===b)s.appendXtra("",b,it(_,b),_.replace(m,""),O&&-1!==_.indexOf("px"),!0);else if(r&&("#"===p.charAt(0)||ot[p]||T.test(p)))S=","===_.charAt(_.length-1)?"),":")",p=at(p),_=at(_),x=p.length+_.length>6,x&&!X&&0===_[3]?(s["xs"+s.l]+=s.l?" transparent":"transparent",s.e=s.e.split(P[h]).join("transparent")):(X||(x=!1),s.appendXtra(x?"rgba(":"rgb(",p[0],_[0]-p[0],",",!0,!0).appendXtra("",p[1],_[1]-p[1],",",!0).appendXtra("",p[2],_[2]-p[2],x?",":S,!0),x&&(p=4>p.length?1:p[3],s.appendXtra("",p,(4>_.length?1:_[3])-p,S,!1)));else if(v=p.match(g)){if(y=_.match(m),!y||y.length!==v.length)return s;for(f=0,d=0;v.length>d;d++)k=v[d],w=p.indexOf(k,f),s.appendXtra(p.substr(f,w-f),Number(k),it(y[d],k),"",O&&"px"===p.substr(w+k.length,2),0===d),f=w+k.length;s["xs"+s.l]+=p.substr(f)}else s["xs"+s.l]+=s.l?" "+p:p;if(-1!==n.indexOf("=")&&s.data){for(S=s.xs0+s.data.s,h=1;s.l>h;h++)S+=s["xs"+h]+s.data["xn"+h];s.e=S+s["xs"+h]}return s.l||(s.type=-1,s.xs0=s.e),s.xfirst||s},pt=9;for(l=dt.prototype,l.l=l.pr=0;--pt>0;)l["xn"+pt]=0,l["xs"+pt]="";l.xs0="",l._next=l._prev=l.xfirst=l.data=l.plugin=l.setRatio=l.rxp=null,l.appendXtra=function(e,t,i,n,r,o){var s=this,a=s.l;return s["xs"+a]+=o&&a?" "+e:e||"",i||0===a||s.plugin?(s.l++,s.type=s.setRatio?2:1,s["xs"+s.l]=n||"",a>0?(s.data["xn"+a]=t+i,s.rxp["xn"+a]=r,s["xn"+a]=t,s.plugin||(s.xfirst=new dt(s,"xn"+a,t,i,s.xfirst||s,0,s.n,r,s.pr),s.xfirst.xs0=0),s):(s.data={s:t+i},s.rxp={},s.s=t,s.c=i,s.r=r,s)):(s["xs"+a]+=t+(n||""),s)};var gt=function(e,t){t=t||{},this.p=t.prefix?W(e)||e:e,a[e]=a[this.p]=this,this.format=t.formatter||ut(t.defaultValue,t.color,t.collapsible,t.multi),t.parser&&(this.parse=t.parser),this.clrs=t.color,this.multi=t.multi,this.keyword=t.keyword,this.dflt=t.defaultValue,this.pr=t.priority||0
},mt=I._registerComplexSpecialProp=function(e,t,i){"object"!=typeof t&&(t={parser:i});var n,r,o=e.split(","),s=t.defaultValue;for(i=i||[s],n=0;o.length>n;n++)t.prefix=0===n&&t.prefix,t.defaultValue=i[n]||s,r=new gt(o[n],t)},_t=function(e){if(!a[e]){var t=e.charAt(0).toUpperCase()+e.substr(1)+"Plugin";mt(e,{parser:function(e,i,n,r,o,s,l){var u=(_gsScope.GreenSockGlobals||_gsScope).com.greensock.plugins[t];return u?(u._cssRegister(),a[n].parse(e,i,n,r,o,s,l)):(H("Error: "+t+" js file not loaded."),o)}})}};l=gt.prototype,l.parseComplex=function(e,t,i,n,r,o){var s,a,l,u,c,h,d=this.keyword;if(this.multi&&(M.test(i)||M.test(t)?(a=t.replace(M,"|").split("|"),l=i.replace(M,"|").split("|")):d&&(a=[t],l=[i])),l){for(u=l.length>a.length?l.length:a.length,s=0;u>s;s++)t=a[s]=a[s]||this.dflt,i=l[s]=l[s]||this.dflt,d&&(c=t.indexOf(d),h=i.indexOf(d),c!==h&&(i=-1===h?l:a,i[s]+=" "+d));t=a.join(", "),i=l.join(", ")}return ft(e,this.p,t,i,this.clrs,this.dflt,n,this.pr,r,o)},l.parse=function(e,t,i,n,o,s){return this.parseComplex(e.style,this.format(U(e,this.p,r,!1,this.dflt)),this.format(t),o,s)},s.registerSpecialProp=function(e,t,i){mt(e,{parser:function(e,n,r,o,s,a){var l=new dt(e,r,0,0,s,2,r,!1,i);return l.plugin=a,l.setRatio=t(e,n,o._tween,r),l},priority:i})};var vt,yt="scaleX,scaleY,scaleZ,x,y,z,skewX,skewY,rotation,rotationX,rotationY,perspective,xPercent,yPercent".split(","),bt=W("transform"),xt=Y+"transform",wt=W("transformOrigin"),Tt=null!==W("perspective"),kt=I.Transform=function(){this.skewY=0},St=window.SVGElement,Ct=function(e,t,i){var n,r=L.createElementNS("http://www.w3.org/2000/svg",e),o=/([a-z])([A-Z])/g;for(n in i)r.setAttributeNS(null,n.replace(o,"$1-$2").toLowerCase(),i[n]);return t.appendChild(r),r},Pt=document.documentElement,At=function(){var e,t,i,n=p||/Android/i.test(z)&&!window.chrome;return L.createElementNS&&!n&&(e=Ct("svg",Pt),t=Ct("rect",e,{width:100,height:50,x:100}),i=t.getBoundingClientRect().left,t.style[wt]="50% 50%",t.style[bt]="scale(0.5,0.5)",n=i===t.getBoundingClientRect().left,Pt.removeChild(e)),n}(),Ot=function(e,t,i){var n=e.getBBox();t=tt(t).split(" "),i.xOrigin=(-1!==t[0].indexOf("%")?parseFloat(t[0])/100*n.width:parseFloat(t[0]))+n.x,i.yOrigin=(-1!==t[1].indexOf("%")?parseFloat(t[1])/100*n.height:parseFloat(t[1]))+n.y},Dt=I.getTransform=function(e,t,i,n){if(e._gsTransform&&i&&!n)return e._gsTransform;var o,a,l,u,c,h,d,f,p,g,m,_,v,y=i?e._gsTransform||new kt:new kt,b=0>y.scaleX,x=2e-5,w=1e5,T=179.99,k=T*R,S=Tt?parseFloat(U(e,wt,t,!1,"0 0 0").split(" ")[2])||y.zOrigin||0:0,C=parseFloat(s.defaultTransformPerspective)||0;if(bt?o=U(e,xt,t,!0):e.currentStyle&&(o=e.currentStyle.filter.match(O),o=o&&4===o.length?[o[0].substr(4),Number(o[2].substr(4)),Number(o[1].substr(4)),o[3].substr(4),y.x||0,y.y||0].join(","):""),o&&"none"!==o&&"matrix(1, 0, 0, 1, 0, 0)"!==o){for(a=(o||"").match(/(?:\-|\b)[\d\-\.e]+\b/gi)||[],l=a.length;--l>-1;)u=Number(a[l]),a[l]=(c=u-(u|=0))?(0|c*w+(0>c?-.5:.5))/w+u:u;if(16===a.length){var P=a[8],A=a[9],D=a[10],M=a[12],E=a[13],L=a[14];if(y.zOrigin&&(L=-y.zOrigin,M=P*L-a[12],E=A*L-a[13],L=D*L+y.zOrigin-a[14]),!i||n||null==y.rotationX){var j,F,I,z,X,B,H,Y=a[0],q=a[1],W=a[2],Q=a[3],$=a[4],V=a[5],Z=a[6],G=a[7],J=a[11],K=Math.atan2(Z,D),et=-k>K||K>k;y.rotationX=K*N,K&&(z=Math.cos(-K),X=Math.sin(-K),j=$*z+P*X,F=V*z+A*X,I=Z*z+D*X,P=$*-X+P*z,A=V*-X+A*z,D=Z*-X+D*z,J=G*-X+J*z,$=j,V=F,Z=I),K=Math.atan2(P,Y),y.rotationY=K*N,K&&(B=-k>K||K>k,z=Math.cos(-K),X=Math.sin(-K),j=Y*z-P*X,F=q*z-A*X,I=W*z-D*X,A=q*X+A*z,D=W*X+D*z,J=Q*X+J*z,Y=j,q=F,W=I),K=Math.atan2(q,V),y.rotation=K*N,K&&(H=-k>K||K>k,z=Math.cos(-K),X=Math.sin(-K),Y=Y*z+$*X,F=q*z+V*X,V=q*-X+V*z,Z=W*-X+Z*z,q=F),H&&et?y.rotation=y.rotationX=0:H&&B?y.rotation=y.rotationY=0:B&&et&&(y.rotationY=y.rotationX=0),y.scaleX=(0|Math.sqrt(Y*Y+q*q)*w+.5)/w,y.scaleY=(0|Math.sqrt(V*V+A*A)*w+.5)/w,y.scaleZ=(0|Math.sqrt(Z*Z+D*D)*w+.5)/w,y.skewX=0,y.perspective=J?1/(0>J?-J:J):0,y.x=M,y.y=E,y.z=L}}else if(!(Tt&&!n&&a.length&&y.x===a[4]&&y.y===a[5]&&(y.rotationX||y.rotationY)||void 0!==y.x&&"none"===U(e,"display",t))){var tt=a.length>=6,it=tt?a[0]:1,nt=a[1]||0,rt=a[2]||0,ot=tt?a[3]:1;y.x=a[4]||0,y.y=a[5]||0,h=Math.sqrt(it*it+nt*nt),d=Math.sqrt(ot*ot+rt*rt),f=it||nt?Math.atan2(nt,it)*N:y.rotation||0,p=rt||ot?Math.atan2(rt,ot)*N+f:y.skewX||0,g=h-Math.abs(y.scaleX||0),m=d-Math.abs(y.scaleY||0),Math.abs(p)>90&&270>Math.abs(p)&&(b?(h*=-1,p+=0>=f?180:-180,f+=0>=f?180:-180):(d*=-1,p+=0>=p?180:-180)),_=(f-y.rotation)%180,v=(p-y.skewX)%180,(void 0===y.skewX||g>x||-x>g||m>x||-x>m||_>-T&&T>_&&!1|_*w||v>-T&&T>v&&!1|v*w)&&(y.scaleX=h,y.scaleY=d,y.rotation=f,y.skewX=p),Tt&&(y.rotationX=y.rotationY=y.z=0,y.perspective=C,y.scaleZ=1)}y.zOrigin=S;for(l in y)x>y[l]&&y[l]>-x&&(y[l]=0)}else y={x:0,y:0,z:0,scaleX:1,scaleY:1,scaleZ:1,skewX:0,skewY:0,perspective:C,rotation:0,rotationX:0,rotationY:0,zOrigin:0};return i&&(e._gsTransform=y),y.svg=St&&e instanceof St&&e.parentNode instanceof St,y.svg&&(Ot(e,U(e,wt,r,!1,"50% 50%")+"",y),vt=s.useSVGTransformAttr||At),y.xPercent=y.yPercent=0,y},Mt=function(e){var t,i,n=this.data,r=-n.rotation*R,o=r+n.skewX*R,s=1e5,a=(0|Math.cos(r)*n.scaleX*s)/s,l=(0|Math.sin(r)*n.scaleX*s)/s,u=(0|Math.sin(o)*-n.scaleY*s)/s,c=(0|Math.cos(o)*n.scaleY*s)/s,h=this.t.style,d=this.t.currentStyle;if(d){i=l,l=-u,u=-i,t=d.filter,h.filter="";var f,g,m=this.t.offsetWidth,_=this.t.offsetHeight,v="absolute"!==d.position,x="progid:DXImageTransform.Microsoft.Matrix(M11="+a+", M12="+l+", M21="+u+", M22="+c,w=n.x+m*n.xPercent/100,T=n.y+_*n.yPercent/100;if(null!=n.ox&&(f=(n.oxp?.01*m*n.ox:n.ox)-m/2,g=(n.oyp?.01*_*n.oy:n.oy)-_/2,w+=f-(f*a+g*l),T+=g-(f*u+g*c)),v?(f=m/2,g=_/2,x+=", Dx="+(f-(f*a+g*l)+w)+", Dy="+(g-(f*u+g*c)+T)+")"):x+=", sizingMethod='auto expand')",h.filter=-1!==t.indexOf("DXImageTransform.Microsoft.Matrix(")?t.replace(D,x):x+" "+t,(0===e||1===e)&&1===a&&0===l&&0===u&&1===c&&(v&&-1===x.indexOf("Dx=0, Dy=0")||b.test(t)&&100!==parseFloat(RegExp.$1)||-1===t.indexOf("gradient("&&t.indexOf("Alpha"))&&h.removeAttribute("filter")),!v){var k,S,C,P=8>p?1:-1;for(f=n.ieOffsetX||0,g=n.ieOffsetY||0,n.ieOffsetX=Math.round((m-((0>a?-a:a)*m+(0>l?-l:l)*_))/2+w),n.ieOffsetY=Math.round((_-((0>c?-c:c)*_+(0>u?-u:u)*m))/2+T),pt=0;4>pt;pt++)S=K[pt],k=d[S],i=-1!==k.indexOf("px")?parseFloat(k):$(this.t,S,parseFloat(k),k.replace(y,""))||0,C=i!==n[S]?2>pt?-n.ieOffsetX:-n.ieOffsetY:2>pt?f-n.ieOffsetX:g-n.ieOffsetY,h[S]=(n[S]=Math.round(i-C*(0===pt||2===pt?1:P)))+"px"}}},Rt=I.set3DTransformRatio=function(e){var t,i,n,r,o,s,a,l,u,c,h,f,p,g,m,_,v,y,b,x,w,T,k,S=this.data,C=this.t.style,P=S.rotation*R,A=S.scaleX,O=S.scaleY,D=S.scaleZ,M=S.x,N=S.y,E=S.z,L=S.perspective;if(!(1!==e&&0!==e||"auto"!==S.force3D||S.rotationY||S.rotationX||1!==D||L||E))return void Nt.call(this,e);if(d){var j=1e-4;j>A&&A>-j&&(A=D=2e-5),j>O&&O>-j&&(O=D=2e-5),!L||S.z||S.rotationX||S.rotationY||(L=0)}if(P||S.skewX)y=Math.cos(P),b=Math.sin(P),t=y,o=b,S.skewX&&(P-=S.skewX*R,y=Math.cos(P),b=Math.sin(P),"simple"===S.skewType&&(x=Math.tan(S.skewX*R),x=Math.sqrt(1+x*x),y*=x,b*=x)),i=-b,s=y;else{if(!(S.rotationY||S.rotationX||1!==D||L||S.svg))return void(C[bt]=(S.xPercent||S.yPercent?"translate("+S.xPercent+"%,"+S.yPercent+"%) translate3d(":"translate3d(")+M+"px,"+N+"px,"+E+"px)"+(1!==A||1!==O?" scale("+A+","+O+")":""));t=s=1,i=o=0}h=1,n=r=a=l=u=c=f=p=g=0,m=L?-1/L:0,_=S.zOrigin,v=1e5,P=S.rotationY*R,P&&(y=Math.cos(P),b=Math.sin(P),u=h*-b,p=m*-b,n=t*b,a=o*b,h*=y,m*=y,t*=y,o*=y),P=S.rotationX*R,P&&(y=Math.cos(P),b=Math.sin(P),x=i*y+n*b,w=s*y+a*b,T=c*y+h*b,k=g*y+m*b,n=i*-b+n*y,a=s*-b+a*y,h=c*-b+h*y,m=g*-b+m*y,i=x,s=w,c=T,g=k),1!==D&&(n*=D,a*=D,h*=D,m*=D),1!==O&&(i*=O,s*=O,c*=O,g*=O),1!==A&&(t*=A,o*=A,u*=A,p*=A),_&&(f-=_,r=n*f,l=a*f,f=h*f+_),S.svg&&(r+=S.xOrigin-(S.xOrigin*t+S.yOrigin*i),l+=S.yOrigin-(S.xOrigin*o+S.yOrigin*s)),r=(x=(r+=M)-(r|=0))?(0|x*v+(0>x?-.5:.5))/v+r:r,l=(x=(l+=N)-(l|=0))?(0|x*v+(0>x?-.5:.5))/v+l:l,f=(x=(f+=E)-(f|=0))?(0|x*v+(0>x?-.5:.5))/v+f:f,C[bt]=(S.xPercent||S.yPercent?"translate("+S.xPercent+"%,"+S.yPercent+"%) matrix3d(":"matrix3d(")+[(0|t*v)/v,(0|o*v)/v,(0|u*v)/v,(0|p*v)/v,(0|i*v)/v,(0|s*v)/v,(0|c*v)/v,(0|g*v)/v,(0|n*v)/v,(0|a*v)/v,(0|h*v)/v,(0|m*v)/v,r,l,f,L?1+-f/L:1].join(",")+")"},Nt=I.set2DTransformRatio=function(e){var t,i,n,r,o,s,a,l,u,c,h,d=this.data,f=this.t,p=f.style,g=d.x,m=d.y;return!(d.rotationX||d.rotationY||d.z||d.force3D===!0||"auto"===d.force3D&&1!==e&&0!==e)||d.svg&&vt||!Tt?(r=d.scaleX,o=d.scaleY,void(d.rotation||d.skewX||d.svg?(t=d.rotation*R,i=t-d.skewX*R,n=1e5,s=Math.cos(t)*r,a=Math.sin(t)*r,l=Math.sin(i)*-o,u=Math.cos(i)*o,d.svg&&(g+=d.xOrigin-(d.xOrigin*s+d.yOrigin*l),m+=d.yOrigin-(d.xOrigin*a+d.yOrigin*u),h=1e-6,h>g&&g>-h&&(g=0),h>m&&m>-h&&(m=0)),c=(0|s*n)/n+","+(0|a*n)/n+","+(0|l*n)/n+","+(0|u*n)/n+","+g+","+m+")",d.svg&&vt?f.setAttribute("transform","matrix("+c):p[bt]=(d.xPercent||d.yPercent?"translate("+d.xPercent+"%,"+d.yPercent+"%) matrix(":"matrix(")+c):p[bt]=(d.xPercent||d.yPercent?"translate("+d.xPercent+"%,"+d.yPercent+"%) matrix(":"matrix(")+r+",0,0,"+o+","+g+","+m+")")):(this.setRatio=Rt,void Rt.call(this,e))};mt("transform,scale,scaleX,scaleY,scaleZ,x,y,z,rotation,rotationX,rotationY,rotationZ,skewX,skewY,shortRotation,shortRotationX,shortRotationY,shortRotationZ,transformOrigin,transformPerspective,directionalRotation,parseTransform,force3D,skewType,xPercent,yPercent",{parser:function(e,t,i,n,o,a,l){if(n._transform)return o;var u,c,h,d,f,p,g,m=n._transform=Dt(e,r,!0,l.parseTransform),_=e.style,v=1e-6,y=yt.length,b=l,x={};if("string"==typeof b.transform&&bt)h=j.style,h[bt]=b.transform,h.display="block",h.position="absolute",L.body.appendChild(j),u=Dt(j,null,!1),L.body.removeChild(j);else if("object"==typeof b){if(u={scaleX:nt(null!=b.scaleX?b.scaleX:b.scale,m.scaleX),scaleY:nt(null!=b.scaleY?b.scaleY:b.scale,m.scaleY),scaleZ:nt(b.scaleZ,m.scaleZ),x:nt(b.x,m.x),y:nt(b.y,m.y),z:nt(b.z,m.z),xPercent:nt(b.xPercent,m.xPercent),yPercent:nt(b.yPercent,m.yPercent),perspective:nt(b.transformPerspective,m.perspective)},g=b.directionalRotation,null!=g)if("object"==typeof g)for(h in g)b[h]=g[h];else b.rotation=g;"string"==typeof b.x&&-1!==b.x.indexOf("%")&&(u.x=0,u.xPercent=nt(b.x,m.xPercent)),"string"==typeof b.y&&-1!==b.y.indexOf("%")&&(u.y=0,u.yPercent=nt(b.y,m.yPercent)),u.rotation=rt("rotation"in b?b.rotation:"shortRotation"in b?b.shortRotation+"_short":"rotationZ"in b?b.rotationZ:m.rotation,m.rotation,"rotation",x),Tt&&(u.rotationX=rt("rotationX"in b?b.rotationX:"shortRotationX"in b?b.shortRotationX+"_short":m.rotationX||0,m.rotationX,"rotationX",x),u.rotationY=rt("rotationY"in b?b.rotationY:"shortRotationY"in b?b.shortRotationY+"_short":m.rotationY||0,m.rotationY,"rotationY",x)),u.skewX=null==b.skewX?m.skewX:rt(b.skewX,m.skewX),u.skewY=null==b.skewY?m.skewY:rt(b.skewY,m.skewY),(c=u.skewY-m.skewY)&&(u.skewX+=c,u.rotation+=c)}for(Tt&&null!=b.force3D&&(m.force3D=b.force3D,p=!0),m.skewType=b.skewType||m.skewType||s.defaultSkewType,f=m.force3D||m.z||m.rotationX||m.rotationY||u.z||u.rotationX||u.rotationY||u.perspective,f||null==b.scale||(u.scaleZ=1);--y>-1;)i=yt[y],d=u[i]-m[i],(d>v||-v>d||null!=b[i]||null!=E[i])&&(p=!0,o=new dt(m,i,m[i],d,o),i in x&&(o.e=x[i]),o.xs0=0,o.plugin=a,n._overwriteProps.push(o.n));return d=b.transformOrigin,d&&m.svg&&(Ot(e,d,u),o=new dt(m,"xOrigin",m.xOrigin,u.xOrigin-m.xOrigin,o,-1,"transformOrigin"),o.b=m.xOrigin,o.e=o.xs0=u.xOrigin,o=new dt(m,"yOrigin",m.yOrigin,u.yOrigin-m.yOrigin,o,-1,"transformOrigin"),o.b=m.yOrigin,o.e=o.xs0=u.yOrigin,d="0px 0px"),(d||Tt&&f&&m.zOrigin)&&(bt?(p=!0,i=wt,d=(d||U(e,i,r,!1,"50% 50%"))+"",o=new dt(_,i,0,0,o,-1,"transformOrigin"),o.b=_[i],o.plugin=a,Tt?(h=m.zOrigin,d=d.split(" "),m.zOrigin=(d.length>2&&(0===h||"0px"!==d[2])?parseFloat(d[2]):h)||0,o.xs0=o.e=d[0]+" "+(d[1]||"50%")+" 0px",o=new dt(m,"zOrigin",0,0,o,-1,o.n),o.b=h,o.xs0=o.e=m.zOrigin):o.xs0=o.e=d):tt(d+"",m)),p&&(n._transformType=m.svg&&vt||!f&&3!==this._transformType?2:3),o},prefix:!0}),mt("boxShadow",{defaultValue:"0px 0px 0px 0px #999",prefix:!0,color:!0,multi:!0,keyword:"inset"}),mt("borderRadius",{defaultValue:"0px",parser:function(e,t,i,o,s){t=this.format(t);var a,l,u,c,h,d,f,p,g,m,_,v,y,b,x,w,T=["borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius"],k=e.style;for(g=parseFloat(e.offsetWidth),m=parseFloat(e.offsetHeight),a=t.split(" "),l=0;T.length>l;l++)this.p.indexOf("border")&&(T[l]=W(T[l])),h=c=U(e,T[l],r,!1,"0px"),-1!==h.indexOf(" ")&&(c=h.split(" "),h=c[0],c=c[1]),d=u=a[l],f=parseFloat(h),v=h.substr((f+"").length),y="="===d.charAt(1),y?(p=parseInt(d.charAt(0)+"1",10),d=d.substr(2),p*=parseFloat(d),_=d.substr((p+"").length-(0>p?1:0))||""):(p=parseFloat(d),_=d.substr((p+"").length)),""===_&&(_=n[i]||v),_!==v&&(b=$(e,"borderLeft",f,v),x=$(e,"borderTop",f,v),"%"===_?(h=100*(b/g)+"%",c=100*(x/m)+"%"):"em"===_?(w=$(e,"borderLeft",1,"em"),h=b/w+"em",c=x/w+"em"):(h=b+"px",c=x+"px"),y&&(d=parseFloat(h)+p+_,u=parseFloat(c)+p+_)),s=ft(k,T[l],h+" "+c,d+" "+u,!1,"0px",s);return s},prefix:!0,formatter:ut("0px 0px 0px 0px",!1,!0)}),mt("backgroundPosition",{defaultValue:"0 0",parser:function(e,t,i,n,o,s){var a,l,u,c,h,d,f="background-position",g=r||Q(e,null),m=this.format((g?p?g.getPropertyValue(f+"-x")+" "+g.getPropertyValue(f+"-y"):g.getPropertyValue(f):e.currentStyle.backgroundPositionX+" "+e.currentStyle.backgroundPositionY)||"0 0"),_=this.format(t);if(-1!==m.indexOf("%")!=(-1!==_.indexOf("%"))&&(d=U(e,"backgroundImage").replace(C,""),d&&"none"!==d)){for(a=m.split(" "),l=_.split(" "),F.setAttribute("src",d),u=2;--u>-1;)m=a[u],c=-1!==m.indexOf("%"),c!==(-1!==l[u].indexOf("%"))&&(h=0===u?e.offsetWidth-F.width:e.offsetHeight-F.height,a[u]=c?parseFloat(m)/100*h+"px":100*(parseFloat(m)/h)+"%");m=a.join(" ")}return this.parseComplex(e.style,m,_,o,s)},formatter:tt}),mt("backgroundSize",{defaultValue:"0 0",formatter:tt}),mt("perspective",{defaultValue:"0px",prefix:!0}),mt("perspectiveOrigin",{defaultValue:"50% 50%",prefix:!0}),mt("transformStyle",{prefix:!0}),mt("backfaceVisibility",{prefix:!0}),mt("userSelect",{prefix:!0}),mt("margin",{parser:ct("marginTop,marginRight,marginBottom,marginLeft")}),mt("padding",{parser:ct("paddingTop,paddingRight,paddingBottom,paddingLeft")}),mt("clip",{defaultValue:"rect(0px,0px,0px,0px)",parser:function(e,t,i,n,o,s){var a,l,u;return 9>p?(l=e.currentStyle,u=8>p?" ":",",a="rect("+l.clipTop+u+l.clipRight+u+l.clipBottom+u+l.clipLeft+")",t=this.format(t).split(",").join(u)):(a=this.format(U(e,this.p,r,!1,this.dflt)),t=this.format(t)),this.parseComplex(e.style,a,t,o,s)}}),mt("textShadow",{defaultValue:"0px 0px 0px #999",color:!0,multi:!0}),mt("autoRound,strictUnits",{parser:function(e,t,i,n,r){return r}}),mt("border",{defaultValue:"0px solid #000",parser:function(e,t,i,n,o,s){return this.parseComplex(e.style,this.format(U(e,"borderTopWidth",r,!1,"0px")+" "+U(e,"borderTopStyle",r,!1,"solid")+" "+U(e,"borderTopColor",r,!1,"#000")),this.format(t),o,s)},color:!0,formatter:function(e){var t=e.split(" ");return t[0]+" "+(t[1]||"solid")+" "+(e.match(lt)||["#000"])[0]}}),mt("borderWidth",{parser:ct("borderTopWidth,borderRightWidth,borderBottomWidth,borderLeftWidth")}),mt("float,cssFloat,styleFloat",{parser:function(e,t,i,n,r){var o=e.style,s="cssFloat"in o?"cssFloat":"styleFloat";return new dt(o,s,0,0,r,-1,i,!1,0,o[s],t)}});var Et=function(e){var t,i=this.t,n=i.filter||U(this.data,"filter")||"",r=0|this.s+this.c*e;100===r&&(-1===n.indexOf("atrix(")&&-1===n.indexOf("radient(")&&-1===n.indexOf("oader(")?(i.removeAttribute("filter"),t=!U(this.data,"filter")):(i.filter=n.replace(w,""),t=!0)),t||(this.xn1&&(i.filter=n=n||"alpha(opacity="+r+")"),-1===n.indexOf("pacity")?0===r&&this.xn1||(i.filter=n+" alpha(opacity="+r+")"):i.filter=n.replace(b,"opacity="+r))};mt("opacity,alpha,autoAlpha",{defaultValue:"1",parser:function(e,t,i,n,o,s){var a=parseFloat(U(e,"opacity",r,!1,"1")),l=e.style,u="autoAlpha"===i;return"string"==typeof t&&"="===t.charAt(1)&&(t=("-"===t.charAt(0)?-1:1)*parseFloat(t.substr(2))+a),u&&1===a&&"hidden"===U(e,"visibility",r)&&0!==t&&(a=0),X?o=new dt(l,"opacity",a,t-a,o):(o=new dt(l,"opacity",100*a,100*(t-a),o),o.xn1=u?1:0,l.zoom=1,o.type=2,o.b="alpha(opacity="+o.s+")",o.e="alpha(opacity="+(o.s+o.c)+")",o.data=e,o.plugin=s,o.setRatio=Et),u&&(o=new dt(l,"visibility",0,0,o,-1,null,!1,0,0!==a?"inherit":"hidden",0===t?"hidden":"inherit"),o.xs0="inherit",n._overwriteProps.push(o.n),n._overwriteProps.push(i)),o}});var Lt=function(e,t){t&&(e.removeProperty?("ms"===t.substr(0,2)&&(t="M"+t.substr(1)),e.removeProperty(t.replace(k,"-$1").toLowerCase())):e.removeAttribute(t))},jt=function(e){if(this.t._gsClassPT=this,1===e||0===e){this.t.setAttribute("class",0===e?this.b:this.e);for(var t=this.data,i=this.t.style;t;)t.v?i[t.p]=t.v:Lt(i,t.p),t=t._next;1===e&&this.t._gsClassPT===this&&(this.t._gsClassPT=null)}else this.t.getAttribute("class")!==this.e&&this.t.setAttribute("class",this.e)};mt("className",{parser:function(e,t,n,o,s,a,l){var u,c,h,d,f,p=e.getAttribute("class")||"",g=e.style.cssText;if(s=o._classNamePT=new dt(e,n,0,0,s,2),s.setRatio=jt,s.pr=-11,i=!0,s.b=p,c=Z(e,r),h=e._gsClassPT){for(d={},f=h.data;f;)d[f.p]=1,f=f._next;h.setRatio(1)}return e._gsClassPT=s,s.e="="!==t.charAt(1)?t:p.replace(RegExp("\\s*\\b"+t.substr(2)+"\\b"),"")+("+"===t.charAt(0)?" "+t.substr(2):""),o._tween._duration&&(e.setAttribute("class",s.e),u=G(e,c,Z(e),l,d),e.setAttribute("class",p),s.data=u.firstMPT,e.style.cssText=g,s=s.xfirst=o.parse(e,u.difs,s,a)),s}});var Ft=function(e){if((1===e||0===e)&&this.data._totalTime===this.data._totalDuration&&"isFromStart"!==this.data.data){var t,i,n,r,o=this.t.style,s=a.transform.parse;if("all"===this.e)o.cssText="",r=!0;else for(t=this.e.split(" ").join("").split(","),n=t.length;--n>-1;)i=t[n],a[i]&&(a[i].parse===s?r=!0:i="transformOrigin"===i?wt:a[i].p),Lt(o,i);r&&(Lt(o,bt),this.t._gsTransform&&delete this.t._gsTransform)}};for(mt("clearProps",{parser:function(e,t,n,r,o){return o=new dt(e,n,0,0,o,2),o.setRatio=Ft,o.e=t,o.pr=-10,o.data=r._tween,i=!0,o}}),l="bezier,throwProps,physicsProps,physics2D".split(","),pt=l.length;pt--;)_t(l[pt]);l=s.prototype,l._firstPT=null,l._onInitTween=function(e,t,a){if(!e.nodeType)return!1;this._target=e,this._tween=a,this._vars=t,u=t.autoRound,i=!1,n=t.suffixMap||s.suffixMap,r=Q(e,""),o=this._overwriteProps;var l,d,p,g,m,_,v,y,b,w=e.style;if(c&&""===w.zIndex&&(l=U(e,"zIndex",r),("auto"===l||""===l)&&this._addLazySet(w,"zIndex",0)),"string"==typeof t&&(g=w.cssText,l=Z(e,r),w.cssText=g+";"+t,l=G(e,l,Z(e)).difs,!X&&x.test(t)&&(l.opacity=parseFloat(RegExp.$1)),t=l,w.cssText=g),this._firstPT=d=this.parse(e,t,null),this._transformType){for(b=3===this._transformType,bt?h&&(c=!0,""===w.zIndex&&(v=U(e,"zIndex",r),("auto"===v||""===v)&&this._addLazySet(w,"zIndex",0)),f&&this._addLazySet(w,"WebkitBackfaceVisibility",this._vars.WebkitBackfaceVisibility||(b?"visible":"hidden"))):w.zoom=1,p=d;p&&p._next;)p=p._next;y=new dt(e,"transform",0,0,null,2),this._linkCSSP(y,null,p),y.setRatio=b&&Tt?Rt:bt?Nt:Mt,y.data=this._transform||Dt(e,r,!0),o.pop()}if(i){for(;d;){for(_=d._next,p=g;p&&p.pr>d.pr;)p=p._next;(d._prev=p?p._prev:m)?d._prev._next=d:g=d,(d._next=p)?p._prev=d:m=d,d=_}this._firstPT=g}return!0},l.parse=function(e,t,i,o){var s,l,c,h,d,f,p,g,m,_,v=e.style;for(s in t)f=t[s],l=a[s],l?i=l.parse(e,f,s,this,i,o,t):(d=U(e,s,r)+"",m="string"==typeof f,"color"===s||"fill"===s||"stroke"===s||-1!==s.indexOf("Color")||m&&T.test(f)?(m||(f=at(f),f=(f.length>3?"rgba(":"rgb(")+f.join(",")+")"),i=ft(v,s,d,f,!0,"transparent",i,0,o)):!m||-1===f.indexOf(" ")&&-1===f.indexOf(",")?(c=parseFloat(d),p=c||0===c?d.substr((c+"").length):"",(""===d||"auto"===d)&&("width"===s||"height"===s?(c=et(e,s,r),p="px"):"left"===s||"top"===s?(c=V(e,s,r),p="px"):(c="opacity"!==s?0:1,p="")),_=m&&"="===f.charAt(1),_?(h=parseInt(f.charAt(0)+"1",10),f=f.substr(2),h*=parseFloat(f),g=f.replace(y,"")):(h=parseFloat(f),g=m?f.substr((h+"").length)||"":""),""===g&&(g=s in n?n[s]:p),f=h||0===h?(_?h+c:h)+g:t[s],p!==g&&""!==g&&(h||0===h)&&c&&(c=$(e,s,c,p),"%"===g?(c/=$(e,s,100,"%")/100,t.strictUnits!==!0&&(d=c+"%")):"em"===g?c/=$(e,s,1,"em"):"px"!==g&&(h=$(e,s,h,g),g="px"),_&&(h||0===h)&&(f=h+c+g)),_&&(h+=c),!c&&0!==c||!h&&0!==h?void 0!==v[s]&&(f||"NaN"!=f+""&&null!=f)?(i=new dt(v,s,h||c||0,0,i,-1,s,!1,0,d,f),i.xs0="none"!==f||"display"!==s&&-1===s.indexOf("Style")?f:d):H("invalid "+s+" tween value: "+t[s]):(i=new dt(v,s,c,h-c,i,0,s,u!==!1&&("px"===g||"zIndex"===s),0,d,f),i.xs0=g)):i=ft(v,s,d,f,!0,null,i,0,o)),o&&i&&!i.plugin&&(i.plugin=o);return i},l.setRatio=function(e){var t,i,n,r=this._firstPT,o=1e-6;if(1!==e||this._tween._time!==this._tween._duration&&0!==this._tween._time)if(e||this._tween._time!==this._tween._duration&&0!==this._tween._time||this._tween._rawPrevTime===-1e-6)for(;r;){if(t=r.c*e+r.s,r.r?t=Math.round(t):o>t&&t>-o&&(t=0),r.type)if(1===r.type)if(n=r.l,2===n)r.t[r.p]=r.xs0+t+r.xs1+r.xn1+r.xs2;else if(3===n)r.t[r.p]=r.xs0+t+r.xs1+r.xn1+r.xs2+r.xn2+r.xs3;else if(4===n)r.t[r.p]=r.xs0+t+r.xs1+r.xn1+r.xs2+r.xn2+r.xs3+r.xn3+r.xs4;else if(5===n)r.t[r.p]=r.xs0+t+r.xs1+r.xn1+r.xs2+r.xn2+r.xs3+r.xn3+r.xs4+r.xn4+r.xs5;else{for(i=r.xs0+t+r.xs1,n=1;r.l>n;n++)i+=r["xn"+n]+r["xs"+(n+1)];r.t[r.p]=i}else-1===r.type?r.t[r.p]=r.xs0:r.setRatio&&r.setRatio(e);else r.t[r.p]=t+r.xs0;r=r._next}else for(;r;)2!==r.type?r.t[r.p]=r.b:r.setRatio(e),r=r._next;else for(;r;)2!==r.type?r.t[r.p]=r.e:r.setRatio(e),r=r._next},l._enableTransforms=function(e){this._transform=this._transform||Dt(this._target,r,!0),this._transformType=this._transform.svg&&vt||!e&&3!==this._transformType?2:3};var It=function(){this.t[this.p]=this.e,this.data._linkCSSP(this,this._next,null,!0)};l._addLazySet=function(e,t,i){var n=this._firstPT=new dt(e,t,0,0,this._firstPT,2);n.e=i,n.setRatio=It,n.data=this},l._linkCSSP=function(e,t,i,n){return e&&(t&&(t._prev=e),e._next&&(e._next._prev=e._prev),e._prev?e._prev._next=e._next:this._firstPT===e&&(this._firstPT=e._next,n=!0),i?i._next=e:n||null!==this._firstPT||(this._firstPT=e),e._next=t,e._prev=i),e},l._kill=function(t){var i,n,r,o=t;if(t.autoAlpha||t.alpha){o={};for(n in t)o[n]=t[n];o.opacity=1,o.autoAlpha&&(o.visibility=1)}return t.className&&(i=this._classNamePT)&&(r=i.xfirst,r&&r._prev?this._linkCSSP(r._prev,i._next,r._prev._prev):r===this._firstPT&&(this._firstPT=i._next),i._next&&this._linkCSSP(i._next,i._next._next,r._prev),this._classNamePT=null),e.prototype._kill.call(this,o)};var zt=function(e,t,i){var n,r,o,s;if(e.slice)for(r=e.length;--r>-1;)zt(e[r],t,i);else for(n=e.childNodes,r=n.length;--r>-1;)o=n[r],s=o.type,o.style&&(t.push(Z(o)),i&&i.push(o)),1!==s&&9!==s&&11!==s||!o.childNodes.length||zt(o,t,i)};return s.cascadeTo=function(e,i,n){var r,o,s,a=t.to(e,i,n),l=[a],u=[],c=[],h=[],d=t._internals.reservedProps;for(e=a._targets||a.target,zt(e,u,h),a.render(i,!0),zt(e,c),a.render(0,!0),a._enabled(!0),r=h.length;--r>-1;)if(o=G(h[r],u[r],c[r]),o.firstMPT){o=o.difs;for(s in n)d[s]&&(o[s]=n[s]);l.push(t.to(h[r],i,o))}return l},e.activate([s]),s},!0),function(){var e=_gsScope._gsDefine.plugin({propName:"roundProps",priority:-1,API:2,init:function(e,t,i){return this._tween=i,!0}}),t=e.prototype;t._onInitAllProps=function(){for(var e,t,i,n=this._tween,r=n.vars.roundProps instanceof Array?n.vars.roundProps:n.vars.roundProps.split(","),o=r.length,s={},a=n._propLookup.roundProps;--o>-1;)s[r[o]]=1;for(o=r.length;--o>-1;)for(e=r[o],t=n._firstPT;t;)i=t._next,t.pg?t.t._roundProps(s,!0):t.n===e&&(this._add(t.t,e,t.s,t.c),i&&(i._prev=t._prev),t._prev?t._prev._next=i:n._firstPT===t&&(n._firstPT=i),t._next=t._prev=null,n._propLookup[e]=a),t=i;return!1},t._add=function(e,t,i,n){this._addTween(e,t,i,i+n,t,!0),this._overwriteProps.push(t)}}(),_gsScope._gsDefine.plugin({propName:"attr",API:2,version:"0.3.3",init:function(e,t){var i,n,r;if("function"!=typeof e.setAttribute)return!1;this._target=e,this._proxy={},this._start={},this._end={};for(i in t)this._start[i]=this._proxy[i]=n=e.getAttribute(i),r=this._addTween(this._proxy,i,parseFloat(n),t[i],i),this._end[i]=r?r.s+r.c:t[i],this._overwriteProps.push(i);return!0},set:function(e){this._super.setRatio.call(this,e);for(var t,i=this._overwriteProps,n=i.length,r=1===e?this._end:e?this._proxy:this._start;--n>-1;)t=i[n],this._target.setAttribute(t,r[t]+"")}}),_gsScope._gsDefine.plugin({propName:"directionalRotation",version:"0.2.1",API:2,init:function(e,t){"object"!=typeof t&&(t={rotation:t}),this.finals={};var i,n,r,o,s,a,l=t.useRadians===!0?2*Math.PI:360,u=1e-6;for(i in t)"useRadians"!==i&&(a=(t[i]+"").split("_"),n=a[0],r=parseFloat("function"!=typeof e[i]?e[i]:e[i.indexOf("set")||"function"!=typeof e["get"+i.substr(3)]?i:"get"+i.substr(3)]()),o=this.finals[i]="string"==typeof n&&"="===n.charAt(1)?r+parseInt(n.charAt(0)+"1",10)*Number(n.substr(2)):Number(n)||0,s=o-r,a.length&&(n=a.join("_"),-1!==n.indexOf("short")&&(s%=l,s!==s%(l/2)&&(s=0>s?s+l:s-l)),-1!==n.indexOf("_cw")&&0>s?s=(s+9999999999*l)%l-(0|s/l)*l:-1!==n.indexOf("ccw")&&s>0&&(s=(s-9999999999*l)%l-(0|s/l)*l)),(s>u||-u>s)&&(this._addTween(e,i,r,r+s,i),this._overwriteProps.push(i)));return!0},set:function(e){var t;if(1!==e)this._super.setRatio.call(this,e);else for(t=this._firstPT;t;)t.f?t.t[t.p](this.finals[t.p]):t.t[t.p]=this.finals[t.p],t=t._next}})._autoCSS=!0,_gsScope._gsDefine("easing.Back",["easing.Ease"],function(e){var t,i,n,r=_gsScope.GreenSockGlobals||_gsScope,o=r.com.greensock,s=2*Math.PI,a=Math.PI/2,l=o._class,u=function(t,i){var n=l("easing."+t,function(){},!0),r=n.prototype=new e;return r.constructor=n,r.getRatio=i,n},c=e.register||function(){},h=function(e,t,i,n){var r=l("easing."+e,{easeOut:new t,easeIn:new i,easeInOut:new n},!0);return c(r,e),r},d=function(e,t,i){this.t=e,this.v=t,i&&(this.next=i,i.prev=this,this.c=i.v-t,this.gap=i.t-e)},f=function(t,i){var n=l("easing."+t,function(e){this._p1=e||0===e?e:1.70158,this._p2=1.525*this._p1},!0),r=n.prototype=new e;return r.constructor=n,r.getRatio=i,r.config=function(e){return new n(e)},n},p=h("Back",f("BackOut",function(e){return(e-=1)*e*((this._p1+1)*e+this._p1)+1}),f("BackIn",function(e){return e*e*((this._p1+1)*e-this._p1)}),f("BackInOut",function(e){return 1>(e*=2)?.5*e*e*((this._p2+1)*e-this._p2):.5*((e-=2)*e*((this._p2+1)*e+this._p2)+2)})),g=l("easing.SlowMo",function(e,t,i){t=t||0===t?t:.7,null==e?e=.7:e>1&&(e=1),this._p=1!==e?t:0,this._p1=(1-e)/2,this._p2=e,this._p3=this._p1+this._p2,this._calcEnd=i===!0},!0),m=g.prototype=new e;return m.constructor=g,m.getRatio=function(e){var t=e+(.5-e)*this._p;return this._p1>e?this._calcEnd?1-(e=1-e/this._p1)*e:t-(e=1-e/this._p1)*e*e*e*t:e>this._p3?this._calcEnd?1-(e=(e-this._p3)/this._p1)*e:t+(e-t)*(e=(e-this._p3)/this._p1)*e*e*e:this._calcEnd?1:t},g.ease=new g(.7,.7),m.config=g.config=function(e,t,i){return new g(e,t,i)},t=l("easing.SteppedEase",function(e){e=e||1,this._p1=1/e,this._p2=e+1},!0),m=t.prototype=new e,m.constructor=t,m.getRatio=function(e){return 0>e?e=0:e>=1&&(e=.999999999),(this._p2*e>>0)*this._p1},m.config=t.config=function(e){return new t(e)},i=l("easing.RoughEase",function(t){t=t||{};for(var i,n,r,o,s,a,l=t.taper||"none",u=[],c=0,h=0|(t.points||20),f=h,p=t.randomize!==!1,g=t.clamp===!0,m=t.template instanceof e?t.template:null,_="number"==typeof t.strength?.4*t.strength:.4;--f>-1;)i=p?Math.random():1/h*f,n=m?m.getRatio(i):i,"none"===l?r=_:"out"===l?(o=1-i,r=o*o*_):"in"===l?r=i*i*_:.5>i?(o=2*i,r=.5*o*o*_):(o=2*(1-i),r=.5*o*o*_),p?n+=Math.random()*r-.5*r:f%2?n+=.5*r:n-=.5*r,g&&(n>1?n=1:0>n&&(n=0)),u[c++]={x:i,y:n};for(u.sort(function(e,t){return e.x-t.x}),a=new d(1,1,null),f=h;--f>-1;)s=u[f],a=new d(s.x,s.y,a);this._prev=new d(0,0,0!==a.t?a:a.next)},!0),m=i.prototype=new e,m.constructor=i,m.getRatio=function(e){var t=this._prev;if(e>t.t){for(;t.next&&e>=t.t;)t=t.next;t=t.prev}else for(;t.prev&&t.t>=e;)t=t.prev;return this._prev=t,t.v+(e-t.t)/t.gap*t.c},m.config=function(e){return new i(e)},i.ease=new i,h("Bounce",u("BounceOut",function(e){return 1/2.75>e?7.5625*e*e:2/2.75>e?7.5625*(e-=1.5/2.75)*e+.75:2.5/2.75>e?7.5625*(e-=2.25/2.75)*e+.9375:7.5625*(e-=2.625/2.75)*e+.984375}),u("BounceIn",function(e){return 1/2.75>(e=1-e)?1-7.5625*e*e:2/2.75>e?1-(7.5625*(e-=1.5/2.75)*e+.75):2.5/2.75>e?1-(7.5625*(e-=2.25/2.75)*e+.9375):1-(7.5625*(e-=2.625/2.75)*e+.984375)}),u("BounceInOut",function(e){var t=.5>e;return e=t?1-2*e:2*e-1,e=1/2.75>e?7.5625*e*e:2/2.75>e?7.5625*(e-=1.5/2.75)*e+.75:2.5/2.75>e?7.5625*(e-=2.25/2.75)*e+.9375:7.5625*(e-=2.625/2.75)*e+.984375,t?.5*(1-e):.5*e+.5})),h("Circ",u("CircOut",function(e){return Math.sqrt(1-(e-=1)*e)}),u("CircIn",function(e){return-(Math.sqrt(1-e*e)-1)}),u("CircInOut",function(e){return 1>(e*=2)?-.5*(Math.sqrt(1-e*e)-1):.5*(Math.sqrt(1-(e-=2)*e)+1)})),n=function(t,i,n){var r=l("easing."+t,function(e,t){this._p1=e||1,this._p2=t||n,this._p3=this._p2/s*(Math.asin(1/this._p1)||0)},!0),o=r.prototype=new e;return o.constructor=r,o.getRatio=i,o.config=function(e,t){return new r(e,t)},r},h("Elastic",n("ElasticOut",function(e){return this._p1*Math.pow(2,-10*e)*Math.sin((e-this._p3)*s/this._p2)+1},.3),n("ElasticIn",function(e){return-(this._p1*Math.pow(2,10*(e-=1))*Math.sin((e-this._p3)*s/this._p2))},.3),n("ElasticInOut",function(e){return 1>(e*=2)?-.5*this._p1*Math.pow(2,10*(e-=1))*Math.sin((e-this._p3)*s/this._p2):.5*this._p1*Math.pow(2,-10*(e-=1))*Math.sin((e-this._p3)*s/this._p2)+1},.45)),h("Expo",u("ExpoOut",function(e){return 1-Math.pow(2,-10*e)}),u("ExpoIn",function(e){return Math.pow(2,10*(e-1))-.001}),u("ExpoInOut",function(e){return 1>(e*=2)?.5*Math.pow(2,10*(e-1)):.5*(2-Math.pow(2,-10*(e-1)))})),h("Sine",u("SineOut",function(e){return Math.sin(e*a)}),u("SineIn",function(e){return-Math.cos(e*a)+1}),u("SineInOut",function(e){return-.5*(Math.cos(Math.PI*e)-1)})),l("easing.EaseLookup",{find:function(t){return e.map[t]}},!0),c(r.SlowMo,"SlowMo","ease,"),c(i,"RoughEase","ease,"),c(t,"SteppedEase","ease,"),p},!0)}),_gsScope._gsDefine&&_gsScope._gsQueue.pop()(),function(e,t){"use strict";var i=e.GreenSockGlobals=e.GreenSockGlobals||e;if(!i.TweenLite){var n,r,o,s,a,l=function(e){var t,n=e.split("."),r=i;for(t=0;n.length>t;t++)r[n[t]]=r=r[n[t]]||{};return r},u=l("com.greensock"),c=1e-10,h=function(e){var t,i=[],n=e.length;for(t=0;t!==n;i.push(e[t++]));return i},d=function(){},f=function(){var e=Object.prototype.toString,t=e.call([]);return function(i){return null!=i&&(i instanceof Array||"object"==typeof i&&!!i.push&&e.call(i)===t)}}(),p={},g=function(n,r,o,s){this.sc=p[n]?p[n].sc:[],p[n]=this,this.gsClass=null,this.func=o;var a=[];this.check=function(u){for(var c,h,d,f,m=r.length,_=m;--m>-1;)(c=p[r[m]]||new g(r[m],[])).gsClass?(a[m]=c.gsClass,_--):u&&c.sc.push(this);if(0===_&&o)for(h=("com.greensock."+n).split("."),d=h.pop(),f=l(h.join("."))[d]=this.gsClass=o.apply(o,a),s&&(i[d]=f,"function"==typeof define&&define.amd?define((e.GreenSockAMDPath?e.GreenSockAMDPath+"/":"")+n.split(".").pop(),[],function(){return f}):n===t&&"undefined"!=typeof module&&module.exports&&(module.exports=f)),m=0;this.sc.length>m;m++)this.sc[m].check()},this.check(!0)},m=e._gsDefine=function(e,t,i,n){return new g(e,t,i,n)},_=u._class=function(e,t,i){return t=t||function(){},m(e,[],function(){return t},i),t};m.globals=i;var v=[0,0,1,1],y=[],b=_("easing.Ease",function(e,t,i,n){this._func=e,this._type=i||0,this._power=n||0,this._params=t?v.concat(t):v},!0),x=b.map={},w=b.register=function(e,t,i,n){for(var r,o,s,a,l=t.split(","),c=l.length,h=(i||"easeIn,easeOut,easeInOut").split(",");--c>-1;)for(o=l[c],r=n?_("easing."+o,null,!0):u.easing[o]||{},s=h.length;--s>-1;)a=h[s],x[o+"."+a]=x[a+o]=r[a]=e.getRatio?e:e[a]||new e};for(o=b.prototype,o._calcEnd=!1,o.getRatio=function(e){if(this._func)return this._params[0]=e,this._func.apply(null,this._params);var t=this._type,i=this._power,n=1===t?1-e:2===t?e:.5>e?2*e:2*(1-e);return 1===i?n*=n:2===i?n*=n*n:3===i?n*=n*n*n:4===i&&(n*=n*n*n*n),1===t?1-n:2===t?n:.5>e?n/2:1-n/2},n=["Linear","Quad","Cubic","Quart","Quint,Strong"],r=n.length;--r>-1;)o=n[r]+",Power"+r,w(new b(null,null,1,r),o,"easeOut",!0),w(new b(null,null,2,r),o,"easeIn"+(0===r?",easeNone":"")),w(new b(null,null,3,r),o,"easeInOut");x.linear=u.easing.Linear.easeIn,x.swing=u.easing.Quad.easeInOut;
var T=_("events.EventDispatcher",function(e){this._listeners={},this._eventTarget=e||this});o=T.prototype,o.addEventListener=function(e,t,i,n,r){r=r||0;var o,l,u=this._listeners[e],c=0;for(null==u&&(this._listeners[e]=u=[]),l=u.length;--l>-1;)o=u[l],o.c===t&&o.s===i?u.splice(l,1):0===c&&r>o.pr&&(c=l+1);u.splice(c,0,{c:t,s:i,up:n,pr:r}),this!==s||a||s.wake()},o.removeEventListener=function(e,t){var i,n=this._listeners[e];if(n)for(i=n.length;--i>-1;)if(n[i].c===t)return void n.splice(i,1)},o.dispatchEvent=function(e){var t,i,n,r=this._listeners[e];if(r)for(t=r.length,i=this._eventTarget;--t>-1;)n=r[t],n&&(n.up?n.c.call(n.s||i,{type:e,target:i}):n.c.call(n.s||i))};var k=e.requestAnimationFrame,S=e.cancelAnimationFrame,C=Date.now||function(){return(new Date).getTime()},P=C();for(n=["ms","moz","webkit","o"],r=n.length;--r>-1&&!k;)k=e[n[r]+"RequestAnimationFrame"],S=e[n[r]+"CancelAnimationFrame"]||e[n[r]+"CancelRequestAnimationFrame"];_("Ticker",function(e,t){var i,n,r,o,l,u=this,h=C(),f=t!==!1&&k,p=500,g=33,m=function(e){var t,s,a=C()-P;a>p&&(h+=a-g),P+=a,u.time=(P-h)/1e3,t=u.time-l,(!i||t>0||e===!0)&&(u.frame++,l+=t+(t>=o?.004:o-t),s=!0),e!==!0&&(r=n(m)),s&&u.dispatchEvent("tick")};T.call(u),u.time=u.frame=0,u.tick=function(){m(!0)},u.lagSmoothing=function(e,t){p=e||1/c,g=Math.min(t,p,0)},u.sleep=function(){null!=r&&(f&&S?S(r):clearTimeout(r),n=d,r=null,u===s&&(a=!1))},u.wake=function(){null!==r?u.sleep():u.frame>10&&(P=C()-p+5),n=0===i?d:f&&k?k:function(e){return setTimeout(e,0|1e3*(l-u.time)+1)},u===s&&(a=!0),m(2)},u.fps=function(e){return arguments.length?(i=e,o=1/(i||60),l=this.time+o,void u.wake()):i},u.useRAF=function(e){return arguments.length?(u.sleep(),f=e,void u.fps(i)):f},u.fps(e),setTimeout(function(){f&&(!r||5>u.frame)&&u.useRAF(!1)},1500)}),o=u.Ticker.prototype=new u.events.EventDispatcher,o.constructor=u.Ticker;var A=_("core.Animation",function(e,t){if(this.vars=t=t||{},this._duration=this._totalDuration=e||0,this._delay=Number(t.delay)||0,this._timeScale=1,this._active=t.immediateRender===!0,this.data=t.data,this._reversed=t.reversed===!0,Y){a||s.wake();var i=this.vars.useFrames?H:Y;i.add(this,i._time),this.vars.paused&&this.paused(!0)}});s=A.ticker=new u.Ticker,o=A.prototype,o._dirty=o._gc=o._initted=o._paused=!1,o._totalTime=o._time=0,o._rawPrevTime=-1,o._next=o._last=o._onUpdate=o._timeline=o.timeline=null,o._paused=!1;var O=function(){a&&C()-P>2e3&&s.wake(),setTimeout(O,2e3)};O(),o.play=function(e,t){return null!=e&&this.seek(e,t),this.reversed(!1).paused(!1)},o.pause=function(e,t){return null!=e&&this.seek(e,t),this.paused(!0)},o.resume=function(e,t){return null!=e&&this.seek(e,t),this.paused(!1)},o.seek=function(e,t){return this.totalTime(Number(e),t!==!1)},o.restart=function(e,t){return this.reversed(!1).paused(!1).totalTime(e?-this._delay:0,t!==!1,!0)},o.reverse=function(e,t){return null!=e&&this.seek(e||this.totalDuration(),t),this.reversed(!0).paused(!1)},o.render=function(){},o.invalidate=function(){return this._time=this._totalTime=0,this._initted=this._gc=!1,this._rawPrevTime=-1,(this._gc||!this.timeline)&&this._enabled(!0),this},o.isActive=function(){var e,t=this._timeline,i=this._startTime;return!t||!this._gc&&!this._paused&&t.isActive()&&(e=t.rawTime())>=i&&i+this.totalDuration()/this._timeScale>e},o._enabled=function(e,t){return a||s.wake(),this._gc=!e,this._active=this.isActive(),t!==!0&&(e&&!this.timeline?this._timeline.add(this,this._startTime-this._delay):!e&&this.timeline&&this._timeline._remove(this,!0)),!1},o._kill=function(){return this._enabled(!1,!1)},o.kill=function(e,t){return this._kill(e,t),this},o._uncache=function(e){for(var t=e?this:this.timeline;t;)t._dirty=!0,t=t.timeline;return this},o._swapSelfInParams=function(e){for(var t=e.length,i=e.concat();--t>-1;)"{self}"===e[t]&&(i[t]=this);return i},o.eventCallback=function(e,t,i,n){if("on"===(e||"").substr(0,2)){var r=this.vars;if(1===arguments.length)return r[e];null==t?delete r[e]:(r[e]=t,r[e+"Params"]=f(i)&&-1!==i.join("").indexOf("{self}")?this._swapSelfInParams(i):i,r[e+"Scope"]=n),"onUpdate"===e&&(this._onUpdate=t)}return this},o.delay=function(e){return arguments.length?(this._timeline.smoothChildTiming&&this.startTime(this._startTime+e-this._delay),this._delay=e,this):this._delay},o.duration=function(e){return arguments.length?(this._duration=this._totalDuration=e,this._uncache(!0),this._timeline.smoothChildTiming&&this._time>0&&this._time<this._duration&&0!==e&&this.totalTime(this._totalTime*(e/this._duration),!0),this):(this._dirty=!1,this._duration)},o.totalDuration=function(e){return this._dirty=!1,arguments.length?this.duration(e):this._totalDuration},o.time=function(e,t){return arguments.length?(this._dirty&&this.totalDuration(),this.totalTime(e>this._duration?this._duration:e,t)):this._time},o.totalTime=function(e,t,i){if(a||s.wake(),!arguments.length)return this._totalTime;if(this._timeline){if(0>e&&!i&&(e+=this.totalDuration()),this._timeline.smoothChildTiming){this._dirty&&this.totalDuration();var n=this._totalDuration,r=this._timeline;if(e>n&&!i&&(e=n),this._startTime=(this._paused?this._pauseTime:r._time)-(this._reversed?n-e:e)/this._timeScale,r._dirty||this._uncache(!1),r._timeline)for(;r._timeline;)r._timeline._time!==(r._startTime+r._totalTime)/r._timeScale&&r.totalTime(r._totalTime,!0),r=r._timeline}this._gc&&this._enabled(!0,!1),(this._totalTime!==e||0===this._duration)&&(this.render(e,t,!1),E.length&&q())}return this},o.progress=o.totalProgress=function(e,t){return arguments.length?this.totalTime(this.duration()*e,t):this._time/this.duration()},o.startTime=function(e){return arguments.length?(e!==this._startTime&&(this._startTime=e,this.timeline&&this.timeline._sortChildren&&this.timeline.add(this,e-this._delay)),this):this._startTime},o.endTime=function(e){return this._startTime+(0!=e?this.totalDuration():this.duration())/this._timeScale},o.timeScale=function(e){if(!arguments.length)return this._timeScale;if(e=e||c,this._timeline&&this._timeline.smoothChildTiming){var t=this._pauseTime,i=t||0===t?t:this._timeline.totalTime();this._startTime=i-(i-this._startTime)*this._timeScale/e}return this._timeScale=e,this._uncache(!1)},o.reversed=function(e){return arguments.length?(e!=this._reversed&&(this._reversed=e,this.totalTime(this._timeline&&!this._timeline.smoothChildTiming?this.totalDuration()-this._totalTime:this._totalTime,!0)),this):this._reversed},o.paused=function(e){if(!arguments.length)return this._paused;if(e!=this._paused&&this._timeline){a||e||s.wake();var t=this._timeline,i=t.rawTime(),n=i-this._pauseTime;!e&&t.smoothChildTiming&&(this._startTime+=n,this._uncache(!1)),this._pauseTime=e?i:null,this._paused=e,this._active=this.isActive(),!e&&0!==n&&this._initted&&this.duration()&&this.render(t.smoothChildTiming?this._totalTime:(i-this._startTime)/this._timeScale,!0,!0)}return this._gc&&!e&&this._enabled(!0,!1),this};var D=_("core.SimpleTimeline",function(e){A.call(this,0,e),this.autoRemoveChildren=this.smoothChildTiming=!0});o=D.prototype=new A,o.constructor=D,o.kill()._gc=!1,o._first=o._last=o._recent=null,o._sortChildren=!1,o.add=o.insert=function(e,t){var i,n;if(e._startTime=Number(t||0)+e._delay,e._paused&&this!==e._timeline&&(e._pauseTime=e._startTime+(this.rawTime()-e._startTime)/e._timeScale),e.timeline&&e.timeline._remove(e,!0),e.timeline=e._timeline=this,e._gc&&e._enabled(!0,!0),i=this._last,this._sortChildren)for(n=e._startTime;i&&i._startTime>n;)i=i._prev;return i?(e._next=i._next,i._next=e):(e._next=this._first,this._first=e),e._next?e._next._prev=e:this._last=e,e._prev=i,this._recent=e,this._timeline&&this._uncache(!0),this},o._remove=function(e,t){return e.timeline===this&&(t||e._enabled(!1,!0),e._prev?e._prev._next=e._next:this._first===e&&(this._first=e._next),e._next?e._next._prev=e._prev:this._last===e&&(this._last=e._prev),e._next=e._prev=e.timeline=null,e===this._recent&&(this._recent=this._last),this._timeline&&this._uncache(!0)),this},o.render=function(e,t,i){var n,r=this._first;for(this._totalTime=this._time=this._rawPrevTime=e;r;)n=r._next,(r._active||e>=r._startTime&&!r._paused)&&(r._reversed?r.render((r._dirty?r.totalDuration():r._totalDuration)-(e-r._startTime)*r._timeScale,t,i):r.render((e-r._startTime)*r._timeScale,t,i)),r=n},o.rawTime=function(){return a||s.wake(),this._totalTime};var M=_("TweenLite",function(t,i,n){if(A.call(this,i,n),this.render=M.prototype.render,null==t)throw"Cannot tween a null target.";this.target=t="string"!=typeof t?t:M.selector(t)||t;var r,o,s,a=t.jquery||t.length&&t!==e&&t[0]&&(t[0]===e||t[0].nodeType&&t[0].style&&!t.nodeType),l=this.vars.overwrite;if(this._overwrite=l=null==l?B[M.defaultOverwrite]:"number"==typeof l?l>>0:B[l],(a||t instanceof Array||t.push&&f(t))&&"number"!=typeof t[0])for(this._targets=s=h(t),this._propLookup=[],this._siblings=[],r=0;s.length>r;r++)o=s[r],o?"string"!=typeof o?o.length&&o!==e&&o[0]&&(o[0]===e||o[0].nodeType&&o[0].style&&!o.nodeType)?(s.splice(r--,1),this._targets=s=s.concat(h(o))):(this._siblings[r]=W(o,this,!1),1===l&&this._siblings[r].length>1&&U(o,this,null,1,this._siblings[r])):(o=s[r--]=M.selector(o),"string"==typeof o&&s.splice(r+1,1)):s.splice(r--,1);else this._propLookup={},this._siblings=W(t,this,!1),1===l&&this._siblings.length>1&&U(t,this,null,1,this._siblings);(this.vars.immediateRender||0===i&&0===this._delay&&this.vars.immediateRender!==!1)&&(this._time=-c,this.render(-this._delay))},!0),R=function(t){return t&&t.length&&t!==e&&t[0]&&(t[0]===e||t[0].nodeType&&t[0].style&&!t.nodeType)},N=function(e,t){var i,n={};for(i in e)X[i]||i in t&&"transform"!==i&&"x"!==i&&"y"!==i&&"width"!==i&&"height"!==i&&"className"!==i&&"border"!==i||!(!F[i]||F[i]&&F[i]._autoCSS)||(n[i]=e[i],delete e[i]);e.css=n};o=M.prototype=new A,o.constructor=M,o.kill()._gc=!1,o.ratio=0,o._firstPT=o._targets=o._overwrittenProps=o._startAt=null,o._notifyPluginsOfEnabled=o._lazy=!1,M.version="1.14.2",M.defaultEase=o._ease=new b(null,null,1,1),M.defaultOverwrite="auto",M.ticker=s,M.autoSleep=!0,M.lagSmoothing=function(e,t){s.lagSmoothing(e,t)},M.selector=e.$||e.jQuery||function(t){var i=e.$||e.jQuery;return i?(M.selector=i,i(t)):"undefined"==typeof document?t:document.querySelectorAll?document.querySelectorAll(t):document.getElementById("#"===t.charAt(0)?t.substr(1):t)};var E=[],L={},j=M._internals={isArray:f,isSelector:R,lazyTweens:E},F=M._plugins={},I=j.tweenLookup={},z=0,X=j.reservedProps={ease:1,delay:1,overwrite:1,onComplete:1,onCompleteParams:1,onCompleteScope:1,useFrames:1,runBackwards:1,startAt:1,onUpdate:1,onUpdateParams:1,onUpdateScope:1,onStart:1,onStartParams:1,onStartScope:1,onReverseComplete:1,onReverseCompleteParams:1,onReverseCompleteScope:1,onRepeat:1,onRepeatParams:1,onRepeatScope:1,easeParams:1,yoyo:1,immediateRender:1,repeat:1,repeatDelay:1,data:1,paused:1,reversed:1,autoCSS:1,lazy:1,onOverwrite:1},B={none:0,all:1,auto:2,concurrent:3,allOnStart:4,preexisting:5,"true":1,"false":0},H=A._rootFramesTimeline=new D,Y=A._rootTimeline=new D,q=j.lazyRender=function(){var e,t=E.length;for(L={};--t>-1;)e=E[t],e&&e._lazy!==!1&&(e.render(e._lazy[0],e._lazy[1],!0),e._lazy=!1);E.length=0};Y._startTime=s.time,H._startTime=s.frame,Y._active=H._active=!0,setTimeout(q,1),A._updateRoot=M.render=function(){var e,t,i;if(E.length&&q(),Y.render((s.time-Y._startTime)*Y._timeScale,!1,!1),H.render((s.frame-H._startTime)*H._timeScale,!1,!1),E.length&&q(),!(s.frame%120)){for(i in I){for(t=I[i].tweens,e=t.length;--e>-1;)t[e]._gc&&t.splice(e,1);0===t.length&&delete I[i]}if(i=Y._first,(!i||i._paused)&&M.autoSleep&&!H._first&&1===s._listeners.tick.length){for(;i&&i._paused;)i=i._next;i||s.sleep()}}},s.addEventListener("tick",A._updateRoot);var W=function(e,t,i){var n,r,o=e._gsTweenID;if(I[o||(e._gsTweenID=o="t"+z++)]||(I[o]={target:e,tweens:[]}),t&&(n=I[o].tweens,n[r=n.length]=t,i))for(;--r>-1;)n[r]===t&&n.splice(r,1);return I[o].tweens},Q=function(e,t,i,n){var r,o,s=e.vars.onOverwrite;return s&&(r=s(e,t,i,n)),s=M.onOverwrite,s&&(o=s(e,t,i,n)),r!==!1&&o!==!1},U=function(e,t,i,n,r){var o,s,a,l;if(1===n||n>=4){for(l=r.length,o=0;l>o;o++)if((a=r[o])!==t)a._gc||Q(a,t)&&a._enabled(!1,!1)&&(s=!0);else if(5===n)break;return s}var u,h=t._startTime+c,d=[],f=0,p=0===t._duration;for(o=r.length;--o>-1;)(a=r[o])===t||a._gc||a._paused||(a._timeline!==t._timeline?(u=u||$(t,0,p),0===$(a,u,p)&&(d[f++]=a)):h>=a._startTime&&a._startTime+a.totalDuration()/a._timeScale>h&&((p||!a._initted)&&2e-10>=h-a._startTime||(d[f++]=a)));for(o=f;--o>-1;)if(a=d[o],2===n&&a._kill(i,e,t)&&(s=!0),2!==n||!a._firstPT&&a._initted){if(2!==n&&!Q(a,t))continue;a._enabled(!1,!1)&&(s=!0)}return s},$=function(e,t,i){for(var n=e._timeline,r=n._timeScale,o=e._startTime;n._timeline;){if(o+=n._startTime,r*=n._timeScale,n._paused)return-100;n=n._timeline}return o/=r,o>t?o-t:i&&o===t||!e._initted&&2*c>o-t?c:(o+=e.totalDuration()/e._timeScale/r)>t+c?0:o-t-c};o._init=function(){var e,t,i,n,r,o=this.vars,s=this._overwrittenProps,a=this._duration,l=!!o.immediateRender,u=o.ease;if(o.startAt){this._startAt&&(this._startAt.render(-1,!0),this._startAt.kill()),r={};for(n in o.startAt)r[n]=o.startAt[n];if(r.overwrite=!1,r.immediateRender=!0,r.lazy=l&&o.lazy!==!1,r.startAt=r.delay=null,this._startAt=M.to(this.target,0,r),l)if(this._time>0)this._startAt=null;else if(0!==a)return}else if(o.runBackwards&&0!==a)if(this._startAt)this._startAt.render(-1,!0),this._startAt.kill(),this._startAt=null;else{0!==this._time&&(l=!1),i={};for(n in o)X[n]&&"autoCSS"!==n||(i[n]=o[n]);if(i.overwrite=0,i.data="isFromStart",i.lazy=l&&o.lazy!==!1,i.immediateRender=l,this._startAt=M.to(this.target,0,i),l){if(0===this._time)return}else this._startAt._init(),this._startAt._enabled(!1),this.vars.immediateRender&&(this._startAt=null)}if(this._ease=u=u?u instanceof b?u:"function"==typeof u?new b(u,o.easeParams):x[u]||M.defaultEase:M.defaultEase,o.easeParams instanceof Array&&u.config&&(this._ease=u.config.apply(u,o.easeParams)),this._easeType=this._ease._type,this._easePower=this._ease._power,this._firstPT=null,this._targets)for(e=this._targets.length;--e>-1;)this._initProps(this._targets[e],this._propLookup[e]={},this._siblings[e],s?s[e]:null)&&(t=!0);else t=this._initProps(this.target,this._propLookup,this._siblings,s);if(t&&M._onPluginEvent("_onInitAllProps",this),s&&(this._firstPT||"function"!=typeof this.target&&this._enabled(!1,!1)),o.runBackwards)for(i=this._firstPT;i;)i.s+=i.c,i.c=-i.c,i=i._next;this._onUpdate=o.onUpdate,this._initted=!0},o._initProps=function(t,i,n,r){var o,s,a,l,u,c;if(null==t)return!1;L[t._gsTweenID]&&q(),this.vars.css||t.style&&t!==e&&t.nodeType&&F.css&&this.vars.autoCSS!==!1&&N(this.vars,t);for(o in this.vars){if(c=this.vars[o],X[o])c&&(c instanceof Array||c.push&&f(c))&&-1!==c.join("").indexOf("{self}")&&(this.vars[o]=c=this._swapSelfInParams(c,this));else if(F[o]&&(l=new F[o])._onInitTween(t,this.vars[o],this)){for(this._firstPT=u={_next:this._firstPT,t:l,p:"setRatio",s:0,c:1,f:!0,n:o,pg:!0,pr:l._priority},s=l._overwriteProps.length;--s>-1;)i[l._overwriteProps[s]]=this._firstPT;(l._priority||l._onInitAllProps)&&(a=!0),(l._onDisable||l._onEnable)&&(this._notifyPluginsOfEnabled=!0)}else this._firstPT=i[o]=u={_next:this._firstPT,t:t,p:o,f:"function"==typeof t[o],n:o,pg:!1,pr:0},u.s=u.f?t[o.indexOf("set")||"function"!=typeof t["get"+o.substr(3)]?o:"get"+o.substr(3)]():parseFloat(t[o]),u.c="string"==typeof c&&"="===c.charAt(1)?parseInt(c.charAt(0)+"1",10)*Number(c.substr(2)):Number(c)-u.s||0;u&&u._next&&(u._next._prev=u)}return r&&this._kill(r,t)?this._initProps(t,i,n,r):this._overwrite>1&&this._firstPT&&n.length>1&&U(t,this,i,this._overwrite,n)?(this._kill(i,t),this._initProps(t,i,n,r)):(this._firstPT&&(this.vars.lazy!==!1&&this._duration||this.vars.lazy&&!this._duration)&&(L[t._gsTweenID]=!0),a)},o.render=function(e,t,i){var n,r,o,s,a=this._time,l=this._duration,u=this._rawPrevTime;if(e>=l)this._totalTime=this._time=l,this.ratio=this._ease._calcEnd?this._ease.getRatio(1):1,this._reversed||(n=!0,r="onComplete"),0===l&&(this._initted||!this.vars.lazy||i)&&(this._startTime===this._timeline._duration&&(e=0),(0===e||0>u||u===c)&&u!==e&&(i=!0,u>c&&(r="onReverseComplete")),this._rawPrevTime=s=!t||e||u===e?e:c);else if(1e-7>e)this._totalTime=this._time=0,this.ratio=this._ease._calcEnd?this._ease.getRatio(0):0,(0!==a||0===l&&u>0&&u!==c)&&(r="onReverseComplete",n=this._reversed),0>e&&(this._active=!1,0===l&&(this._initted||!this.vars.lazy||i)&&(u>=0&&(i=!0),this._rawPrevTime=s=!t||e||u===e?e:c)),this._initted||(i=!0);else if(this._totalTime=this._time=e,this._easeType){var h=e/l,d=this._easeType,f=this._easePower;(1===d||3===d&&h>=.5)&&(h=1-h),3===d&&(h*=2),1===f?h*=h:2===f?h*=h*h:3===f?h*=h*h*h:4===f&&(h*=h*h*h*h),this.ratio=1===d?1-h:2===d?h:.5>e/l?h/2:1-h/2}else this.ratio=this._ease.getRatio(e/l);if(this._time!==a||i){if(!this._initted){if(this._init(),!this._initted||this._gc)return;if(!i&&this._firstPT&&(this.vars.lazy!==!1&&this._duration||this.vars.lazy&&!this._duration))return this._time=this._totalTime=a,this._rawPrevTime=u,E.push(this),void(this._lazy=[e,t]);this._time&&!n?this.ratio=this._ease.getRatio(this._time/l):n&&this._ease._calcEnd&&(this.ratio=this._ease.getRatio(0===this._time?0:1))}for(this._lazy!==!1&&(this._lazy=!1),this._active||!this._paused&&this._time!==a&&e>=0&&(this._active=!0),0===a&&(this._startAt&&(e>=0?this._startAt.render(e,t,i):r||(r="_dummyGS")),this.vars.onStart&&(0!==this._time||0===l)&&(t||this.vars.onStart.apply(this.vars.onStartScope||this,this.vars.onStartParams||y))),o=this._firstPT;o;)o.f?o.t[o.p](o.c*this.ratio+o.s):o.t[o.p]=o.c*this.ratio+o.s,o=o._next;this._onUpdate&&(0>e&&this._startAt&&e!==-1e-4&&this._startAt.render(e,t,i),t||(this._time!==a||n)&&this._onUpdate.apply(this.vars.onUpdateScope||this,this.vars.onUpdateParams||y)),r&&(!this._gc||i)&&(0>e&&this._startAt&&!this._onUpdate&&e!==-1e-4&&this._startAt.render(e,t,i),n&&(this._timeline.autoRemoveChildren&&this._enabled(!1,!1),this._active=!1),!t&&this.vars[r]&&this.vars[r].apply(this.vars[r+"Scope"]||this,this.vars[r+"Params"]||y),0===l&&this._rawPrevTime===c&&s!==c&&(this._rawPrevTime=0))}},o._kill=function(e,t,i){if("all"===e&&(e=null),null==e&&(null==t||t===this.target))return this._lazy=!1,this._enabled(!1,!1);t="string"!=typeof t?t||this._targets||this.target:M.selector(t)||t;var n,r,o,s,a,l,u,c,h;if((f(t)||R(t))&&"number"!=typeof t[0])for(n=t.length;--n>-1;)this._kill(e,t[n])&&(l=!0);else{if(this._targets){for(n=this._targets.length;--n>-1;)if(t===this._targets[n]){a=this._propLookup[n]||{},this._overwrittenProps=this._overwrittenProps||[],r=this._overwrittenProps[n]=e?this._overwrittenProps[n]||{}:"all";break}}else{if(t!==this.target)return!1;a=this._propLookup,r=this._overwrittenProps=e?this._overwrittenProps||{}:"all"}if(a){if(u=e||a,c=e!==r&&"all"!==r&&e!==a&&("object"!=typeof e||!e._tempKill),i&&(M.onOverwrite||this.vars.onOverwrite)){for(o in u)a[o]&&(h||(h=[]),h.push(o));if(!Q(this,i,t,h))return!1}for(o in u)(s=a[o])&&(s.pg&&s.t._kill(u)&&(l=!0),s.pg&&0!==s.t._overwriteProps.length||(s._prev?s._prev._next=s._next:s===this._firstPT&&(this._firstPT=s._next),s._next&&(s._next._prev=s._prev),s._next=s._prev=null),delete a[o]),c&&(r[o]=1);!this._firstPT&&this._initted&&this._enabled(!1,!1)}}return l},o.invalidate=function(){return this._notifyPluginsOfEnabled&&M._onPluginEvent("_onDisable",this),this._firstPT=this._overwrittenProps=this._startAt=this._onUpdate=null,this._notifyPluginsOfEnabled=this._active=this._lazy=!1,this._propLookup=this._targets?{}:[],A.prototype.invalidate.call(this),this.vars.immediateRender&&(this._time=-c,this.render(-this._delay)),this},o._enabled=function(e,t){if(a||s.wake(),e&&this._gc){var i,n=this._targets;if(n)for(i=n.length;--i>-1;)this._siblings[i]=W(n[i],this,!0);else this._siblings=W(this.target,this,!0)}return A.prototype._enabled.call(this,e,t),this._notifyPluginsOfEnabled&&this._firstPT?M._onPluginEvent(e?"_onEnable":"_onDisable",this):!1},M.to=function(e,t,i){return new M(e,t,i)},M.from=function(e,t,i){return i.runBackwards=!0,i.immediateRender=0!=i.immediateRender,new M(e,t,i)},M.fromTo=function(e,t,i,n){return n.startAt=i,n.immediateRender=0!=n.immediateRender&&0!=i.immediateRender,new M(e,t,n)},M.delayedCall=function(e,t,i,n,r){return new M(t,0,{delay:e,onComplete:t,onCompleteParams:i,onCompleteScope:n,onReverseComplete:t,onReverseCompleteParams:i,onReverseCompleteScope:n,immediateRender:!1,useFrames:r,overwrite:0})},M.set=function(e,t){return new M(e,0,t)},M.getTweensOf=function(e,t){if(null==e)return[];e="string"!=typeof e?e:M.selector(e)||e;var i,n,r,o;if((f(e)||R(e))&&"number"!=typeof e[0]){for(i=e.length,n=[];--i>-1;)n=n.concat(M.getTweensOf(e[i],t));for(i=n.length;--i>-1;)for(o=n[i],r=i;--r>-1;)o===n[r]&&n.splice(i,1)}else for(n=W(e).concat(),i=n.length;--i>-1;)(n[i]._gc||t&&!n[i].isActive())&&n.splice(i,1);return n},M.killTweensOf=M.killDelayedCallsTo=function(e,t,i){"object"==typeof t&&(i=t,t=!1);for(var n=M.getTweensOf(e,t),r=n.length;--r>-1;)n[r]._kill(i,e)};var V=_("plugins.TweenPlugin",function(e,t){this._overwriteProps=(e||"").split(","),this._propName=this._overwriteProps[0],this._priority=t||0,this._super=V.prototype},!0);if(o=V.prototype,V.version="1.10.1",V.API=2,o._firstPT=null,o._addTween=function(e,t,i,n,r,o){var s,a;return null!=n&&(s="number"==typeof n||"="!==n.charAt(1)?Number(n)-i:parseInt(n.charAt(0)+"1",10)*Number(n.substr(2)))?(this._firstPT=a={_next:this._firstPT,t:e,p:t,s:i,c:s,f:"function"==typeof e[t],n:r||t,r:o},a._next&&(a._next._prev=a),a):void 0},o.setRatio=function(e){for(var t,i=this._firstPT,n=1e-6;i;)t=i.c*e+i.s,i.r?t=Math.round(t):n>t&&t>-n&&(t=0),i.f?i.t[i.p](t):i.t[i.p]=t,i=i._next},o._kill=function(e){var t,i=this._overwriteProps,n=this._firstPT;if(null!=e[this._propName])this._overwriteProps=[];else for(t=i.length;--t>-1;)null!=e[i[t]]&&i.splice(t,1);for(;n;)null!=e[n.n]&&(n._next&&(n._next._prev=n._prev),n._prev?(n._prev._next=n._next,n._prev=null):this._firstPT===n&&(this._firstPT=n._next)),n=n._next;return!1},o._roundProps=function(e,t){for(var i=this._firstPT;i;)(e[this._propName]||null!=i.n&&e[i.n.split(this._propName+"_").join("")])&&(i.r=t),i=i._next},M._onPluginEvent=function(e,t){var i,n,r,o,s,a=t._firstPT;if("_onInitAllProps"===e){for(;a;){for(s=a._next,n=r;n&&n.pr>a.pr;)n=n._next;(a._prev=n?n._prev:o)?a._prev._next=a:r=a,(a._next=n)?n._prev=a:o=a,a=s}a=t._firstPT=r}for(;a;)a.pg&&"function"==typeof a.t[e]&&a.t[e]()&&(i=!0),a=a._next;return i},V.activate=function(e){for(var t=e.length;--t>-1;)e[t].API===V.API&&(F[(new e[t])._propName]=e[t]);return!0},m.plugin=function(e){if(!(e&&e.propName&&e.init&&e.API))throw"illegal plugin definition.";var t,i=e.propName,n=e.priority||0,r=e.overwriteProps,o={init:"_onInitTween",set:"setRatio",kill:"_kill",round:"_roundProps",initAll:"_onInitAllProps"},s=_("plugins."+i.charAt(0).toUpperCase()+i.substr(1)+"Plugin",function(){V.call(this,i,n),this._overwriteProps=r||[]},e.global===!0),a=s.prototype=new V(i);a.constructor=s,s.API=e.API;for(t in o)"function"==typeof e[t]&&(a[o[t]]=e[t]);return s.version=e.version,V.activate([s]),s},n=e._gsQueue){for(r=0;n.length>r;r++)n[r]();for(o in p)p[o].func||e.console.log("GSAP encountered missing dependency: com.greensock."+o)}a=!1}}("undefined"!=typeof module&&module.exports&&"undefined"!=typeof global?global:this||window,"TweenMax");var _gsScope="undefined"!=typeof module&&module.exports&&"undefined"!=typeof global?global:this||window;(_gsScope._gsQueue||(_gsScope._gsQueue=[])).push(function(){"use strict";_gsScope._gsDefine("TimelineMax",["TimelineLite","TweenLite","easing.Ease"],function(e,t,i){var n=function(t){e.call(this,t),this._repeat=this.vars.repeat||0,this._repeatDelay=this.vars.repeatDelay||0,this._cycle=0,this._yoyo=this.vars.yoyo===!0,this._dirty=!0},r=1e-10,o=[],s=t._internals,a=s.lazyTweens,l=s.lazyRender,u=new i(null,null,1,0),c=n.prototype=new e;return c.constructor=n,c.kill()._gc=!1,n.version="1.14.2",c.invalidate=function(){return this._yoyo=this.vars.yoyo===!0,this._repeat=this.vars.repeat||0,this._repeatDelay=this.vars.repeatDelay||0,this._uncache(!0),e.prototype.invalidate.call(this)},c.addCallback=function(e,i,n,r){return this.add(t.delayedCall(0,e,n,r),i)},c.removeCallback=function(e,t){if(e)if(null==t)this._kill(null,e);else for(var i=this.getTweensOf(e,!1),n=i.length,r=this._parseTimeOrLabel(t);--n>-1;)i[n]._startTime===r&&i[n]._enabled(!1,!1);return this},c.tweenTo=function(e,i){i=i||{};var n,r,s,a={ease:u,overwrite:i.delay?2:1,useFrames:this.usesFrames(),immediateRender:!1};for(r in i)a[r]=i[r];return a.time=this._parseTimeOrLabel(e),n=Math.abs(Number(a.time)-this._time)/this._timeScale||.001,s=new t(this,n,a),a.onStart=function(){s.target.paused(!0),s.vars.time!==s.target.time()&&n===s.duration()&&s.duration(Math.abs(s.vars.time-s.target.time())/s.target._timeScale),i.onStart&&i.onStart.apply(i.onStartScope||s,i.onStartParams||o)},s},c.tweenFromTo=function(e,t,i){i=i||{},e=this._parseTimeOrLabel(e),i.startAt={onComplete:this.seek,onCompleteParams:[e],onCompleteScope:this},i.immediateRender=i.immediateRender!==!1;var n=this.tweenTo(t,i);return n.duration(Math.abs(n.vars.time-e)/this._timeScale||.001)},c.render=function(e,t,i){this._gc&&this._enabled(!0,!1);var n,s,u,c,h,d,f=this._dirty?this.totalDuration():this._totalDuration,p=this._duration,g=this._time,m=this._totalTime,_=this._startTime,v=this._timeScale,y=this._rawPrevTime,b=this._paused,x=this._cycle;if(e>=f?(this._locked||(this._totalTime=f,this._cycle=this._repeat),this._reversed||this._hasPausedChild()||(s=!0,c="onComplete",0===this._duration&&(0===e||0>y||y===r)&&y!==e&&this._first&&(h=!0,y>r&&(c="onReverseComplete"))),this._rawPrevTime=this._duration||!t||e||this._rawPrevTime===e?e:r,this._yoyo&&0!==(1&this._cycle)?this._time=e=0:(this._time=p,e=p+1e-4)):1e-7>e?(this._locked||(this._totalTime=this._cycle=0),this._time=0,(0!==g||0===p&&y!==r&&(y>0||0>e&&y>=0)&&!this._locked)&&(c="onReverseComplete",s=this._reversed),0>e?(this._active=!1,y>=0&&this._first&&(h=!0),this._rawPrevTime=e):(this._rawPrevTime=p||!t||e||this._rawPrevTime===e?e:r,e=0,this._initted||(h=!0))):(0===p&&0>y&&(h=!0),this._time=this._rawPrevTime=e,this._locked||(this._totalTime=e,0!==this._repeat&&(d=p+this._repeatDelay,this._cycle=this._totalTime/d>>0,0!==this._cycle&&this._cycle===this._totalTime/d&&this._cycle--,this._time=this._totalTime-this._cycle*d,this._yoyo&&0!==(1&this._cycle)&&(this._time=p-this._time),this._time>p?(this._time=p,e=p+1e-4):0>this._time?this._time=e=0:e=this._time))),this._cycle!==x&&!this._locked){var w=this._yoyo&&0!==(1&x),T=w===(this._yoyo&&0!==(1&this._cycle)),k=this._totalTime,S=this._cycle,C=this._rawPrevTime,P=this._time;if(this._totalTime=x*p,x>this._cycle?w=!w:this._totalTime+=p,this._time=g,this._rawPrevTime=0===p?y-1e-4:y,this._cycle=x,this._locked=!0,g=w?0:p,this.render(g,t,0===p),t||this._gc||this.vars.onRepeat&&this.vars.onRepeat.apply(this.vars.onRepeatScope||this,this.vars.onRepeatParams||o),T&&(g=w?p+1e-4:-1e-4,this.render(g,!0,!1)),this._locked=!1,this._paused&&!b)return;this._time=P,this._totalTime=k,this._cycle=S,this._rawPrevTime=C}if(!(this._time!==g&&this._first||i||h))return void(m!==this._totalTime&&this._onUpdate&&(t||this._onUpdate.apply(this.vars.onUpdateScope||this,this.vars.onUpdateParams||o)));if(this._initted||(this._initted=!0),this._active||!this._paused&&this._totalTime!==m&&e>0&&(this._active=!0),0===m&&this.vars.onStart&&0!==this._totalTime&&(t||this.vars.onStart.apply(this.vars.onStartScope||this,this.vars.onStartParams||o)),this._time>=g)for(n=this._first;n&&(u=n._next,!this._paused||b);)(n._active||n._startTime<=this._time&&!n._paused&&!n._gc)&&(n._reversed?n.render((n._dirty?n.totalDuration():n._totalDuration)-(e-n._startTime)*n._timeScale,t,i):n.render((e-n._startTime)*n._timeScale,t,i)),n=u;else for(n=this._last;n&&(u=n._prev,!this._paused||b);)(n._active||g>=n._startTime&&!n._paused&&!n._gc)&&(n._reversed?n.render((n._dirty?n.totalDuration():n._totalDuration)-(e-n._startTime)*n._timeScale,t,i):n.render((e-n._startTime)*n._timeScale,t,i)),n=u;this._onUpdate&&(t||(a.length&&l(),this._onUpdate.apply(this.vars.onUpdateScope||this,this.vars.onUpdateParams||o))),c&&(this._locked||this._gc||(_===this._startTime||v!==this._timeScale)&&(0===this._time||f>=this.totalDuration())&&(s&&(a.length&&l(),this._timeline.autoRemoveChildren&&this._enabled(!1,!1),this._active=!1),!t&&this.vars[c]&&this.vars[c].apply(this.vars[c+"Scope"]||this,this.vars[c+"Params"]||o)))},c.getActive=function(e,t,i){null==e&&(e=!0),null==t&&(t=!0),null==i&&(i=!1);var n,r,o=[],s=this.getChildren(e,t,i),a=0,l=s.length;for(n=0;l>n;n++)r=s[n],r.isActive()&&(o[a++]=r);return o},c.getLabelAfter=function(e){e||0!==e&&(e=this._time);var t,i=this.getLabelsArray(),n=i.length;for(t=0;n>t;t++)if(i[t].time>e)return i[t].name;return null},c.getLabelBefore=function(e){null==e&&(e=this._time);for(var t=this.getLabelsArray(),i=t.length;--i>-1;)if(e>t[i].time)return t[i].name;return null},c.getLabelsArray=function(){var e,t=[],i=0;for(e in this._labels)t[i++]={time:this._labels[e],name:e};return t.sort(function(e,t){return e.time-t.time}),t},c.progress=function(e,t){return arguments.length?this.totalTime(this.duration()*(this._yoyo&&0!==(1&this._cycle)?1-e:e)+this._cycle*(this._duration+this._repeatDelay),t):this._time/this.duration()},c.totalProgress=function(e,t){return arguments.length?this.totalTime(this.totalDuration()*e,t):this._totalTime/this.totalDuration()},c.totalDuration=function(t){return arguments.length?-1===this._repeat?this:this.duration((t-this._repeat*this._repeatDelay)/(this._repeat+1)):(this._dirty&&(e.prototype.totalDuration.call(this),this._totalDuration=-1===this._repeat?999999999999:this._duration*(this._repeat+1)+this._repeatDelay*this._repeat),this._totalDuration)},c.time=function(e,t){return arguments.length?(this._dirty&&this.totalDuration(),e>this._duration&&(e=this._duration),this._yoyo&&0!==(1&this._cycle)?e=this._duration-e+this._cycle*(this._duration+this._repeatDelay):0!==this._repeat&&(e+=this._cycle*(this._duration+this._repeatDelay)),this.totalTime(e,t)):this._time},c.repeat=function(e){return arguments.length?(this._repeat=e,this._uncache(!0)):this._repeat},c.repeatDelay=function(e){return arguments.length?(this._repeatDelay=e,this._uncache(!0)):this._repeatDelay},c.yoyo=function(e){return arguments.length?(this._yoyo=e,this):this._yoyo},c.currentLabel=function(e){return arguments.length?this.seek(e,!0):this.getLabelBefore(this._time+1e-8)},n},!0),_gsScope._gsDefine("TimelineLite",["core.Animation","core.SimpleTimeline","TweenLite"],function(e,t,i){var n=function(e){t.call(this,e),this._labels={},this.autoRemoveChildren=this.vars.autoRemoveChildren===!0,this.smoothChildTiming=this.vars.smoothChildTiming===!0,this._sortChildren=!0,this._onUpdate=this.vars.onUpdate;var i,n,r=this.vars;for(n in r)i=r[n],a(i)&&-1!==i.join("").indexOf("{self}")&&(r[n]=this._swapSelfInParams(i));a(r.tweens)&&this.add(r.tweens,0,r.align,r.stagger)},r=1e-10,o=i._internals,s=o.isSelector,a=o.isArray,l=o.lazyTweens,u=o.lazyRender,c=[],h=_gsScope._gsDefine.globals,d=function(e){var t,i={};for(t in e)i[t]=e[t];return i},f=function(e,t,i,n){var r=e._timeline._totalTime;(t||!this._forcingPlayhead)&&(e._timeline.pause(e._startTime),t&&t.apply(n||e._timeline,i||c),this._forcingPlayhead&&e._timeline.seek(r))},p=function(e){var t,i=[],n=e.length;for(t=0;t!==n;i.push(e[t++]));return i},g=n.prototype=new t;return n.version="1.14.2",g.constructor=n,g.kill()._gc=g._forcingPlayhead=!1,g.to=function(e,t,n,r){var o=n.repeat&&h.TweenMax||i;return t?this.add(new o(e,t,n),r):this.set(e,n,r)},g.from=function(e,t,n,r){return this.add((n.repeat&&h.TweenMax||i).from(e,t,n),r)},g.fromTo=function(e,t,n,r,o){var s=r.repeat&&h.TweenMax||i;return t?this.add(s.fromTo(e,t,n,r),o):this.set(e,r,o)},g.staggerTo=function(e,t,r,o,a,l,u,c){var h,f=new n({onComplete:l,onCompleteParams:u,onCompleteScope:c,smoothChildTiming:this.smoothChildTiming});for("string"==typeof e&&(e=i.selector(e)||e),s(e)&&(e=p(e)),o=o||0,0>o&&(e=p(e),e.reverse(),o*=-1),h=0;e.length>h;h++)r.startAt&&(r.startAt=d(r.startAt)),f.to(e[h],t,d(r),h*o);
return this.add(f,a)},g.staggerFrom=function(e,t,i,n,r,o,s,a){return i.immediateRender=0!=i.immediateRender,i.runBackwards=!0,this.staggerTo(e,t,i,n,r,o,s,a)},g.staggerFromTo=function(e,t,i,n,r,o,s,a,l){return n.startAt=i,n.immediateRender=0!=n.immediateRender&&0!=i.immediateRender,this.staggerTo(e,t,n,r,o,s,a,l)},g.call=function(e,t,n,r){return this.add(i.delayedCall(0,e,t,n),r)},g.set=function(e,t,n){return n=this._parseTimeOrLabel(n,0,!0),null==t.immediateRender&&(t.immediateRender=n===this._time&&!this._paused),this.add(new i(e,0,t),n)},n.exportRoot=function(e,t){e=e||{},null==e.smoothChildTiming&&(e.smoothChildTiming=!0);var r,o,s=new n(e),a=s._timeline;for(null==t&&(t=!0),a._remove(s,!0),s._startTime=0,s._rawPrevTime=s._time=s._totalTime=a._time,r=a._first;r;)o=r._next,t&&r instanceof i&&r.target===r.vars.onComplete||s.add(r,r._startTime-r._delay),r=o;return a.add(s,0),s},g.add=function(r,o,s,l){var u,c,h,d,f,p;if("number"!=typeof o&&(o=this._parseTimeOrLabel(o,0,!0,r)),!(r instanceof e)){if(r instanceof Array||r&&r.push&&a(r)){for(s=s||"normal",l=l||0,u=o,c=r.length,h=0;c>h;h++)a(d=r[h])&&(d=new n({tweens:d})),this.add(d,u),"string"!=typeof d&&"function"!=typeof d&&("sequence"===s?u=d._startTime+d.totalDuration()/d._timeScale:"start"===s&&(d._startTime-=d.delay())),u+=l;return this._uncache(!0)}if("string"==typeof r)return this.addLabel(r,o);if("function"!=typeof r)throw"Cannot add "+r+" into the timeline; it is not a tween, timeline, function, or string.";r=i.delayedCall(0,r)}if(t.prototype.add.call(this,r,o),(this._gc||this._time===this._duration)&&!this._paused&&this._duration<this.duration())for(f=this,p=f.rawTime()>r._startTime;f._timeline;)p&&f._timeline.smoothChildTiming?f.totalTime(f._totalTime,!0):f._gc&&f._enabled(!0,!1),f=f._timeline;return this},g.remove=function(t){if(t instanceof e)return this._remove(t,!1);if(t instanceof Array||t&&t.push&&a(t)){for(var i=t.length;--i>-1;)this.remove(t[i]);return this}return"string"==typeof t?this.removeLabel(t):this.kill(null,t)},g._remove=function(e,i){t.prototype._remove.call(this,e,i);var n=this._last;return n?this._time>n._startTime+n._totalDuration/n._timeScale&&(this._time=this.duration(),this._totalTime=this._totalDuration):this._time=this._totalTime=this._duration=this._totalDuration=0,this},g.append=function(e,t){return this.add(e,this._parseTimeOrLabel(null,t,!0,e))},g.insert=g.insertMultiple=function(e,t,i,n){return this.add(e,t||0,i,n)},g.appendMultiple=function(e,t,i,n){return this.add(e,this._parseTimeOrLabel(null,t,!0,e),i,n)},g.addLabel=function(e,t){return this._labels[e]=this._parseTimeOrLabel(t),this},g.addPause=function(e,t,i,n){return this.call(f,["{self}",t,i,n],this,e)},g.removeLabel=function(e){return delete this._labels[e],this},g.getLabelTime=function(e){return null!=this._labels[e]?this._labels[e]:-1},g._parseTimeOrLabel=function(t,i,n,r){var o;if(r instanceof e&&r.timeline===this)this.remove(r);else if(r&&(r instanceof Array||r.push&&a(r)))for(o=r.length;--o>-1;)r[o]instanceof e&&r[o].timeline===this&&this.remove(r[o]);if("string"==typeof i)return this._parseTimeOrLabel(i,n&&"number"==typeof t&&null==this._labels[i]?t-this.duration():0,n);if(i=i||0,"string"!=typeof t||!isNaN(t)&&null==this._labels[t])null==t&&(t=this.duration());else{if(o=t.indexOf("="),-1===o)return null==this._labels[t]?n?this._labels[t]=this.duration()+i:i:this._labels[t]+i;i=parseInt(t.charAt(o-1)+"1",10)*Number(t.substr(o+1)),t=o>1?this._parseTimeOrLabel(t.substr(0,o-1),0,n):this.duration()}return Number(t)+i},g.seek=function(e,t){return this.totalTime("number"==typeof e?e:this._parseTimeOrLabel(e),t!==!1)},g.stop=function(){return this.paused(!0)},g.gotoAndPlay=function(e,t){return this.play(e,t)},g.gotoAndStop=function(e,t){return this.pause(e,t)},g.render=function(e,t,i){this._gc&&this._enabled(!0,!1);var n,o,s,a,h,d=this._dirty?this.totalDuration():this._totalDuration,f=this._time,p=this._startTime,g=this._timeScale,m=this._paused;if(e>=d?(this._totalTime=this._time=d,this._reversed||this._hasPausedChild()||(o=!0,a="onComplete",0===this._duration&&(0===e||0>this._rawPrevTime||this._rawPrevTime===r)&&this._rawPrevTime!==e&&this._first&&(h=!0,this._rawPrevTime>r&&(a="onReverseComplete"))),this._rawPrevTime=this._duration||!t||e||this._rawPrevTime===e?e:r,e=d+1e-4):1e-7>e?(this._totalTime=this._time=0,(0!==f||0===this._duration&&this._rawPrevTime!==r&&(this._rawPrevTime>0||0>e&&this._rawPrevTime>=0))&&(a="onReverseComplete",o=this._reversed),0>e?(this._active=!1,this._rawPrevTime>=0&&this._first&&(h=!0),this._rawPrevTime=e):(this._rawPrevTime=this._duration||!t||e||this._rawPrevTime===e?e:r,e=0,this._initted||(h=!0))):this._totalTime=this._time=this._rawPrevTime=e,this._time!==f&&this._first||i||h){if(this._initted||(this._initted=!0),this._active||!this._paused&&this._time!==f&&e>0&&(this._active=!0),0===f&&this.vars.onStart&&0!==this._time&&(t||this.vars.onStart.apply(this.vars.onStartScope||this,this.vars.onStartParams||c)),this._time>=f)for(n=this._first;n&&(s=n._next,!this._paused||m);)(n._active||n._startTime<=this._time&&!n._paused&&!n._gc)&&(n._reversed?n.render((n._dirty?n.totalDuration():n._totalDuration)-(e-n._startTime)*n._timeScale,t,i):n.render((e-n._startTime)*n._timeScale,t,i)),n=s;else for(n=this._last;n&&(s=n._prev,!this._paused||m);)(n._active||f>=n._startTime&&!n._paused&&!n._gc)&&(n._reversed?n.render((n._dirty?n.totalDuration():n._totalDuration)-(e-n._startTime)*n._timeScale,t,i):n.render((e-n._startTime)*n._timeScale,t,i)),n=s;this._onUpdate&&(t||(l.length&&u(),this._onUpdate.apply(this.vars.onUpdateScope||this,this.vars.onUpdateParams||c))),a&&(this._gc||(p===this._startTime||g!==this._timeScale)&&(0===this._time||d>=this.totalDuration())&&(o&&(l.length&&u(),this._timeline.autoRemoveChildren&&this._enabled(!1,!1),this._active=!1),!t&&this.vars[a]&&this.vars[a].apply(this.vars[a+"Scope"]||this,this.vars[a+"Params"]||c)))}},g._hasPausedChild=function(){for(var e=this._first;e;){if(e._paused||e instanceof n&&e._hasPausedChild())return!0;e=e._next}return!1},g.getChildren=function(e,t,n,r){r=r||-9999999999;for(var o=[],s=this._first,a=0;s;)r>s._startTime||(s instanceof i?t!==!1&&(o[a++]=s):(n!==!1&&(o[a++]=s),e!==!1&&(o=o.concat(s.getChildren(!0,t,n)),a=o.length))),s=s._next;return o},g.getTweensOf=function(e,t){var n,r,o=this._gc,s=[],a=0;for(o&&this._enabled(!0,!0),n=i.getTweensOf(e),r=n.length;--r>-1;)(n[r].timeline===this||t&&this._contains(n[r]))&&(s[a++]=n[r]);return o&&this._enabled(!1,!0),s},g.recent=function(){return this._recent},g._contains=function(e){for(var t=e.timeline;t;){if(t===this)return!0;t=t.timeline}return!1},g.shiftChildren=function(e,t,i){i=i||0;for(var n,r=this._first,o=this._labels;r;)r._startTime>=i&&(r._startTime+=e),r=r._next;if(t)for(n in o)o[n]>=i&&(o[n]+=e);return this._uncache(!0)},g._kill=function(e,t){if(!e&&!t)return this._enabled(!1,!1);for(var i=t?this.getTweensOf(t):this.getChildren(!0,!0,!1),n=i.length,r=!1;--n>-1;)i[n]._kill(e,t)&&(r=!0);return r},g.clear=function(e){var t=this.getChildren(!1,!0,!0),i=t.length;for(this._time=this._totalTime=0;--i>-1;)t[i]._enabled(!1,!1);return e!==!1&&(this._labels={}),this._uncache(!0)},g.invalidate=function(){for(var t=this._first;t;)t.invalidate(),t=t._next;return e.prototype.invalidate.call(this)},g._enabled=function(e,i){if(e===this._gc)for(var n=this._first;n;)n._enabled(e,!0),n=n._next;return t.prototype._enabled.call(this,e,i)},g.totalTime=function(){this._forcingPlayhead=!0;var t=e.prototype.totalTime.apply(this,arguments);return this._forcingPlayhead=!1,t},g.duration=function(e){return arguments.length?(0!==this.duration()&&0!==e&&this.timeScale(this._duration/e),this):(this._dirty&&this.totalDuration(),this._duration)},g.totalDuration=function(e){if(!arguments.length){if(this._dirty){for(var t,i,n=0,r=this._last,o=999999999999;r;)t=r._prev,r._dirty&&r.totalDuration(),r._startTime>o&&this._sortChildren&&!r._paused?this.add(r,r._startTime-r._delay):o=r._startTime,0>r._startTime&&!r._paused&&(n-=r._startTime,this._timeline.smoothChildTiming&&(this._startTime+=r._startTime/this._timeScale),this.shiftChildren(-r._startTime,!1,-9999999999),o=0),i=r._startTime+r._totalDuration/r._timeScale,i>n&&(n=i),r=t;this._duration=this._totalDuration=n,this._dirty=!1}return this._totalDuration}return 0!==this.totalDuration()&&0!==e&&this.timeScale(this._totalDuration/e),this},g.usesFrames=function(){for(var t=this._timeline;t._timeline;)t=t._timeline;return t===e._rootFramesTimeline},g.rawTime=function(){return this._paused?this._totalTime:(this._timeline.rawTime()-this._startTime)*this._timeScale},n},!0)}),_gsScope._gsDefine&&_gsScope._gsQueue.pop()(),function(e){"use strict";var t=function(){return(_gsScope.GreenSockGlobals||_gsScope)[e]};"function"==typeof define&&define.amd?define(["TweenLite"],t):"undefined"!=typeof module&&module.exports&&(require("./TweenLite.js"),module.exports=t())}("TimelineMax");var _gsScope="undefined"!=typeof module&&module.exports&&"undefined"!=typeof global?global:this||window;(_gsScope._gsQueue||(_gsScope._gsQueue=[])).push(function(){"use strict";_gsScope._gsDefine("plugins.CSSPlugin",["plugins.TweenPlugin","TweenLite"],function(e,t){var i,n,r,o,s=function(){e.call(this,"css"),this._overwriteProps.length=0,this.setRatio=s.prototype.setRatio},a={},l=s.prototype=new e("css");l.constructor=s,s.version="1.14.2",s.API=2,s.defaultTransformPerspective=0,s.defaultSkewType="compensated",l="px",s.suffixMap={top:l,right:l,bottom:l,left:l,width:l,height:l,fontSize:l,padding:l,margin:l,perspective:l,lineHeight:""};var u,c,h,d,f,p,g=/(?:\d|\-\d|\.\d|\-\.\d)+/g,m=/(?:\d|\-\d|\.\d|\-\.\d|\+=\d|\-=\d|\+=.\d|\-=\.\d)+/g,_=/(?:\+=|\-=|\-|\b)[\d\-\.]+[a-zA-Z0-9]*(?:%|\b)/gi,v=/(?![+-]?\d*\.?\d+|e[+-]\d+)[^0-9]/g,y=/(?:\d|\-|\+|=|#|\.)*/g,b=/opacity *= *([^)]*)/i,x=/opacity:([^;]*)/i,w=/alpha\(opacity *=.+?\)/i,T=/^(rgb|hsl)/,k=/([A-Z])/g,S=/-([a-z])/gi,C=/(^(?:url\(\"|url\())|(?:(\"\))$|\)$)/gi,P=function(e,t){return t.toUpperCase()},A=/(?:Left|Right|Width)/i,O=/(M11|M12|M21|M22)=[\d\-\.e]+/gi,D=/progid\:DXImageTransform\.Microsoft\.Matrix\(.+?\)/i,M=/,(?=[^\)]*(?:\(|$))/gi,R=Math.PI/180,N=180/Math.PI,E={},L=document,j=L.createElement("div"),F=L.createElement("img"),I=s._internals={_specialProps:a},z=navigator.userAgent,X=function(){var e,t=z.indexOf("Android"),i=L.createElement("div");return h=-1!==z.indexOf("Safari")&&-1===z.indexOf("Chrome")&&(-1===t||Number(z.substr(t+8,1))>3),f=h&&6>Number(z.substr(z.indexOf("Version/")+8,1)),d=-1!==z.indexOf("Firefox"),(/MSIE ([0-9]{1,}[\.0-9]{0,})/.exec(z)||/Trident\/.*rv:([0-9]{1,}[\.0-9]{0,})/.exec(z))&&(p=parseFloat(RegExp.$1)),i.innerHTML="<a style='top:1px;opacity:.55;'>a</a>",e=i.getElementsByTagName("a")[0],e?/^0.55/.test(e.style.opacity):!1}(),B=function(e){return b.test("string"==typeof e?e:(e.currentStyle?e.currentStyle.filter:e.style.filter)||"")?parseFloat(RegExp.$1)/100:1},H=function(e){window.console&&console.log(e)},Y="",q="",W=function(e,t){t=t||j;var i,n,r=t.style;if(void 0!==r[e])return e;for(e=e.charAt(0).toUpperCase()+e.substr(1),i=["O","Moz","ms","Ms","Webkit"],n=5;--n>-1&&void 0===r[i[n]+e];);return n>=0?(q=3===n?"ms":i[n],Y="-"+q.toLowerCase()+"-",q+e):null},Q=L.defaultView?L.defaultView.getComputedStyle:function(){},U=s.getStyle=function(e,t,i,n,r){var o;return X||"opacity"!==t?(!n&&e.style[t]?o=e.style[t]:(i=i||Q(e))?o=i[t]||i.getPropertyValue(t)||i.getPropertyValue(t.replace(k,"-$1").toLowerCase()):e.currentStyle&&(o=e.currentStyle[t]),null==r||o&&"none"!==o&&"auto"!==o&&"auto auto"!==o?o:r):B(e)},$=I.convertToPixels=function(e,i,n,r,o){if("px"===r||!r)return n;if("auto"===r||!n)return 0;var a,l,u,c=A.test(i),h=e,d=j.style,f=0>n;if(f&&(n=-n),"%"===r&&-1!==i.indexOf("border"))a=n/100*(c?e.clientWidth:e.clientHeight);else{if(d.cssText="border:0 solid red;position:"+U(e,"position")+";line-height:0;","%"!==r&&h.appendChild)d[c?"borderLeftWidth":"borderTopWidth"]=n+r;else{if(h=e.parentNode||L.body,l=h._gsCache,u=t.ticker.frame,l&&c&&l.time===u)return l.width*n/100;d[c?"width":"height"]=n+r}h.appendChild(j),a=parseFloat(j[c?"offsetWidth":"offsetHeight"]),h.removeChild(j),c&&"%"===r&&s.cacheWidths!==!1&&(l=h._gsCache=h._gsCache||{},l.time=u,l.width=100*(a/n)),0!==a||o||(a=$(e,i,n,r,!0))}return f?-a:a},V=I.calculateOffset=function(e,t,i){if("absolute"!==U(e,"position",i))return 0;var n="left"===t?"Left":"Top",r=U(e,"margin"+n,i);return e["offset"+n]-($(e,t,parseFloat(r),r.replace(y,""))||0)},Z=function(e,t){var i,n,r={};if(t=t||Q(e,null))if(i=t.length)for(;--i>-1;)r[t[i].replace(S,P)]=t.getPropertyValue(t[i]);else for(i in t)r[i]=t[i];else if(t=e.currentStyle||e.style)for(i in t)"string"==typeof i&&void 0===r[i]&&(r[i.replace(S,P)]=t[i]);return X||(r.opacity=B(e)),n=Dt(e,t,!1),r.rotation=n.rotation,r.skewX=n.skewX,r.scaleX=n.scaleX,r.scaleY=n.scaleY,r.x=n.x,r.y=n.y,Tt&&(r.z=n.z,r.rotationX=n.rotationX,r.rotationY=n.rotationY,r.scaleZ=n.scaleZ),r.filters&&delete r.filters,r},G=function(e,t,i,n,r){var o,s,a,l={},u=e.style;for(s in i)"cssText"!==s&&"length"!==s&&isNaN(s)&&(t[s]!==(o=i[s])||r&&r[s])&&-1===s.indexOf("Origin")&&("number"==typeof o||"string"==typeof o)&&(l[s]="auto"!==o||"left"!==s&&"top"!==s?""!==o&&"auto"!==o&&"none"!==o||"string"!=typeof t[s]||""===t[s].replace(v,"")?o:0:V(e,s),void 0!==u[s]&&(a=new ht(u,s,u[s],a)));if(n)for(s in n)"className"!==s&&(l[s]=n[s]);return{difs:l,firstMPT:a}},J={width:["Left","Right"],height:["Top","Bottom"]},K=["marginLeft","marginRight","marginTop","marginBottom"],et=function(e,t,i){var n=parseFloat("width"===t?e.offsetWidth:e.offsetHeight),r=J[t],o=r.length;for(i=i||Q(e,null);--o>-1;)n-=parseFloat(U(e,"padding"+r[o],i,!0))||0,n-=parseFloat(U(e,"border"+r[o]+"Width",i,!0))||0;return n},tt=function(e,t){(null==e||""===e||"auto"===e||"auto auto"===e)&&(e="0 0");var i=e.split(" "),n=-1!==e.indexOf("left")?"0%":-1!==e.indexOf("right")?"100%":i[0],r=-1!==e.indexOf("top")?"0%":-1!==e.indexOf("bottom")?"100%":i[1];return null==r?r="0":"center"===r&&(r="50%"),("center"===n||isNaN(parseFloat(n))&&-1===(n+"").indexOf("="))&&(n="50%"),t&&(t.oxp=-1!==n.indexOf("%"),t.oyp=-1!==r.indexOf("%"),t.oxr="="===n.charAt(1),t.oyr="="===r.charAt(1),t.ox=parseFloat(n.replace(v,"")),t.oy=parseFloat(r.replace(v,""))),n+" "+r+(i.length>2?" "+i[2]:"")},it=function(e,t){return"string"==typeof e&&"="===e.charAt(1)?parseInt(e.charAt(0)+"1",10)*parseFloat(e.substr(2)):parseFloat(e)-parseFloat(t)},nt=function(e,t){return null==e?t:"string"==typeof e&&"="===e.charAt(1)?parseInt(e.charAt(0)+"1",10)*parseFloat(e.substr(2))+t:parseFloat(e)},rt=function(e,t,i,n){var r,o,s,a,l=1e-6;return null==e?a=t:"number"==typeof e?a=e:(r=360,o=e.split("_"),s=Number(o[0].replace(v,""))*(-1===e.indexOf("rad")?1:N)-("="===e.charAt(1)?0:t),o.length&&(n&&(n[i]=t+s),-1!==e.indexOf("short")&&(s%=r,s!==s%(r/2)&&(s=0>s?s+r:s-r)),-1!==e.indexOf("_cw")&&0>s?s=(s+9999999999*r)%r-(0|s/r)*r:-1!==e.indexOf("ccw")&&s>0&&(s=(s-9999999999*r)%r-(0|s/r)*r)),a=t+s),l>a&&a>-l&&(a=0),a},ot={aqua:[0,255,255],lime:[0,255,0],silver:[192,192,192],black:[0,0,0],maroon:[128,0,0],teal:[0,128,128],blue:[0,0,255],navy:[0,0,128],white:[255,255,255],fuchsia:[255,0,255],olive:[128,128,0],yellow:[255,255,0],orange:[255,165,0],gray:[128,128,128],purple:[128,0,128],green:[0,128,0],red:[255,0,0],pink:[255,192,203],cyan:[0,255,255],transparent:[255,255,255,0]},st=function(e,t,i){return e=0>e?e+1:e>1?e-1:e,0|255*(1>6*e?t+6*(i-t)*e:.5>e?i:2>3*e?t+6*(i-t)*(2/3-e):t)+.5},at=s.parseColor=function(e){var t,i,n,r,o,s;return e&&""!==e?"number"==typeof e?[e>>16,255&e>>8,255&e]:(","===e.charAt(e.length-1)&&(e=e.substr(0,e.length-1)),ot[e]?ot[e]:"#"===e.charAt(0)?(4===e.length&&(t=e.charAt(1),i=e.charAt(2),n=e.charAt(3),e="#"+t+t+i+i+n+n),e=parseInt(e.substr(1),16),[e>>16,255&e>>8,255&e]):"hsl"===e.substr(0,3)?(e=e.match(g),r=Number(e[0])%360/360,o=Number(e[1])/100,s=Number(e[2])/100,i=.5>=s?s*(o+1):s+o-s*o,t=2*s-i,e.length>3&&(e[3]=Number(e[3])),e[0]=st(r+1/3,t,i),e[1]=st(r,t,i),e[2]=st(r-1/3,t,i),e):(e=e.match(g)||ot.transparent,e[0]=Number(e[0]),e[1]=Number(e[1]),e[2]=Number(e[2]),e.length>3&&(e[3]=Number(e[3])),e)):ot.black},lt="(?:\\b(?:(?:rgb|rgba|hsl|hsla)\\(.+?\\))|\\B#.+?\\b";for(l in ot)lt+="|"+l+"\\b";lt=RegExp(lt+")","gi");var ut=function(e,t,i,n){if(null==e)return function(e){return e};var r,o=t?(e.match(lt)||[""])[0]:"",s=e.split(o).join("").match(_)||[],a=e.substr(0,e.indexOf(s[0])),l=")"===e.charAt(e.length-1)?")":"",u=-1!==e.indexOf(" ")?" ":",",c=s.length,h=c>0?s[0].replace(g,""):"";return c?r=t?function(e){var t,d,f,p;if("number"==typeof e)e+=h;else if(n&&M.test(e)){for(p=e.replace(M,"|").split("|"),f=0;p.length>f;f++)p[f]=r(p[f]);return p.join(",")}if(t=(e.match(lt)||[o])[0],d=e.split(t).join("").match(_)||[],f=d.length,c>f--)for(;c>++f;)d[f]=i?d[0|(f-1)/2]:s[f];return a+d.join(u)+u+t+l+(-1!==e.indexOf("inset")?" inset":"")}:function(e){var t,o,d;if("number"==typeof e)e+=h;else if(n&&M.test(e)){for(o=e.replace(M,"|").split("|"),d=0;o.length>d;d++)o[d]=r(o[d]);return o.join(",")}if(t=e.match(_)||[],d=t.length,c>d--)for(;c>++d;)t[d]=i?t[0|(d-1)/2]:s[d];return a+t.join(u)+l}:function(e){return e}},ct=function(e){return e=e.split(","),function(t,i,n,r,o,s,a){var l,u=(i+"").split(" ");for(a={},l=0;4>l;l++)a[e[l]]=u[l]=u[l]||u[(l-1)/2>>0];return r.parse(t,a,o,s)}},ht=(I._setPluginRatio=function(e){this.plugin.setRatio(e);for(var t,i,n,r,o=this.data,s=o.proxy,a=o.firstMPT,l=1e-6;a;)t=s[a.v],a.r?t=Math.round(t):l>t&&t>-l&&(t=0),a.t[a.p]=t,a=a._next;if(o.autoRotate&&(o.autoRotate.rotation=s.rotation),1===e)for(a=o.firstMPT;a;){if(i=a.t,i.type){if(1===i.type){for(r=i.xs0+i.s+i.xs1,n=1;i.l>n;n++)r+=i["xn"+n]+i["xs"+(n+1)];i.e=r}}else i.e=i.s+i.xs0;a=a._next}},function(e,t,i,n,r){this.t=e,this.p=t,this.v=i,this.r=r,n&&(n._prev=this,this._next=n)}),dt=(I._parseToProxy=function(e,t,i,n,r,o){var s,a,l,u,c,h=n,d={},f={},p=i._transform,g=E;for(i._transform=null,E=t,n=c=i.parse(e,t,n,r),E=g,o&&(i._transform=p,h&&(h._prev=null,h._prev&&(h._prev._next=null)));n&&n!==h;){if(1>=n.type&&(a=n.p,f[a]=n.s+n.c,d[a]=n.s,o||(u=new ht(n,"s",a,u,n.r),n.c=0),1===n.type))for(s=n.l;--s>0;)l="xn"+s,a=n.p+"_"+l,f[a]=n.data[l],d[a]=n[l],o||(u=new ht(n,l,a,u,n.rxp[l]));n=n._next}return{proxy:d,end:f,firstMPT:u,pt:c}},I.CSSPropTween=function(e,t,n,r,s,a,l,u,c,h,d){this.t=e,this.p=t,this.s=n,this.c=r,this.n=l||t,e instanceof dt||o.push(this.n),this.r=u,this.type=a||0,c&&(this.pr=c,i=!0),this.b=void 0===h?n:h,this.e=void 0===d?n+r:d,s&&(this._next=s,s._prev=this)}),ft=s.parseComplex=function(e,t,i,n,r,o,s,a,l,c){i=i||o||"",s=new dt(e,t,0,0,s,c?2:1,null,!1,a,i,n),n+="";var h,d,f,p,_,v,y,b,x,w,k,S,C=i.split(", ").join(",").split(" "),P=n.split(", ").join(",").split(" "),A=C.length,O=u!==!1;for((-1!==n.indexOf(",")||-1!==i.indexOf(","))&&(C=C.join(" ").replace(M,", ").split(" "),P=P.join(" ").replace(M,", ").split(" "),A=C.length),A!==P.length&&(C=(o||"").split(" "),A=C.length),s.plugin=l,s.setRatio=c,h=0;A>h;h++)if(p=C[h],_=P[h],b=parseFloat(p),b||0===b)s.appendXtra("",b,it(_,b),_.replace(m,""),O&&-1!==_.indexOf("px"),!0);else if(r&&("#"===p.charAt(0)||ot[p]||T.test(p)))S=","===_.charAt(_.length-1)?"),":")",p=at(p),_=at(_),x=p.length+_.length>6,x&&!X&&0===_[3]?(s["xs"+s.l]+=s.l?" transparent":"transparent",s.e=s.e.split(P[h]).join("transparent")):(X||(x=!1),s.appendXtra(x?"rgba(":"rgb(",p[0],_[0]-p[0],",",!0,!0).appendXtra("",p[1],_[1]-p[1],",",!0).appendXtra("",p[2],_[2]-p[2],x?",":S,!0),x&&(p=4>p.length?1:p[3],s.appendXtra("",p,(4>_.length?1:_[3])-p,S,!1)));else if(v=p.match(g)){if(y=_.match(m),!y||y.length!==v.length)return s;for(f=0,d=0;v.length>d;d++)k=v[d],w=p.indexOf(k,f),s.appendXtra(p.substr(f,w-f),Number(k),it(y[d],k),"",O&&"px"===p.substr(w+k.length,2),0===d),f=w+k.length;s["xs"+s.l]+=p.substr(f)}else s["xs"+s.l]+=s.l?" "+p:p;if(-1!==n.indexOf("=")&&s.data){for(S=s.xs0+s.data.s,h=1;s.l>h;h++)S+=s["xs"+h]+s.data["xn"+h];s.e=S+s["xs"+h]}return s.l||(s.type=-1,s.xs0=s.e),s.xfirst||s},pt=9;for(l=dt.prototype,l.l=l.pr=0;--pt>0;)l["xn"+pt]=0,l["xs"+pt]="";l.xs0="",l._next=l._prev=l.xfirst=l.data=l.plugin=l.setRatio=l.rxp=null,l.appendXtra=function(e,t,i,n,r,o){var s=this,a=s.l;return s["xs"+a]+=o&&a?" "+e:e||"",i||0===a||s.plugin?(s.l++,s.type=s.setRatio?2:1,s["xs"+s.l]=n||"",a>0?(s.data["xn"+a]=t+i,s.rxp["xn"+a]=r,s["xn"+a]=t,s.plugin||(s.xfirst=new dt(s,"xn"+a,t,i,s.xfirst||s,0,s.n,r,s.pr),s.xfirst.xs0=0),s):(s.data={s:t+i},s.rxp={},s.s=t,s.c=i,s.r=r,s)):(s["xs"+a]+=t+(n||""),s)};var gt=function(e,t){t=t||{},this.p=t.prefix?W(e)||e:e,a[e]=a[this.p]=this,this.format=t.formatter||ut(t.defaultValue,t.color,t.collapsible,t.multi),t.parser&&(this.parse=t.parser),this.clrs=t.color,this.multi=t.multi,this.keyword=t.keyword,this.dflt=t.defaultValue,this.pr=t.priority||0},mt=I._registerComplexSpecialProp=function(e,t,i){"object"!=typeof t&&(t={parser:i});var n,r,o=e.split(","),s=t.defaultValue;for(i=i||[s],n=0;o.length>n;n++)t.prefix=0===n&&t.prefix,t.defaultValue=i[n]||s,r=new gt(o[n],t)},_t=function(e){if(!a[e]){var t=e.charAt(0).toUpperCase()+e.substr(1)+"Plugin";mt(e,{parser:function(e,i,n,r,o,s,l){var u=(_gsScope.GreenSockGlobals||_gsScope).com.greensock.plugins[t];return u?(u._cssRegister(),a[n].parse(e,i,n,r,o,s,l)):(H("Error: "+t+" js file not loaded."),o)}})}};l=gt.prototype,l.parseComplex=function(e,t,i,n,r,o){var s,a,l,u,c,h,d=this.keyword;if(this.multi&&(M.test(i)||M.test(t)?(a=t.replace(M,"|").split("|"),l=i.replace(M,"|").split("|")):d&&(a=[t],l=[i])),l){for(u=l.length>a.length?l.length:a.length,s=0;u>s;s++)t=a[s]=a[s]||this.dflt,i=l[s]=l[s]||this.dflt,d&&(c=t.indexOf(d),h=i.indexOf(d),c!==h&&(i=-1===h?l:a,i[s]+=" "+d));t=a.join(", "),i=l.join(", ")}return ft(e,this.p,t,i,this.clrs,this.dflt,n,this.pr,r,o)},l.parse=function(e,t,i,n,o,s){return this.parseComplex(e.style,this.format(U(e,this.p,r,!1,this.dflt)),this.format(t),o,s)},s.registerSpecialProp=function(e,t,i){mt(e,{parser:function(e,n,r,o,s,a){var l=new dt(e,r,0,0,s,2,r,!1,i);return l.plugin=a,l.setRatio=t(e,n,o._tween,r),l},priority:i})};var vt,yt="scaleX,scaleY,scaleZ,x,y,z,skewX,skewY,rotation,rotationX,rotationY,perspective,xPercent,yPercent".split(","),bt=W("transform"),xt=Y+"transform",wt=W("transformOrigin"),Tt=null!==W("perspective"),kt=I.Transform=function(){this.skewY=0},St=window.SVGElement,Ct=function(e,t,i){var n,r=L.createElementNS("http://www.w3.org/2000/svg",e),o=/([a-z])([A-Z])/g;for(n in i)r.setAttributeNS(null,n.replace(o,"$1-$2").toLowerCase(),i[n]);return t.appendChild(r),r},Pt=document.documentElement,At=function(){var e,t,i,n=p||/Android/i.test(z)&&!window.chrome;return L.createElementNS&&!n&&(e=Ct("svg",Pt),t=Ct("rect",e,{width:100,height:50,x:100}),i=t.getBoundingClientRect().left,t.style[wt]="50% 50%",t.style[bt]="scale(0.5,0.5)",n=i===t.getBoundingClientRect().left,Pt.removeChild(e)),n}(),Ot=function(e,t,i){var n=e.getBBox();t=tt(t).split(" "),i.xOrigin=(-1!==t[0].indexOf("%")?parseFloat(t[0])/100*n.width:parseFloat(t[0]))+n.x,i.yOrigin=(-1!==t[1].indexOf("%")?parseFloat(t[1])/100*n.height:parseFloat(t[1]))+n.y},Dt=I.getTransform=function(e,t,i,n){if(e._gsTransform&&i&&!n)return e._gsTransform;var o,a,l,u,c,h,d,f,p,g,m,_,v,y=i?e._gsTransform||new kt:new kt,b=0>y.scaleX,x=2e-5,w=1e5,T=179.99,k=T*R,S=Tt?parseFloat(U(e,wt,t,!1,"0 0 0").split(" ")[2])||y.zOrigin||0:0,C=parseFloat(s.defaultTransformPerspective)||0;if(bt?o=U(e,xt,t,!0):e.currentStyle&&(o=e.currentStyle.filter.match(O),o=o&&4===o.length?[o[0].substr(4),Number(o[2].substr(4)),Number(o[1].substr(4)),o[3].substr(4),y.x||0,y.y||0].join(","):""),o&&"none"!==o&&"matrix(1, 0, 0, 1, 0, 0)"!==o){for(a=(o||"").match(/(?:\-|\b)[\d\-\.e]+\b/gi)||[],l=a.length;--l>-1;)u=Number(a[l]),a[l]=(c=u-(u|=0))?(0|c*w+(0>c?-.5:.5))/w+u:u;if(16===a.length){var P=a[8],A=a[9],D=a[10],M=a[12],E=a[13],L=a[14];if(y.zOrigin&&(L=-y.zOrigin,M=P*L-a[12],E=A*L-a[13],L=D*L+y.zOrigin-a[14]),!i||n||null==y.rotationX){var j,F,I,z,X,B,H,Y=a[0],q=a[1],W=a[2],Q=a[3],$=a[4],V=a[5],Z=a[6],G=a[7],J=a[11],K=Math.atan2(Z,D),et=-k>K||K>k;y.rotationX=K*N,K&&(z=Math.cos(-K),X=Math.sin(-K),j=$*z+P*X,F=V*z+A*X,I=Z*z+D*X,P=$*-X+P*z,A=V*-X+A*z,D=Z*-X+D*z,J=G*-X+J*z,$=j,V=F,Z=I),K=Math.atan2(P,Y),y.rotationY=K*N,K&&(B=-k>K||K>k,z=Math.cos(-K),X=Math.sin(-K),j=Y*z-P*X,F=q*z-A*X,I=W*z-D*X,A=q*X+A*z,D=W*X+D*z,J=Q*X+J*z,Y=j,q=F,W=I),K=Math.atan2(q,V),y.rotation=K*N,K&&(H=-k>K||K>k,z=Math.cos(-K),X=Math.sin(-K),Y=Y*z+$*X,F=q*z+V*X,V=q*-X+V*z,Z=W*-X+Z*z,q=F),H&&et?y.rotation=y.rotationX=0:H&&B?y.rotation=y.rotationY=0:B&&et&&(y.rotationY=y.rotationX=0),y.scaleX=(0|Math.sqrt(Y*Y+q*q)*w+.5)/w,y.scaleY=(0|Math.sqrt(V*V+A*A)*w+.5)/w,y.scaleZ=(0|Math.sqrt(Z*Z+D*D)*w+.5)/w,y.skewX=0,y.perspective=J?1/(0>J?-J:J):0,y.x=M,y.y=E,y.z=L}}else if(!(Tt&&!n&&a.length&&y.x===a[4]&&y.y===a[5]&&(y.rotationX||y.rotationY)||void 0!==y.x&&"none"===U(e,"display",t))){var tt=a.length>=6,it=tt?a[0]:1,nt=a[1]||0,rt=a[2]||0,ot=tt?a[3]:1;y.x=a[4]||0,y.y=a[5]||0,h=Math.sqrt(it*it+nt*nt),d=Math.sqrt(ot*ot+rt*rt),f=it||nt?Math.atan2(nt,it)*N:y.rotation||0,p=rt||ot?Math.atan2(rt,ot)*N+f:y.skewX||0,g=h-Math.abs(y.scaleX||0),m=d-Math.abs(y.scaleY||0),Math.abs(p)>90&&270>Math.abs(p)&&(b?(h*=-1,p+=0>=f?180:-180,f+=0>=f?180:-180):(d*=-1,p+=0>=p?180:-180)),_=(f-y.rotation)%180,v=(p-y.skewX)%180,(void 0===y.skewX||g>x||-x>g||m>x||-x>m||_>-T&&T>_&&!1|_*w||v>-T&&T>v&&!1|v*w)&&(y.scaleX=h,y.scaleY=d,y.rotation=f,y.skewX=p),Tt&&(y.rotationX=y.rotationY=y.z=0,y.perspective=C,y.scaleZ=1)}y.zOrigin=S;for(l in y)x>y[l]&&y[l]>-x&&(y[l]=0)}else y={x:0,y:0,z:0,scaleX:1,scaleY:1,scaleZ:1,skewX:0,skewY:0,perspective:C,rotation:0,rotationX:0,rotationY:0,zOrigin:0};return i&&(e._gsTransform=y),y.svg=St&&e instanceof St&&e.parentNode instanceof St,y.svg&&(Ot(e,U(e,wt,r,!1,"50% 50%")+"",y),vt=s.useSVGTransformAttr||At),y.xPercent=y.yPercent=0,y},Mt=function(e){var t,i,n=this.data,r=-n.rotation*R,o=r+n.skewX*R,s=1e5,a=(0|Math.cos(r)*n.scaleX*s)/s,l=(0|Math.sin(r)*n.scaleX*s)/s,u=(0|Math.sin(o)*-n.scaleY*s)/s,c=(0|Math.cos(o)*n.scaleY*s)/s,h=this.t.style,d=this.t.currentStyle;if(d){i=l,l=-u,u=-i,t=d.filter,h.filter="";var f,g,m=this.t.offsetWidth,_=this.t.offsetHeight,v="absolute"!==d.position,x="progid:DXImageTransform.Microsoft.Matrix(M11="+a+", M12="+l+", M21="+u+", M22="+c,w=n.x+m*n.xPercent/100,T=n.y+_*n.yPercent/100;if(null!=n.ox&&(f=(n.oxp?.01*m*n.ox:n.ox)-m/2,g=(n.oyp?.01*_*n.oy:n.oy)-_/2,w+=f-(f*a+g*l),T+=g-(f*u+g*c)),v?(f=m/2,g=_/2,x+=", Dx="+(f-(f*a+g*l)+w)+", Dy="+(g-(f*u+g*c)+T)+")"):x+=", sizingMethod='auto expand')",h.filter=-1!==t.indexOf("DXImageTransform.Microsoft.Matrix(")?t.replace(D,x):x+" "+t,(0===e||1===e)&&1===a&&0===l&&0===u&&1===c&&(v&&-1===x.indexOf("Dx=0, Dy=0")||b.test(t)&&100!==parseFloat(RegExp.$1)||-1===t.indexOf("gradient("&&t.indexOf("Alpha"))&&h.removeAttribute("filter")),!v){var k,S,C,P=8>p?1:-1;for(f=n.ieOffsetX||0,g=n.ieOffsetY||0,n.ieOffsetX=Math.round((m-((0>a?-a:a)*m+(0>l?-l:l)*_))/2+w),n.ieOffsetY=Math.round((_-((0>c?-c:c)*_+(0>u?-u:u)*m))/2+T),pt=0;4>pt;pt++)S=K[pt],k=d[S],i=-1!==k.indexOf("px")?parseFloat(k):$(this.t,S,parseFloat(k),k.replace(y,""))||0,C=i!==n[S]?2>pt?-n.ieOffsetX:-n.ieOffsetY:2>pt?f-n.ieOffsetX:g-n.ieOffsetY,h[S]=(n[S]=Math.round(i-C*(0===pt||2===pt?1:P)))+"px"}}},Rt=I.set3DTransformRatio=function(e){var t,i,n,r,o,s,a,l,u,c,h,f,p,g,m,_,v,y,b,x,w,T,k,S=this.data,C=this.t.style,P=S.rotation*R,A=S.scaleX,O=S.scaleY,D=S.scaleZ,M=S.x,N=S.y,E=S.z,L=S.perspective;if(!(1!==e&&0!==e||"auto"!==S.force3D||S.rotationY||S.rotationX||1!==D||L||E))return void Nt.call(this,e);if(d){var j=1e-4;j>A&&A>-j&&(A=D=2e-5),j>O&&O>-j&&(O=D=2e-5),!L||S.z||S.rotationX||S.rotationY||(L=0)}if(P||S.skewX)y=Math.cos(P),b=Math.sin(P),t=y,o=b,S.skewX&&(P-=S.skewX*R,y=Math.cos(P),b=Math.sin(P),"simple"===S.skewType&&(x=Math.tan(S.skewX*R),x=Math.sqrt(1+x*x),y*=x,b*=x)),i=-b,s=y;else{if(!(S.rotationY||S.rotationX||1!==D||L||S.svg))return void(C[bt]=(S.xPercent||S.yPercent?"translate("+S.xPercent+"%,"+S.yPercent+"%) translate3d(":"translate3d(")+M+"px,"+N+"px,"+E+"px)"+(1!==A||1!==O?" scale("+A+","+O+")":""));t=s=1,i=o=0}h=1,n=r=a=l=u=c=f=p=g=0,m=L?-1/L:0,_=S.zOrigin,v=1e5,P=S.rotationY*R,P&&(y=Math.cos(P),b=Math.sin(P),u=h*-b,p=m*-b,n=t*b,a=o*b,h*=y,m*=y,t*=y,o*=y),P=S.rotationX*R,P&&(y=Math.cos(P),b=Math.sin(P),x=i*y+n*b,w=s*y+a*b,T=c*y+h*b,k=g*y+m*b,n=i*-b+n*y,a=s*-b+a*y,h=c*-b+h*y,m=g*-b+m*y,i=x,s=w,c=T,g=k),1!==D&&(n*=D,a*=D,h*=D,m*=D),1!==O&&(i*=O,s*=O,c*=O,g*=O),1!==A&&(t*=A,o*=A,u*=A,p*=A),_&&(f-=_,r=n*f,l=a*f,f=h*f+_),S.svg&&(r+=S.xOrigin-(S.xOrigin*t+S.yOrigin*i),l+=S.yOrigin-(S.xOrigin*o+S.yOrigin*s)),r=(x=(r+=M)-(r|=0))?(0|x*v+(0>x?-.5:.5))/v+r:r,l=(x=(l+=N)-(l|=0))?(0|x*v+(0>x?-.5:.5))/v+l:l,f=(x=(f+=E)-(f|=0))?(0|x*v+(0>x?-.5:.5))/v+f:f,C[bt]=(S.xPercent||S.yPercent?"translate("+S.xPercent+"%,"+S.yPercent+"%) matrix3d(":"matrix3d(")+[(0|t*v)/v,(0|o*v)/v,(0|u*v)/v,(0|p*v)/v,(0|i*v)/v,(0|s*v)/v,(0|c*v)/v,(0|g*v)/v,(0|n*v)/v,(0|a*v)/v,(0|h*v)/v,(0|m*v)/v,r,l,f,L?1+-f/L:1].join(",")+")"},Nt=I.set2DTransformRatio=function(e){var t,i,n,r,o,s,a,l,u,c,h,d=this.data,f=this.t,p=f.style,g=d.x,m=d.y;return!(d.rotationX||d.rotationY||d.z||d.force3D===!0||"auto"===d.force3D&&1!==e&&0!==e)||d.svg&&vt||!Tt?(r=d.scaleX,o=d.scaleY,void(d.rotation||d.skewX||d.svg?(t=d.rotation*R,i=t-d.skewX*R,n=1e5,s=Math.cos(t)*r,a=Math.sin(t)*r,l=Math.sin(i)*-o,u=Math.cos(i)*o,d.svg&&(g+=d.xOrigin-(d.xOrigin*s+d.yOrigin*l),m+=d.yOrigin-(d.xOrigin*a+d.yOrigin*u),h=1e-6,h>g&&g>-h&&(g=0),h>m&&m>-h&&(m=0)),c=(0|s*n)/n+","+(0|a*n)/n+","+(0|l*n)/n+","+(0|u*n)/n+","+g+","+m+")",d.svg&&vt?f.setAttribute("transform","matrix("+c):p[bt]=(d.xPercent||d.yPercent?"translate("+d.xPercent+"%,"+d.yPercent+"%) matrix(":"matrix(")+c):p[bt]=(d.xPercent||d.yPercent?"translate("+d.xPercent+"%,"+d.yPercent+"%) matrix(":"matrix(")+r+",0,0,"+o+","+g+","+m+")")):(this.setRatio=Rt,void Rt.call(this,e))};mt("transform,scale,scaleX,scaleY,scaleZ,x,y,z,rotation,rotationX,rotationY,rotationZ,skewX,skewY,shortRotation,shortRotationX,shortRotationY,shortRotationZ,transformOrigin,transformPerspective,directionalRotation,parseTransform,force3D,skewType,xPercent,yPercent",{parser:function(e,t,i,n,o,a,l){if(n._transform)return o;var u,c,h,d,f,p,g,m=n._transform=Dt(e,r,!0,l.parseTransform),_=e.style,v=1e-6,y=yt.length,b=l,x={};if("string"==typeof b.transform&&bt)h=j.style,h[bt]=b.transform,h.display="block",h.position="absolute",L.body.appendChild(j),u=Dt(j,null,!1),L.body.removeChild(j);else if("object"==typeof b){if(u={scaleX:nt(null!=b.scaleX?b.scaleX:b.scale,m.scaleX),scaleY:nt(null!=b.scaleY?b.scaleY:b.scale,m.scaleY),scaleZ:nt(b.scaleZ,m.scaleZ),x:nt(b.x,m.x),y:nt(b.y,m.y),z:nt(b.z,m.z),xPercent:nt(b.xPercent,m.xPercent),yPercent:nt(b.yPercent,m.yPercent),perspective:nt(b.transformPerspective,m.perspective)},g=b.directionalRotation,null!=g)if("object"==typeof g)for(h in g)b[h]=g[h];else b.rotation=g;"string"==typeof b.x&&-1!==b.x.indexOf("%")&&(u.x=0,u.xPercent=nt(b.x,m.xPercent)),"string"==typeof b.y&&-1!==b.y.indexOf("%")&&(u.y=0,u.yPercent=nt(b.y,m.yPercent)),u.rotation=rt("rotation"in b?b.rotation:"shortRotation"in b?b.shortRotation+"_short":"rotationZ"in b?b.rotationZ:m.rotation,m.rotation,"rotation",x),Tt&&(u.rotationX=rt("rotationX"in b?b.rotationX:"shortRotationX"in b?b.shortRotationX+"_short":m.rotationX||0,m.rotationX,"rotationX",x),u.rotationY=rt("rotationY"in b?b.rotationY:"shortRotationY"in b?b.shortRotationY+"_short":m.rotationY||0,m.rotationY,"rotationY",x)),u.skewX=null==b.skewX?m.skewX:rt(b.skewX,m.skewX),u.skewY=null==b.skewY?m.skewY:rt(b.skewY,m.skewY),(c=u.skewY-m.skewY)&&(u.skewX+=c,u.rotation+=c)}for(Tt&&null!=b.force3D&&(m.force3D=b.force3D,p=!0),m.skewType=b.skewType||m.skewType||s.defaultSkewType,f=m.force3D||m.z||m.rotationX||m.rotationY||u.z||u.rotationX||u.rotationY||u.perspective,f||null==b.scale||(u.scaleZ=1);--y>-1;)i=yt[y],d=u[i]-m[i],(d>v||-v>d||null!=b[i]||null!=E[i])&&(p=!0,o=new dt(m,i,m[i],d,o),i in x&&(o.e=x[i]),o.xs0=0,o.plugin=a,n._overwriteProps.push(o.n));return d=b.transformOrigin,d&&m.svg&&(Ot(e,d,u),o=new dt(m,"xOrigin",m.xOrigin,u.xOrigin-m.xOrigin,o,-1,"transformOrigin"),o.b=m.xOrigin,o.e=o.xs0=u.xOrigin,o=new dt(m,"yOrigin",m.yOrigin,u.yOrigin-m.yOrigin,o,-1,"transformOrigin"),o.b=m.yOrigin,o.e=o.xs0=u.yOrigin,d="0px 0px"),(d||Tt&&f&&m.zOrigin)&&(bt?(p=!0,i=wt,d=(d||U(e,i,r,!1,"50% 50%"))+"",o=new dt(_,i,0,0,o,-1,"transformOrigin"),o.b=_[i],o.plugin=a,Tt?(h=m.zOrigin,d=d.split(" "),m.zOrigin=(d.length>2&&(0===h||"0px"!==d[2])?parseFloat(d[2]):h)||0,o.xs0=o.e=d[0]+" "+(d[1]||"50%")+" 0px",o=new dt(m,"zOrigin",0,0,o,-1,o.n),o.b=h,o.xs0=o.e=m.zOrigin):o.xs0=o.e=d):tt(d+"",m)),p&&(n._transformType=m.svg&&vt||!f&&3!==this._transformType?2:3),o
},prefix:!0}),mt("boxShadow",{defaultValue:"0px 0px 0px 0px #999",prefix:!0,color:!0,multi:!0,keyword:"inset"}),mt("borderRadius",{defaultValue:"0px",parser:function(e,t,i,o,s){t=this.format(t);var a,l,u,c,h,d,f,p,g,m,_,v,y,b,x,w,T=["borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius"],k=e.style;for(g=parseFloat(e.offsetWidth),m=parseFloat(e.offsetHeight),a=t.split(" "),l=0;T.length>l;l++)this.p.indexOf("border")&&(T[l]=W(T[l])),h=c=U(e,T[l],r,!1,"0px"),-1!==h.indexOf(" ")&&(c=h.split(" "),h=c[0],c=c[1]),d=u=a[l],f=parseFloat(h),v=h.substr((f+"").length),y="="===d.charAt(1),y?(p=parseInt(d.charAt(0)+"1",10),d=d.substr(2),p*=parseFloat(d),_=d.substr((p+"").length-(0>p?1:0))||""):(p=parseFloat(d),_=d.substr((p+"").length)),""===_&&(_=n[i]||v),_!==v&&(b=$(e,"borderLeft",f,v),x=$(e,"borderTop",f,v),"%"===_?(h=100*(b/g)+"%",c=100*(x/m)+"%"):"em"===_?(w=$(e,"borderLeft",1,"em"),h=b/w+"em",c=x/w+"em"):(h=b+"px",c=x+"px"),y&&(d=parseFloat(h)+p+_,u=parseFloat(c)+p+_)),s=ft(k,T[l],h+" "+c,d+" "+u,!1,"0px",s);return s},prefix:!0,formatter:ut("0px 0px 0px 0px",!1,!0)}),mt("backgroundPosition",{defaultValue:"0 0",parser:function(e,t,i,n,o,s){var a,l,u,c,h,d,f="background-position",g=r||Q(e,null),m=this.format((g?p?g.getPropertyValue(f+"-x")+" "+g.getPropertyValue(f+"-y"):g.getPropertyValue(f):e.currentStyle.backgroundPositionX+" "+e.currentStyle.backgroundPositionY)||"0 0"),_=this.format(t);if(-1!==m.indexOf("%")!=(-1!==_.indexOf("%"))&&(d=U(e,"backgroundImage").replace(C,""),d&&"none"!==d)){for(a=m.split(" "),l=_.split(" "),F.setAttribute("src",d),u=2;--u>-1;)m=a[u],c=-1!==m.indexOf("%"),c!==(-1!==l[u].indexOf("%"))&&(h=0===u?e.offsetWidth-F.width:e.offsetHeight-F.height,a[u]=c?parseFloat(m)/100*h+"px":100*(parseFloat(m)/h)+"%");m=a.join(" ")}return this.parseComplex(e.style,m,_,o,s)},formatter:tt}),mt("backgroundSize",{defaultValue:"0 0",formatter:tt}),mt("perspective",{defaultValue:"0px",prefix:!0}),mt("perspectiveOrigin",{defaultValue:"50% 50%",prefix:!0}),mt("transformStyle",{prefix:!0}),mt("backfaceVisibility",{prefix:!0}),mt("userSelect",{prefix:!0}),mt("margin",{parser:ct("marginTop,marginRight,marginBottom,marginLeft")}),mt("padding",{parser:ct("paddingTop,paddingRight,paddingBottom,paddingLeft")}),mt("clip",{defaultValue:"rect(0px,0px,0px,0px)",parser:function(e,t,i,n,o,s){var a,l,u;return 9>p?(l=e.currentStyle,u=8>p?" ":",",a="rect("+l.clipTop+u+l.clipRight+u+l.clipBottom+u+l.clipLeft+")",t=this.format(t).split(",").join(u)):(a=this.format(U(e,this.p,r,!1,this.dflt)),t=this.format(t)),this.parseComplex(e.style,a,t,o,s)}}),mt("textShadow",{defaultValue:"0px 0px 0px #999",color:!0,multi:!0}),mt("autoRound,strictUnits",{parser:function(e,t,i,n,r){return r}}),mt("border",{defaultValue:"0px solid #000",parser:function(e,t,i,n,o,s){return this.parseComplex(e.style,this.format(U(e,"borderTopWidth",r,!1,"0px")+" "+U(e,"borderTopStyle",r,!1,"solid")+" "+U(e,"borderTopColor",r,!1,"#000")),this.format(t),o,s)},color:!0,formatter:function(e){var t=e.split(" ");return t[0]+" "+(t[1]||"solid")+" "+(e.match(lt)||["#000"])[0]}}),mt("borderWidth",{parser:ct("borderTopWidth,borderRightWidth,borderBottomWidth,borderLeftWidth")}),mt("float,cssFloat,styleFloat",{parser:function(e,t,i,n,r){var o=e.style,s="cssFloat"in o?"cssFloat":"styleFloat";return new dt(o,s,0,0,r,-1,i,!1,0,o[s],t)}});var Et=function(e){var t,i=this.t,n=i.filter||U(this.data,"filter")||"",r=0|this.s+this.c*e;100===r&&(-1===n.indexOf("atrix(")&&-1===n.indexOf("radient(")&&-1===n.indexOf("oader(")?(i.removeAttribute("filter"),t=!U(this.data,"filter")):(i.filter=n.replace(w,""),t=!0)),t||(this.xn1&&(i.filter=n=n||"alpha(opacity="+r+")"),-1===n.indexOf("pacity")?0===r&&this.xn1||(i.filter=n+" alpha(opacity="+r+")"):i.filter=n.replace(b,"opacity="+r))};mt("opacity,alpha,autoAlpha",{defaultValue:"1",parser:function(e,t,i,n,o,s){var a=parseFloat(U(e,"opacity",r,!1,"1")),l=e.style,u="autoAlpha"===i;return"string"==typeof t&&"="===t.charAt(1)&&(t=("-"===t.charAt(0)?-1:1)*parseFloat(t.substr(2))+a),u&&1===a&&"hidden"===U(e,"visibility",r)&&0!==t&&(a=0),X?o=new dt(l,"opacity",a,t-a,o):(o=new dt(l,"opacity",100*a,100*(t-a),o),o.xn1=u?1:0,l.zoom=1,o.type=2,o.b="alpha(opacity="+o.s+")",o.e="alpha(opacity="+(o.s+o.c)+")",o.data=e,o.plugin=s,o.setRatio=Et),u&&(o=new dt(l,"visibility",0,0,o,-1,null,!1,0,0!==a?"inherit":"hidden",0===t?"hidden":"inherit"),o.xs0="inherit",n._overwriteProps.push(o.n),n._overwriteProps.push(i)),o}});var Lt=function(e,t){t&&(e.removeProperty?("ms"===t.substr(0,2)&&(t="M"+t.substr(1)),e.removeProperty(t.replace(k,"-$1").toLowerCase())):e.removeAttribute(t))},jt=function(e){if(this.t._gsClassPT=this,1===e||0===e){this.t.setAttribute("class",0===e?this.b:this.e);for(var t=this.data,i=this.t.style;t;)t.v?i[t.p]=t.v:Lt(i,t.p),t=t._next;1===e&&this.t._gsClassPT===this&&(this.t._gsClassPT=null)}else this.t.getAttribute("class")!==this.e&&this.t.setAttribute("class",this.e)};mt("className",{parser:function(e,t,n,o,s,a,l){var u,c,h,d,f,p=e.getAttribute("class")||"",g=e.style.cssText;if(s=o._classNamePT=new dt(e,n,0,0,s,2),s.setRatio=jt,s.pr=-11,i=!0,s.b=p,c=Z(e,r),h=e._gsClassPT){for(d={},f=h.data;f;)d[f.p]=1,f=f._next;h.setRatio(1)}return e._gsClassPT=s,s.e="="!==t.charAt(1)?t:p.replace(RegExp("\\s*\\b"+t.substr(2)+"\\b"),"")+("+"===t.charAt(0)?" "+t.substr(2):""),o._tween._duration&&(e.setAttribute("class",s.e),u=G(e,c,Z(e),l,d),e.setAttribute("class",p),s.data=u.firstMPT,e.style.cssText=g,s=s.xfirst=o.parse(e,u.difs,s,a)),s}});var Ft=function(e){if((1===e||0===e)&&this.data._totalTime===this.data._totalDuration&&"isFromStart"!==this.data.data){var t,i,n,r,o=this.t.style,s=a.transform.parse;if("all"===this.e)o.cssText="",r=!0;else for(t=this.e.split(" ").join("").split(","),n=t.length;--n>-1;)i=t[n],a[i]&&(a[i].parse===s?r=!0:i="transformOrigin"===i?wt:a[i].p),Lt(o,i);r&&(Lt(o,bt),this.t._gsTransform&&delete this.t._gsTransform)}};for(mt("clearProps",{parser:function(e,t,n,r,o){return o=new dt(e,n,0,0,o,2),o.setRatio=Ft,o.e=t,o.pr=-10,o.data=r._tween,i=!0,o}}),l="bezier,throwProps,physicsProps,physics2D".split(","),pt=l.length;pt--;)_t(l[pt]);l=s.prototype,l._firstPT=null,l._onInitTween=function(e,t,a){if(!e.nodeType)return!1;this._target=e,this._tween=a,this._vars=t,u=t.autoRound,i=!1,n=t.suffixMap||s.suffixMap,r=Q(e,""),o=this._overwriteProps;var l,d,p,g,m,_,v,y,b,w=e.style;if(c&&""===w.zIndex&&(l=U(e,"zIndex",r),("auto"===l||""===l)&&this._addLazySet(w,"zIndex",0)),"string"==typeof t&&(g=w.cssText,l=Z(e,r),w.cssText=g+";"+t,l=G(e,l,Z(e)).difs,!X&&x.test(t)&&(l.opacity=parseFloat(RegExp.$1)),t=l,w.cssText=g),this._firstPT=d=this.parse(e,t,null),this._transformType){for(b=3===this._transformType,bt?h&&(c=!0,""===w.zIndex&&(v=U(e,"zIndex",r),("auto"===v||""===v)&&this._addLazySet(w,"zIndex",0)),f&&this._addLazySet(w,"WebkitBackfaceVisibility",this._vars.WebkitBackfaceVisibility||(b?"visible":"hidden"))):w.zoom=1,p=d;p&&p._next;)p=p._next;y=new dt(e,"transform",0,0,null,2),this._linkCSSP(y,null,p),y.setRatio=b&&Tt?Rt:bt?Nt:Mt,y.data=this._transform||Dt(e,r,!0),o.pop()}if(i){for(;d;){for(_=d._next,p=g;p&&p.pr>d.pr;)p=p._next;(d._prev=p?p._prev:m)?d._prev._next=d:g=d,(d._next=p)?p._prev=d:m=d,d=_}this._firstPT=g}return!0},l.parse=function(e,t,i,o){var s,l,c,h,d,f,p,g,m,_,v=e.style;for(s in t)f=t[s],l=a[s],l?i=l.parse(e,f,s,this,i,o,t):(d=U(e,s,r)+"",m="string"==typeof f,"color"===s||"fill"===s||"stroke"===s||-1!==s.indexOf("Color")||m&&T.test(f)?(m||(f=at(f),f=(f.length>3?"rgba(":"rgb(")+f.join(",")+")"),i=ft(v,s,d,f,!0,"transparent",i,0,o)):!m||-1===f.indexOf(" ")&&-1===f.indexOf(",")?(c=parseFloat(d),p=c||0===c?d.substr((c+"").length):"",(""===d||"auto"===d)&&("width"===s||"height"===s?(c=et(e,s,r),p="px"):"left"===s||"top"===s?(c=V(e,s,r),p="px"):(c="opacity"!==s?0:1,p="")),_=m&&"="===f.charAt(1),_?(h=parseInt(f.charAt(0)+"1",10),f=f.substr(2),h*=parseFloat(f),g=f.replace(y,"")):(h=parseFloat(f),g=m?f.substr((h+"").length)||"":""),""===g&&(g=s in n?n[s]:p),f=h||0===h?(_?h+c:h)+g:t[s],p!==g&&""!==g&&(h||0===h)&&c&&(c=$(e,s,c,p),"%"===g?(c/=$(e,s,100,"%")/100,t.strictUnits!==!0&&(d=c+"%")):"em"===g?c/=$(e,s,1,"em"):"px"!==g&&(h=$(e,s,h,g),g="px"),_&&(h||0===h)&&(f=h+c+g)),_&&(h+=c),!c&&0!==c||!h&&0!==h?void 0!==v[s]&&(f||"NaN"!=f+""&&null!=f)?(i=new dt(v,s,h||c||0,0,i,-1,s,!1,0,d,f),i.xs0="none"!==f||"display"!==s&&-1===s.indexOf("Style")?f:d):H("invalid "+s+" tween value: "+t[s]):(i=new dt(v,s,c,h-c,i,0,s,u!==!1&&("px"===g||"zIndex"===s),0,d,f),i.xs0=g)):i=ft(v,s,d,f,!0,null,i,0,o)),o&&i&&!i.plugin&&(i.plugin=o);return i},l.setRatio=function(e){var t,i,n,r=this._firstPT,o=1e-6;if(1!==e||this._tween._time!==this._tween._duration&&0!==this._tween._time)if(e||this._tween._time!==this._tween._duration&&0!==this._tween._time||this._tween._rawPrevTime===-1e-6)for(;r;){if(t=r.c*e+r.s,r.r?t=Math.round(t):o>t&&t>-o&&(t=0),r.type)if(1===r.type)if(n=r.l,2===n)r.t[r.p]=r.xs0+t+r.xs1+r.xn1+r.xs2;else if(3===n)r.t[r.p]=r.xs0+t+r.xs1+r.xn1+r.xs2+r.xn2+r.xs3;else if(4===n)r.t[r.p]=r.xs0+t+r.xs1+r.xn1+r.xs2+r.xn2+r.xs3+r.xn3+r.xs4;else if(5===n)r.t[r.p]=r.xs0+t+r.xs1+r.xn1+r.xs2+r.xn2+r.xs3+r.xn3+r.xs4+r.xn4+r.xs5;else{for(i=r.xs0+t+r.xs1,n=1;r.l>n;n++)i+=r["xn"+n]+r["xs"+(n+1)];r.t[r.p]=i}else-1===r.type?r.t[r.p]=r.xs0:r.setRatio&&r.setRatio(e);else r.t[r.p]=t+r.xs0;r=r._next}else for(;r;)2!==r.type?r.t[r.p]=r.b:r.setRatio(e),r=r._next;else for(;r;)2!==r.type?r.t[r.p]=r.e:r.setRatio(e),r=r._next},l._enableTransforms=function(e){this._transform=this._transform||Dt(this._target,r,!0),this._transformType=this._transform.svg&&vt||!e&&3!==this._transformType?2:3};var It=function(){this.t[this.p]=this.e,this.data._linkCSSP(this,this._next,null,!0)};l._addLazySet=function(e,t,i){var n=this._firstPT=new dt(e,t,0,0,this._firstPT,2);n.e=i,n.setRatio=It,n.data=this},l._linkCSSP=function(e,t,i,n){return e&&(t&&(t._prev=e),e._next&&(e._next._prev=e._prev),e._prev?e._prev._next=e._next:this._firstPT===e&&(this._firstPT=e._next,n=!0),i?i._next=e:n||null!==this._firstPT||(this._firstPT=e),e._next=t,e._prev=i),e},l._kill=function(t){var i,n,r,o=t;if(t.autoAlpha||t.alpha){o={};for(n in t)o[n]=t[n];o.opacity=1,o.autoAlpha&&(o.visibility=1)}return t.className&&(i=this._classNamePT)&&(r=i.xfirst,r&&r._prev?this._linkCSSP(r._prev,i._next,r._prev._prev):r===this._firstPT&&(this._firstPT=i._next),i._next&&this._linkCSSP(i._next,i._next._next,r._prev),this._classNamePT=null),e.prototype._kill.call(this,o)};var zt=function(e,t,i){var n,r,o,s;if(e.slice)for(r=e.length;--r>-1;)zt(e[r],t,i);else for(n=e.childNodes,r=n.length;--r>-1;)o=n[r],s=o.type,o.style&&(t.push(Z(o)),i&&i.push(o)),1!==s&&9!==s&&11!==s||!o.childNodes.length||zt(o,t,i)};return s.cascadeTo=function(e,i,n){var r,o,s,a=t.to(e,i,n),l=[a],u=[],c=[],h=[],d=t._internals.reservedProps;for(e=a._targets||a.target,zt(e,u,h),a.render(i,!0),zt(e,c),a.render(0,!0),a._enabled(!0),r=h.length;--r>-1;)if(o=G(h[r],u[r],c[r]),o.firstMPT){o=o.difs;for(s in n)d[s]&&(o[s]=n[s]);l.push(t.to(h[r],i,o))}return l},e.activate([s]),s},!0)}),_gsScope._gsDefine&&_gsScope._gsQueue.pop()(),function(e){"use strict";var t=function(){return(_gsScope.GreenSockGlobals||_gsScope)[e]};"function"==typeof define&&define.amd?define(["TweenLite"],t):"undefined"!=typeof module&&module.exports&&(require("../TweenLite.js"),module.exports=t())}("CSSPlugin"),(window._gsQueue||(window._gsQueue=[])).push(function(){"use strict";window._gsDefine("utils.Draggable",["events.EventDispatcher","TweenLite"],function(e,t){var i,n,r,o,s,a={css:{}},l={css:{}},u={css:{}},c={css:{}},h={},d=document,f=d.documentElement||{},p=[],g=function(){return!1},m=180/Math.PI,_=999999999999999,v=Date.now||function(){return(new Date).getTime()},y=d.all&&!d.addEventListener,b=[],x={},w=0,T=/^(?:a|input|textarea|button|select)$/i,k=0,S=0,C=function(){for(var e=b.length;--e>-1;)b[e]()},P=function(e){b.push(e),1===b.length&&t.ticker.addEventListener("tick",C,this,!1,1)},A=function(e){for(var i=b.length;--i>-1;)b[i]===e&&b.splice(i,1);t.to(O,0,{overwrite:"all",delay:15,onComplete:O})},O=function(){b.length||t.ticker.removeEventListener("tick",C)},D=function(e,t){var i;for(i in t)void 0===e[i]&&(e[i]=t[i]);return e},M=function(){return null!=window.pageYOffset?window.pageYOffset:null!=d.scrollTop?d.scrollTop:f.scrollTop||d.body.scrollTop||0},R=function(){return null!=window.pageXOffset?window.pageXOffset:null!=d.scrollLeft?d.scrollLeft:f.scrollLeft||d.body.scrollLeft||0},N=function(e,t){return e=e||window.event,h.pageX=e.clientX+d.body.scrollLeft+f.scrollLeft,h.pageY=e.clientY+d.body.scrollTop+f.scrollTop,t&&(e.returnValue=!1),h},E=function(e){return e?("string"==typeof e&&(e=t.selector(e)),e.length&&e!==window&&e[0]&&e[0].style&&!e.nodeType&&(e=e[0]),e===window||e.nodeType&&e.style?e:null):e},L=function(e,t){var n,r,o,s=e.style;if(void 0===s[t]){for(o=["O","Moz","ms","Ms","Webkit"],r=5,n=t.charAt(0).toUpperCase()+t.substr(1);--r>-1&&void 0===s[o[r]+n];);if(0>r)return"";i=3===r?"ms":o[r],t=i+n}return t},j=function(e,t,i){var n=e.style;void 0===n[t]&&(t=L(e,t)),null==i?n.removeProperty?n.removeProperty(t.replace(/([A-Z])/g,"-$1").toLowerCase()):n.removeAttribute(t):void 0!==n[t]&&(n[t]=i)},F=d.defaultView?d.defaultView.getComputedStyle:g,I=/(?:Left|Right|Width)/i,z=/(?:\d|\-|\+|=|#|\.)*/g,X=function(e,t,i,n,r){if("px"===n||!n)return i;if("auto"===n||!i)return 0;var o,s=I.test(t),a=e,l=W.style,u=0>i;return u&&(i=-i),"%"===n&&-1!==t.indexOf("border")?o=i/100*(s?e.clientWidth:e.clientHeight):(l.cssText="border:0 solid red;position:"+H(e,"position",!0)+";line-height:0;","%"!==n&&a.appendChild?l[s?"borderLeftWidth":"borderTopWidth"]=i+n:(a=e.parentNode||d.body,l[s?"width":"height"]=i+n),a.appendChild(W),o=parseFloat(W[s?"offsetWidth":"offsetHeight"]),a.removeChild(W),0!==o||r||(o=X(e,t,i,n,!0))),u?-o:o},B=function(e,t){if("absolute"!==H(e,"position",!0))return 0;var i="left"===t?"Left":"Top",n=H(e,"margin"+i,!0);return e["offset"+i]-(X(e,t,parseFloat(n),n.replace(z,""))||0)},H=function(e,t,i){var n,r=(e._gsTransform||{})[t];return r||0===r?r:(e.style[t]?r=e.style[t]:(n=F(e))?(r=n.getPropertyValue(t.replace(/([A-Z])/g,"-$1").toLowerCase()),r=r||n.length?r:n[t]):e.currentStyle&&(r=e.currentStyle[t]),"auto"!==r||"top"!==t&&"left"!==t||(r=B(e,t)),i?r:parseFloat(r)||0)},Y=function(e,t,i){var n=e.vars,r=n[i],o=e._listeners[t];"function"==typeof r&&r.apply(n[i+"Scope"]||e,n[i+"Params"]||[e.pointerEvent]),o&&e.dispatchEvent(t)},q=function(e,t){var i,n,r,o=E(e);return o?ot(o,t):void 0!==e.left?(r=et(t),{left:e.left-r.x,top:e.top-r.y,width:e.width,height:e.height}):(n=e.min||e.minX||e.minRotation||0,i=e.min||e.minY||0,{left:n,top:i,width:(e.max||e.maxX||e.maxRotation||0)-n,height:(e.max||e.maxY||0)-i})},W=d.createElement("div"),Q=""!==L(W,"perspective"),U=L(W,"transformOrigin").replace(/^ms/g,"Ms").replace(/([A-Z])/g,"-$1").toLowerCase(),$=L(W,"transform"),V=$.replace(/^ms/g,"Ms").replace(/([A-Z])/g,"-$1").toLowerCase(),Z={},G={},J=function(){if(!y){var e="http://www.w3.org/2000/svg",t=d.createElementNS(e,"svg"),i=d.createElementNS(e,"rect");return i.setAttributeNS(null,"width","10"),i.setAttributeNS(null,"height","10"),t.appendChild(i),t}}(),K=function(e){if(!e.getBoundingClientRect||!e.parentNode)return{offsetTop:0,offsetLeft:0,offsetParent:f};for(var t,i,n,r=e,o=e.style.cssText;!r.offsetParent&&r.parentNode;)r=r.parentNode;return e.parentNode.insertBefore(J,e),e.parentNode.removeChild(e),J.style.cssText=o,J.style[$]="none",J.setAttribute("class",e.getAttribute("class")),t=J.getBoundingClientRect(),n=r.offsetParent,n?(n===d.body&&f&&(n=f),i=n.getBoundingClientRect()):i={top:-M(),left:-R()},J.parentNode.insertBefore(e,J),e.parentNode.removeChild(J),{offsetLeft:t.left-i.left,offsetTop:t.top-i.top,offsetParent:r.offsetParent||f}},et=function(e,t){if(t=t||{},!e||e===f||!e.parentNode)return{x:0,y:0};var i=F(e),n=U&&i?i.getPropertyValue(U):"50% 50%",r=n.split(" "),o=-1!==n.indexOf("left")?"0%":-1!==n.indexOf("right")?"100%":r[0],s=-1!==n.indexOf("top")?"0%":-1!==n.indexOf("bottom")?"100%":r[1];return("center"===s||null==s)&&(s="50%"),("center"===o||isNaN(parseFloat(o)))&&(o="50%"),t.x=-1!==o.indexOf("%")?e.offsetWidth*parseFloat(o)/100:parseFloat(o),t.y=-1!==s.indexOf("%")?e.offsetHeight*parseFloat(s)/100:parseFloat(s),t},tt=function(e,t,i){var n,r,s,a,l,u;return e!==window&&e&&e.parentNode?(n=F(e),r=n?n.getPropertyValue(V):e.currentStyle?e.currentStyle[$]:"1,0,0,1,0,0",r=(r+"").match(/(?:\-|\b)[\d\-\.e]+\b/g)||[1,0,0,1,0,0],r.length>6&&(r=[r[0],r[1],r[4],r[5],r[12],r[13]]),t&&(s=e.parentNode,u=void 0===e.offsetLeft&&"svg"===e.nodeName.toLowerCase()?K(e):e,a=u.offsetParent,l=s===f||s===d.body,r[4]=Number(r[4])+t.x+(u.offsetLeft||0)-i.x-(l?0:s.scrollLeft)+(a?parseInt(H(a,"borderLeftWidth"),10)||0:0),r[5]=Number(r[5])+t.y+(u.offsetTop||0)-i.y-(l?0:s.scrollTop)+(a?parseInt(H(a,"borderTopWidth"),10)||0:0),a||"fixed"!==H(e,"position",n)||(r[4]+=R(),r[5]+=M()),void 0===o&&d.body&&$&&(o=function(){var e,t,i=d.createElement("div"),n=d.createElement("div");return n.style.position="absolute",d.body.appendChild(i),i.appendChild(n),e=n.offsetParent,i.style[$]="rotate(1deg)",t=n.offsetParent===e,d.body.removeChild(i),t}()),!s||s.offsetParent!==a||o&&"100100"!==tt(s).join("")||(r[4]-=s.offsetLeft||0,r[5]-=s.offsetTop||0)),r):[1,0,0,1,0,0]},it=function(e,t){for(var i,n,r,o,s,a,l,u,c=et(e,Z),h=et(e.parentNode,G),d=tt(e,c,h);(e=e.parentNode)&&e.parentNode&&e!==f;)c=h,h=et(e.parentNode,c===Z?G:Z),l=tt(e,c,h),i=d[0],n=d[1],r=d[2],o=d[3],s=d[4],a=d[5],d[0]=i*l[0]+n*l[2],d[1]=i*l[1]+n*l[3],d[2]=r*l[0]+o*l[2],d[3]=r*l[1]+o*l[3],d[4]=s*l[0]+a*l[2]+l[4],d[5]=s*l[1]+a*l[3]+l[5];return t&&(i=d[0],n=d[1],r=d[2],o=d[3],s=d[4],a=d[5],u=i*o-n*r,d[0]=o/u,d[1]=-n/u,d[2]=-r/u,d[3]=i/u,d[4]=(r*a-o*s)/u,d[5]=-(i*a-n*s)/u),d},nt=function(e,t,i){var n=it(e),r=t.x,o=t.y;return i=i===!0?t:i||{},i.x=r*n[0]+o*n[2]+n[4],i.y=r*n[1]+o*n[3]+n[5],i},rt=function(e,t,i){var n=e.x*t[0]+e.y*t[2]+t[4],r=e.x*t[1]+e.y*t[3]+t[5];return e.x=n*i[0]+r*i[2]+i[4],e.y=n*i[1]+r*i[3]+i[5],e},ot=function(e,t){var i,n,r,o,s,a,l,u,c,h,p;return e===window?(o=M(),n=R(),r=n+(f.clientWidth||e.innerWidth||d.body.clientWidth||0),s=o+((e.innerHeight||0)-20<f.clientHeight?f.clientHeight:e.innerHeight||d.body.clientHeight||0)):(i=et(e),n=-i.x,r=n+e.offsetWidth,o=-i.y,s=o+e.offsetHeight),e===t?{left:n,top:o,width:r-n,height:s-o}:(a=it(e),l=it(t,!0),u=rt({x:n,y:o},a,l),c=rt({x:r,y:o},a,l),h=rt({x:r,y:s},a,l),p=rt({x:n,y:s},a,l),n=Math.min(u.x,c.x,h.x,p.x),o=Math.min(u.y,c.y,h.y,p.y),{left:n,top:o,width:Math.max(u.x,c.x,h.x,p.x)-n,height:Math.max(u.y,c.y,h.y,p.y)-o})},st=function(e){return e.length&&e[0]&&(e[0].nodeType&&e[0].style&&!e.nodeType||e[0].length&&e[0][0])?!0:!1},at=function(e){var t,i,n,r=[],o=e.length;for(t=0;o>t;t++)if(i=e[t],st(i))for(n=i.length,n=0;n<i.length;n++)r.push(i[n]);else r.push(i);return r},lt="ontouchstart"in f&&"orientation"in window,ut=function(e){for(var t=e.split(","),i=(void 0!==W.onpointerdown?"pointerdown,pointermove,pointerup,pointercancel":void 0!==W.onmspointerdown?"MSPointerDown,MSPointerMove,MSPointerUp,MSPointerCancel":e).split(","),n={},r=7;--r>-1;)n[t[r]]=i[r],n[i[r]]=t[r];return n}("touchstart,touchmove,touchend,touchcancel"),ct=function(e,t,i){e.addEventListener?e.addEventListener(ut[t]||t,i,!1):e.attachEvent&&e.attachEvent("on"+t,i)},ht=function(e,t,i){e.removeEventListener?e.removeEventListener(ut[t]||t,i):e.detachEvent&&e.detachEvent("on"+t,i)},dt=function(e){n=e.touches&&k<e.touches.length,ht(e.target,"touchend",dt)},ft=function(e){n=e.touches&&k<e.touches.length,ct(e.target,"touchend",dt)},pt=function(e,t,i,n,r,o){var s,a,l,u={};if(t)if(1!==r&&t instanceof Array)for(u.end=s=[],l=t.length,a=0;l>a;a++)s[a]=t[a]*r;else u.end="function"==typeof t?function(i){return t.call(e,i)*r}:t;return(i||0===i)&&(u.max=i),(n||0===n)&&(u.min=n),o&&(u.velocity=0),u},gt=function(e){var t;return e&&e.getAttribute&&"BODY"!==e.nodeName?"true"===(t=e.getAttribute("data-clickable"))||"false"!==t&&(e.onclick||T.test(e.nodeName+""))?!0:gt(e.parentNode):!1},mt=function(){var e,t=d.createElement("div"),i=d.createElement("div"),n=i.style,r=d.body||W;return n.display="inline-block",n.position="relative",t.style.cssText=i.innerHTML="width:90px; height:40px; padding:10px; overflow:auto; visibility: hidden",t.appendChild(i),r.appendChild(t),s=i.offsetHeight+18>t.scrollHeight,n.width="100%",$||(n.paddingRight="500px",e=t.scrollLeft=t.scrollWidth-t.clientWidth,n.left="-90px",e=e!==t.scrollLeft),r.removeChild(t),e}(),_t=function(e,i){e=E(e),i=i||{};var n,r,o,a,l,u,c=d.createElement("div"),h=c.style,f=e.firstChild,p=0,g=0,m=e.scrollTop,_=e.scrollLeft,v=e.scrollWidth,b=e.scrollHeight,x=0,w=0,T=0;Q&&i.force3D!==!1?(l="translate3d(",u="px,0px)"):$&&(l="translate(",u="px)"),this.scrollTop=function(e,t){return arguments.length?void this.top(-e,t):-this.top()},this.scrollLeft=function(e,t){return arguments.length?void this.left(-e,t):-this.left()},this.left=function(n,r){if(!arguments.length)return-(e.scrollLeft+g);var o=e.scrollLeft-_,s=g;return(o>2||-2>o)&&!r?(_=e.scrollLeft,t.killTweensOf(this,!0,{left:1,scrollLeft:1}),this.left(-_),void(i.onKill&&i.onKill())):(n=-n,0>n?(g=n-.5|0,n=0):n>w?(g=n-w|0,n=w):g=0,(g||s)&&(l?this._suspendTransforms||(h[$]=l+-g+"px,"+-p+u):h.left=-g+"px",mt&&g+x>=0&&(h.paddingRight=g+x+"px")),e.scrollLeft=0|n,void(_=e.scrollLeft))},this.top=function(n,r){if(!arguments.length)return-(e.scrollTop+p);var o=e.scrollTop-m,s=p;return(o>2||-2>o)&&!r?(m=e.scrollTop,t.killTweensOf(this,!0,{top:1,scrollTop:1}),this.top(-m),void(i.onKill&&i.onKill())):(n=-n,0>n?(p=n-.5|0,n=0):n>T?(p=n-T|0,n=T):p=0,(p||s)&&(l?this._suspendTransforms||(h[$]=l+-g+"px,"+-p+u):h.top=-p+"px"),e.scrollTop=0|n,void(m=e.scrollTop))},this.maxScrollTop=function(){return T},this.maxScrollLeft=function(){return w},this.disable=function(){for(f=c.firstChild;f;)a=f.nextSibling,e.appendChild(f),f=a;e===c.parentNode&&e.removeChild(c)},this.enable=function(){if(f=e.firstChild,f!==c){for(;f;)a=f.nextSibling,c.appendChild(f),f=a;e.appendChild(c),this.calibrate()}},this.calibrate=function(t){var i,a,l=e.clientWidth===n;m=e.scrollTop,_=e.scrollLeft,(!l||e.clientHeight!==r||c.offsetHeight!==o||v!==e.scrollWidth||b!==e.scrollHeight||t)&&((p||g)&&(i=this.left(),a=this.top(),this.left(-e.scrollLeft),this.top(-e.scrollTop)),(!l||t)&&(h.display="block",h.width="auto",h.paddingRight="0px",x=Math.max(0,e.scrollWidth-e.clientWidth),x&&(x+=H(e,"paddingLeft")+(s?H(e,"paddingRight"):0))),h.display="inline-block",h.position="relative",h.overflow="visible",h.width="100%",h.paddingRight=x+"px",s&&(h.paddingBottom=H(e,"paddingBottom",!0)),y&&(h.zoom="1"),n=e.clientWidth,r=e.clientHeight,v=e.scrollWidth,b=e.scrollHeight,w=e.scrollWidth-n,T=e.scrollHeight-r,o=c.offsetHeight,(i||a)&&(this.left(i),this.top(a)))},this.content=c,this.element=e,this._suspendTransforms=!1,this.enable()},vt=function(i,o){e.call(this,i),i=E(i),r||(r=(window.GreenSockGlobals||window).com.greensock.plugins.ThrowPropsPlugin),this.vars=o=o||{},this.target=i,this.x=this.y=this.rotation=0,this.dragResistance=parseFloat(o.dragResistance)||0,this.edgeResistance=isNaN(o.edgeResistance)?1:parseFloat(o.edgeResistance)||0,this.lockAxis=o.lockAxis;var s,h,f,b,T,C,O,M,R,L,F,I,z,X,B,W,Q,U,$,V,Z,G,J,K,et,tt,rt=(o.type||(y?"top,left":"x,y")).toLowerCase(),ot=-1!==rt.indexOf("x")||-1!==rt.indexOf("y"),st=-1!==rt.indexOf("rotation"),at=ot?"x":"left",dt=ot?"y":"top",mt=-1!==rt.indexOf("x")||-1!==rt.indexOf("left")||"scroll"===rt,yt=-1!==rt.indexOf("y")||-1!==rt.indexOf("top")||"scroll"===rt,bt=this,xt=E(o.trigger||o.handle||i),wt={},Tt=0,kt=function(e){if(U){var n=bt.x,r=bt.y,o=1e-6;o>n&&n>-o&&(n=0),o>r&&r>-o&&(r=0),st?(X.rotation=bt.rotation=bt.x,t.set(i,z)):h?(yt&&h.top(r),mt&&h.left(n)):ot?(yt&&(X.y=r),mt&&(X.x=n),t.set(i,z)):(yt&&(i.style.top=r+"px"),mt&&(i.style.left=n+"px")),M&&!e&&Y(bt,"drag","onDrag")}U=!1},St=function(e,n){var r;ot?(i._gsTransform||t.set(i,{x:"+=0"}),bt.y=i._gsTransform.y,bt.x=i._gsTransform.x):st?(i._gsTransform||t.set(i,{x:"+=0"}),bt.x=bt.rotation=i._gsTransform.rotation):h?(bt.y=h.top(),bt.x=h.left()):(bt.y=parseInt(i.style.top,10)||0,bt.x=parseInt(i.style.left,10)||0),!V&&!Z||n||(V&&(r=V(bt.x),r!==bt.x&&(bt.x=r,st&&(bt.rotation=r),U=!0)),Z&&(r=Z(bt.y),r!==bt.y&&(bt.y=r,U=!0)),U&&kt(!0)),o.onThrowUpdate&&!e&&o.onThrowUpdate.apply(o.onThrowUpdateScope||bt,o.onThrowUpdateParams||p)},Ct=function(){var e,t,n,r;O=!1,h?(h.calibrate(),bt.minX=L=-h.maxScrollLeft(),bt.minY=I=-h.maxScrollTop(),bt.maxX=R=bt.maxY=F=0,O=!0):o.bounds&&(e=q(o.bounds,i.parentNode),st?(bt.minX=L=e.left,bt.maxX=R=e.left+e.width,bt.minY=I=bt.maxY=F=0):void 0!==o.bounds.maxX||void 0!==o.bounds.maxY?(e=o.bounds,bt.minX=L=e.minX,bt.minY=I=e.minY,bt.maxX=R=e.maxX,bt.maxY=F=e.maxY):(t=q(i,i.parentNode),bt.minX=L=H(i,at)+e.left-t.left,bt.minY=I=H(i,dt)+e.top-t.top,bt.maxX=R=L+(e.width-t.width),bt.maxY=F=I+(e.height-t.height)),L>R&&(bt.minX=R,bt.maxX=R=L,L=bt.minX),I>F&&(bt.minY=F,bt.maxY=F=I,I=bt.minY),st&&(bt.minRotation=L,bt.maxRotation=R),O=!0),o.liveSnap&&(n=o.liveSnap===!0?o.snap||{}:o.liveSnap,r=n instanceof Array||"function"==typeof n,st?(V=Mt(r?n:n.rotation,L,R,1),Z=null):(mt&&(V=Mt(r?n:n.x||n.left||n.scrollLeft,L,R,h?-1:1)),yt&&(Z=Mt(r?n:n.y||n.top||n.scrollTop,I,F,h?-1:1))))},Pt=function(e,t){var n,s,a;e&&r?(e===!0&&(n=o.snap||{},s=n instanceof Array||"function"==typeof n,e={resistance:(o.throwResistance||o.resistance||1e3)/(st?10:1)},st?e.rotation=pt(bt,s?n:n.rotation,R,L,1,t):(mt&&(e[at]=pt(bt,s?n:n.x||n.left||n.scrollLeft,R,L,h?-1:1,t||bt.lockAxis&&"x"===K)),yt&&(e[dt]=pt(bt,s?n:n.y||n.top||n.scrollTop,F,I,h?-1:1,t||bt.lockAxis&&"y"===K)))),bt.tween=a=r.to(h||i,{throwProps:e,ease:o.ease||Power3.easeOut,onComplete:o.onThrowComplete,onCompleteParams:o.onThrowCompleteParams,onCompleteScope:o.onThrowCompleteScope||bt,onUpdate:o.fastMode?o.onThrowUpdate:St,onUpdateParams:o.fastMode?o.onThrowUpdateParams:null,onUpdateScope:o.onThrowUpdateScope||bt},isNaN(o.maxDuration)?2:o.maxDuration,isNaN(o.minDuration)?.5:o.minDuration,isNaN(o.overshootTolerance)?1-bt.edgeResistance+.2:o.overshootTolerance),o.fastMode||(h&&(h._suspendTransforms=!0),a.render(a.duration(),!0,!0),St(!0,!0),bt.endX=bt.x,bt.endY=bt.y,st&&(bt.endRotation=bt.x),a.play(0),St(!0,!0),h&&(h._suspendTransforms=!1))):O&&bt.applyBounds()},At=function(){et=it(i.parentNode,!0),et[1]||et[2]||1!=et[0]||1!=et[3]||0!=et[4]||0!=et[5]||(et=null)},Ot=function(){var e=1-bt.edgeResistance;At(),h?(Ct(),C=h.top(),T=h.left()):(Dt()?(St(!0,!0),Ct()):bt.applyBounds(),st?(Q=nt(i,{x:0,y:0}),St(!0,!0),T=bt.x,C=bt.y=Math.atan2(Q.y-b,f-Q.x)*m):(C=H(i,dt),T=H(i,at))),O&&e&&(T>R?T=R+(T-R)/e:L>T&&(T=L-(L-T)/e),st||(C>F?C=F+(C-F)/e:I>C&&(C=I-(I-C)/e)))},Dt=function(){return bt.tween&&bt.tween.isActive()},Mt=function(e,t,i,n){return"function"==typeof e?function(r){var o=bt.isPressed?1-bt.edgeResistance:1;return e.call(bt,r>i?i+(r-i)*o:t>r?t+(r-t)*o:r)*n}:e instanceof Array?function(n){for(var r,o,s=e.length,a=0,l=_;--s>-1;)r=e[s],o=r-n,0>o&&(o=-o),l>o&&r>=t&&i>=r&&(a=s,l=o);return e[a]}:isNaN(e)?function(e){return e}:function(){return e*n}},Rt=function(e){var n;if(s&&!bt.isPressed&&e){if(tt=Dt(),bt.pointerEvent=e,ut[e.type]?(J=-1!==e.type.indexOf("touch")?xt:d,ct(J,"touchend",Et),ct(J,"touchmove",Nt),ct(J,"touchcancel",Et),ct(d,"touchstart",ft)):(J=null,ct(d,"mousemove",Nt),ct(d,"mouseup",Et)),G=gt(e.target)&&!o.dragClickables)return void ct(e.target,"change",Et);y?e=N(e,!0):!h||e.touches&&e.touches.length>k+1||(e.preventDefault(),e.preventManipulation&&e.preventManipulation()),e.changedTouches?(e=B=e.changedTouches[0],W=e.identifier):e.pointerId?W=e.pointerId:B=null,k++,P(kt),bt.tween&&bt.tween.kill(),t.killTweensOf(h||i,!0,wt),h&&t.killTweensOf(i,!0,{scrollTo:1}),b=bt.pointerY=e.pageY,f=bt.pointerX=e.pageX,Ot(),et&&(n=f*et[0]+b*et[2]+et[4],b=f*et[1]+b*et[3]+et[5],f=n),bt.tween=K=null,st||h||o.zIndexBoost===!1||(i.style.zIndex=vt.zIndex++),bt.isPressed=!0,M=!(!o.onDrag&&!bt._listeners.drag),st||j(xt,"cursor",o.cursor||"move"),Y(bt,"press","onPress")}},Nt=function(e){if(s&&!n&&bt.isPressed){y?e=N(e,!0):(e.preventDefault(),e.preventManipulation&&e.preventManipulation()),bt.pointerEvent=e;var t,i,r,o,a,l,u,c,h,d=e.changedTouches,p=1-bt.dragResistance,g=1-bt.edgeResistance;if(d){if(e=d[0],e!==B&&e.identifier!==W){for(a=d.length;--a>-1&&(e=d[a]).identifier!==W;);if(0>a)return}}else if(e.pointerId&&W&&e.pointerId!==W)return;u=bt.pointerX=e.pageX,c=bt.pointerY=e.pageY,st?(o=Math.atan2(Q.y-e.pageY,e.pageX-Q.x)*m,l=bt.y-o,bt.y=o,l>180?C-=360:-180>l&&(C+=360),r=T+(C-o)*p):(et&&(h=u*et[0]+c*et[2]+et[4],c=u*et[1]+c*et[3]+et[5],u=h),i=c-b,t=u-f,2>i&&i>-2&&(i=0),2>t&&t>-2&&(t=0),bt.lockAxis&&(t||i)&&("y"===K||!K&&Math.abs(t)>Math.abs(i)&&mt?(i=0,K="y"):yt&&(t=0,K="x")),r=T+t*p,o=C+i*p),V||Z?(V&&(r=V(r)),Z&&(o=Z(o))):O&&(r>R?r=R+(r-R)*g:L>r&&(r=L+(r-L)*g),st||(o>F?o=F+(o-F)*g:I>o&&(o=I+(o-I)*g))),(bt.x!==r||bt.y!==o&&!st)&&(bt.x=bt.endX=r,st?bt.endRotation=r:bt.y=bt.endY=o,U=!0,bt.isDragging||(bt.isDragging=!0,Y(bt,"dragstart","onDragStart")))}},Et=function(e,t){if(!(!s||e&&W&&!t&&e.pointerId&&e.pointerId!==W)){bt.isPressed=!1;var i,n,r=e,a=bt.isDragging;if(J?(ht(J,"touchend",Et),ht(J,"touchmove",Nt),ht(J,"touchcancel",Et),ht(d,"touchstart",ft)):(ht(d,"mouseup",Et),ht(d,"mousemove",Nt)),U=!1,G)return e&&ht(e.target,"change",Et),Y(bt,"release","onRelease"),Y(bt,"click","onClick"),void(G=!1);if(A(kt),st||j(xt,"cursor",o.cursor||"move"),a&&(Tt=S=v(),bt.isDragging=!1),k--,e){if(y&&(e=N(e,!1)),i=e.changedTouches,i&&(e=i[0],e!==B&&e.identifier!==W)){for(n=i.length;--n>-1&&(e=i[n]).identifier!==W;);if(0>n)return}bt.pointerEvent=r,bt.pointerX=e.pageX,bt.pointerY=e.pageY}return r&&!a?(tt&&o.snap&&Pt(o.throwProps),Y(bt,"release","onRelease"),Y(bt,"click","onClick")):(Pt(o.throwProps),y||!r||!o.dragClickables&&gt(r.target)||!a||(r.preventDefault(),r.preventManipulation&&r.preventManipulation()),Y(bt,"release","onRelease")),a&&Y(bt,"dragend","onDragEnd"),!0}},Lt=function(e){(bt.isPressed||v()-Tt<20)&&(e.preventDefault?e.preventDefault():e.returnValue=!1,e.preventManipulation&&e.preventManipulation())};$=vt.get(this.target),$&&$.kill(),this.startDrag=function(e){Rt(e),bt.isDragging||(bt.isDragging=!0,Y(bt,"dragstart","onDragStart"))},this.drag=Nt,this.endDrag=function(e){Et(e,!0)},this.timeSinceDrag=function(){return bt.isDragging?0:(v()-Tt)/1e3},this.hitTest=function(e,t){return vt.hitTest(bt.target,e,t)},this.applyBounds=function(e){var t,i;return e&&o.bounds!==e?(o.bounds=e,bt.update(!0)):(St(!0),Ct(),O&&(t=bt.x,i=bt.y,O&&(t>R?t=R:L>t&&(t=L),i>F?i=F:I>i&&(i=I)),(bt.x!==t||bt.y!==i)&&(bt.x=bt.endX=t,st?bt.endRotation=t:bt.y=bt.endY=i,U=!0,kt())),bt)},this.update=function(e){var t=bt.x,i=bt.y;return At(),e?bt.applyBounds():St(!0),bt.isPressed&&(Math.abs(t-bt.x)>.01||Math.abs(i-bt.y)>.01&&!st)&&Ot(),bt},this.enable=function(e){var n;return"soft"!==e&&(ct(xt,"mousedown",Rt),ct(xt,"touchstart",Rt),ct(xt,"click",Lt),st||j(xt,"cursor",o.cursor||"move"),xt.ondragstart=xt.onselectstart=g,j(xt,"userSelect","none"),j(xt,"touchCallout","none"),j(xt,"touchAction","none")),s=!0,r&&"soft"!==e&&r.track(h||i,ot?"x,y":st?"rotation":"top,left"),h&&h.enable(),i._gsDragID=n="d"+w++,x[n]=this,h&&(h.element._gsDragID=n),t.set(i,{x:"+=0"}),this.update(),bt},this.disable=function(e){var t=this.isDragging;return st||j(xt,"cursor",null),"soft"!==e&&(xt.ondragstart=xt.onselectstart=null,j(xt,"userSelect","text"),j(xt,"touchCallout","default"),j(xt,"MSTouchAction","auto"),ht(xt,"mousedown",Rt),ht(xt,"touchstart",Rt),ht(xt,"click",Lt),J&&(ht(J,"touchcancel",Et),ht(J,"touchend",Et),ht(J,"touchmove",Nt)),ht(d,"mouseup",Et),ht(d,"mousemove",Nt)),s=!1,r&&"soft"!==e&&r.untrack(h||i,ot?"x,y":st?"rotation":"top,left"),h&&h.disable(),A(kt),this.isDragging=this.isPressed=G=!1,t&&Y(this,"dragend","onDragEnd"),bt},this.enabled=function(e,t){return arguments.length?e?this.enable(t):this.disable(t):s},this.kill=function(){return t.killTweensOf(h||i,!0,wt),bt.disable(),delete x[i._gsDragID],bt},-1!==rt.indexOf("scroll")&&(h=this.scrollProxy=new _t(i,D({onKill:function(){bt.isPressed&&Et(null)
}},o)),i.style.overflowY=yt&&!lt?"auto":"hidden",i.style.overflowX=mt&&!lt?"auto":"hidden",i=h.content),o.force3D!==!1&&t.set(i,{force3D:!0}),st?wt.rotation=1:(mt&&(wt[at]=1),yt&&(wt[dt]=1)),st?(z=c,X=z.css,z.overwrite=!1):ot&&(z=mt&&yt?a:mt?l:u,X=z.css,z.overwrite=!1),this.enable()},yt=vt.prototype=new e;yt.constructor=vt,yt.pointerX=yt.pointerY=0,yt.isDragging=yt.isPressed=!1,vt.version="0.10.4",vt.zIndex=1e3,ct(d,"touchcancel",function(){}),ct(d,"contextmenu",function(){var e;for(e in x)x[e].isPressed&&x[e].endDrag()}),vt.create=function(e,i){"string"==typeof e&&(e=t.selector(e));for(var n=st(e)?at(e):[e],r=n.length;--r>-1;)n[r]=new vt(n[r],i);return n},vt.get=function(e){return x[(E(e)||{})._gsDragID]},vt.timeSinceDrag=function(){return(v()-S)/1e3};var bt=function(e,t){var i=e.pageX!==t?{left:e.pageX,top:e.pageY,right:e.pageX+1,bottom:e.pageY+1}:e.nodeType||e.left===t||e.top===t?E(e).getBoundingClientRect():e;return i.right===t&&i.width!==t?(i.right=i.left+i.width,i.bottom=i.top+i.height):i.width===t&&(i={width:i.right-i.left,height:i.bottom-i.top,right:i.right,left:i.left,bottom:i.bottom,top:i.top}),i};return vt.parseRect=function(e,t){var i=e.pageX!==t?{left:e.pageX,top:e.pageY,right:e.pageX+1,bottom:e.pageY+1}:e.nodeType||e.left===t||e.top===t?E(e).getBoundingClientRect():e;return i.right===t&&i.width!==t?(i.right=i.left+i.width,i.bottom=i.top+i.height):i.width===t&&(i={width:i.right-i.left,height:i.bottom-i.top,right:i.right,left:i.left,bottom:i.bottom,top:i.top}),i},vt.hitTest=function(e,t,i){if(e===t)return!1;var n,r,o,s=bt(e),a=bt(t),l=a.left>s.right||a.right<s.left||a.top>s.bottom||a.bottom<s.top;return l||!i?!l:(o=-1!==(i+"").indexOf("%"),i=parseFloat(i)||0,n={left:Math.max(s.left,a.left),top:Math.max(s.top,a.top)},n.width=Math.min(s.right,a.right)-n.left,n.height=Math.min(s.bottom,a.bottom)-n.top,n.width<0||n.height<0?!1:o?(i*=.01,r=n.width*n.height,r>=s.width*s.height*i||r>=a.width*a.height*i):n.width>i&&n.height>i)},vt},!0)}),window._gsDefine&&window._gsQueue.pop()(),function(){function e(i,n){if(i=i?i:"",n=n||{},i instanceof e)return i;if(!(this instanceof e))return new e(i,n);var r=t(i);this._originalInput=i,this._r=r.r,this._g=r.g,this._b=r.b,this._a=r.a,this._roundA=z(100*this._a)/100,this._format=n.format||r.format,this._gradientType=n.gradientType,this._r<1&&(this._r=z(this._r)),this._g<1&&(this._g=z(this._g)),this._b<1&&(this._b=z(this._b)),this._ok=r.ok,this._tc_id=F++}function t(e){var t={r:0,g:0,b:0},n=1,o=!1,a=!1;return"string"==typeof e&&(e=N(e)),"object"==typeof e&&(e.hasOwnProperty("r")&&e.hasOwnProperty("g")&&e.hasOwnProperty("b")?(t=i(e.r,e.g,e.b),o=!0,a="%"===String(e.r).substr(-1)?"prgb":"rgb"):e.hasOwnProperty("h")&&e.hasOwnProperty("s")&&e.hasOwnProperty("v")?(e.s=D(e.s),e.v=D(e.v),t=s(e.h,e.s,e.v),o=!0,a="hsv"):e.hasOwnProperty("h")&&e.hasOwnProperty("s")&&e.hasOwnProperty("l")&&(e.s=D(e.s),e.l=D(e.l),t=r(e.h,e.s,e.l),o=!0,a="hsl"),e.hasOwnProperty("a")&&(n=e.a)),n=T(n),{ok:o,format:e.format||a,r:X(255,B(t.r,0)),g:X(255,B(t.g,0)),b:X(255,B(t.b,0)),a:n}}function i(e,t,i){return{r:255*k(e,255),g:255*k(t,255),b:255*k(i,255)}}function n(e,t,i){e=k(e,255),t=k(t,255),i=k(i,255);var n,r,o=B(e,t,i),s=X(e,t,i),a=(o+s)/2;if(o==s)n=r=0;else{var l=o-s;switch(r=a>.5?l/(2-o-s):l/(o+s),o){case e:n=(t-i)/l+(i>t?6:0);break;case t:n=(i-e)/l+2;break;case i:n=(e-t)/l+4}n/=6}return{h:n,s:r,l:a}}function r(e,t,i){function n(e,t,i){return 0>i&&(i+=1),i>1&&(i-=1),1/6>i?e+6*(t-e)*i:.5>i?t:2/3>i?e+(t-e)*(2/3-i)*6:e}var r,o,s;if(e=k(e,360),t=k(t,100),i=k(i,100),0===t)r=o=s=i;else{var a=.5>i?i*(1+t):i+t-i*t,l=2*i-a;r=n(l,a,e+1/3),o=n(l,a,e),s=n(l,a,e-1/3)}return{r:255*r,g:255*o,b:255*s}}function o(e,t,i){e=k(e,255),t=k(t,255),i=k(i,255);var n,r,o=B(e,t,i),s=X(e,t,i),a=o,l=o-s;if(r=0===o?0:l/o,o==s)n=0;else{switch(o){case e:n=(t-i)/l+(i>t?6:0);break;case t:n=(i-e)/l+2;break;case i:n=(e-t)/l+4}n/=6}return{h:n,s:r,v:a}}function s(e,t,i){e=6*k(e,360),t=k(t,100),i=k(i,100);var n=I.floor(e),r=e-n,o=i*(1-t),s=i*(1-r*t),a=i*(1-(1-r)*t),l=n%6,u=[i,s,o,o,a,i][l],c=[a,i,i,s,o,o][l],h=[o,o,a,i,i,s][l];return{r:255*u,g:255*c,b:255*h}}function a(e,t,i,n){var r=[O(z(e).toString(16)),O(z(t).toString(16)),O(z(i).toString(16))];return n&&r[0].charAt(0)==r[0].charAt(1)&&r[1].charAt(0)==r[1].charAt(1)&&r[2].charAt(0)==r[2].charAt(1)?r[0].charAt(0)+r[1].charAt(0)+r[2].charAt(0):r.join("")}function l(e,t,i,n){var r=[O(M(n)),O(z(e).toString(16)),O(z(t).toString(16)),O(z(i).toString(16))];return r.join("")}function u(t,i){i=0===i?0:i||10;var n=e(t).toHsl();return n.s-=i/100,n.s=S(n.s),e(n)}function c(t,i){i=0===i?0:i||10;var n=e(t).toHsl();return n.s+=i/100,n.s=S(n.s),e(n)}function h(t){return e(t).desaturate(100)}function d(t,i){i=0===i?0:i||10;var n=e(t).toHsl();return n.l+=i/100,n.l=S(n.l),e(n)}function f(t,i){i=0===i?0:i||10;var n=e(t).toRgb();return n.r=B(0,X(255,n.r-z(255*-(i/100)))),n.g=B(0,X(255,n.g-z(255*-(i/100)))),n.b=B(0,X(255,n.b-z(255*-(i/100)))),e(n)}function p(t,i){i=0===i?0:i||10;var n=e(t).toHsl();return n.l-=i/100,n.l=S(n.l),e(n)}function g(t,i){var n=e(t).toHsl(),r=(z(n.h)+i)%360;return n.h=0>r?360+r:r,e(n)}function m(t){var i=e(t).toHsl();return i.h=(i.h+180)%360,e(i)}function _(t){var i=e(t).toHsl(),n=i.h;return[e(t),e({h:(n+120)%360,s:i.s,l:i.l}),e({h:(n+240)%360,s:i.s,l:i.l})]}function v(t){var i=e(t).toHsl(),n=i.h;return[e(t),e({h:(n+90)%360,s:i.s,l:i.l}),e({h:(n+180)%360,s:i.s,l:i.l}),e({h:(n+270)%360,s:i.s,l:i.l})]}function y(t){var i=e(t).toHsl(),n=i.h;return[e(t),e({h:(n+72)%360,s:i.s,l:i.l}),e({h:(n+216)%360,s:i.s,l:i.l})]}function b(t,i,n){i=i||6,n=n||30;var r=e(t).toHsl(),o=360/n,s=[e(t)];for(r.h=(r.h-(o*i>>1)+720)%360;--i;)r.h=(r.h+o)%360,s.push(e(r));return s}function x(t,i){i=i||6;for(var n=e(t).toHsv(),r=n.h,o=n.s,s=n.v,a=[],l=1/i;i--;)a.push(e({h:r,s:o,v:s})),s=(s+l)%1;return a}function w(e){var t={};for(var i in e)e.hasOwnProperty(i)&&(t[e[i]]=i);return t}function T(e){return e=parseFloat(e),(isNaN(e)||0>e||e>1)&&(e=1),e}function k(e,t){P(e)&&(e="100%");var i=A(e);return e=X(t,B(0,parseFloat(e))),i&&(e=parseInt(e*t,10)/100),I.abs(e-t)<1e-6?1:e%t/parseFloat(t)}function S(e){return X(1,B(0,e))}function C(e){return parseInt(e,16)}function P(e){return"string"==typeof e&&-1!=e.indexOf(".")&&1===parseFloat(e)}function A(e){return"string"==typeof e&&-1!=e.indexOf("%")}function O(e){return 1==e.length?"0"+e:""+e}function D(e){return 1>=e&&(e=100*e+"%"),e}function M(e){return Math.round(255*parseFloat(e)).toString(16)}function R(e){return C(e)/255}function N(e){e=e.replace(L,"").replace(j,"").toLowerCase();var t=!1;if(Y[e])e=Y[e],t=!0;else if("transparent"==e)return{r:0,g:0,b:0,a:0,format:"name"};var i;return(i=W.rgb.exec(e))?{r:i[1],g:i[2],b:i[3]}:(i=W.rgba.exec(e))?{r:i[1],g:i[2],b:i[3],a:i[4]}:(i=W.hsl.exec(e))?{h:i[1],s:i[2],l:i[3]}:(i=W.hsla.exec(e))?{h:i[1],s:i[2],l:i[3],a:i[4]}:(i=W.hsv.exec(e))?{h:i[1],s:i[2],v:i[3]}:(i=W.hsva.exec(e))?{h:i[1],s:i[2],v:i[3],a:i[4]}:(i=W.hex8.exec(e))?{a:R(i[1]),r:C(i[2]),g:C(i[3]),b:C(i[4]),format:t?"name":"hex8"}:(i=W.hex6.exec(e))?{r:C(i[1]),g:C(i[2]),b:C(i[3]),format:t?"name":"hex"}:(i=W.hex3.exec(e))?{r:C(i[1]+""+i[1]),g:C(i[2]+""+i[2]),b:C(i[3]+""+i[3]),format:t?"name":"hex"}:!1}function E(e){var t,i;return e=e||{level:"AA",size:"small"},t=(e.level||"AA").toUpperCase(),i=(e.size||"small").toLowerCase(),"AA"!==t&&"AAA"!==t&&(t="AA"),"small"!==i&&"large"!==i&&(i="small"),{level:t,size:i}}var L=/^[\s,#]+/,j=/\s+$/,F=0,I=Math,z=I.round,X=I.min,B=I.max,H=I.random;e.prototype={isDark:function(){return this.getBrightness()<128},isLight:function(){return!this.isDark()},isValid:function(){return this._ok},getOriginalInput:function(){return this._originalInput},getFormat:function(){return this._format},getAlpha:function(){return this._a},getBrightness:function(){var e=this.toRgb();return(299*e.r+587*e.g+114*e.b)/1e3},getLuminance:function(){var e,t,i,n,r,o,s=this.toRgb();return e=s.r/255,t=s.g/255,i=s.b/255,n=.03928>=e?e/12.92:Math.pow((e+.055)/1.055,2.4),r=.03928>=t?t/12.92:Math.pow((t+.055)/1.055,2.4),o=.03928>=i?i/12.92:Math.pow((i+.055)/1.055,2.4),.2126*n+.7152*r+.0722*o},setAlpha:function(e){return this._a=T(e),this._roundA=z(100*this._a)/100,this},toHsv:function(){var e=o(this._r,this._g,this._b);return{h:360*e.h,s:e.s,v:e.v,a:this._a}},toHsvString:function(){var e=o(this._r,this._g,this._b),t=z(360*e.h),i=z(100*e.s),n=z(100*e.v);return 1==this._a?"hsv("+t+", "+i+"%, "+n+"%)":"hsva("+t+", "+i+"%, "+n+"%, "+this._roundA+")"},toHsl:function(){var e=n(this._r,this._g,this._b);return{h:360*e.h,s:e.s,l:e.l,a:this._a}},toHslString:function(){var e=n(this._r,this._g,this._b),t=z(360*e.h),i=z(100*e.s),r=z(100*e.l);return 1==this._a?"hsl("+t+", "+i+"%, "+r+"%)":"hsla("+t+", "+i+"%, "+r+"%, "+this._roundA+")"},toHex:function(e){return a(this._r,this._g,this._b,e)},toHexString:function(e){return"#"+this.toHex(e)},toHex8:function(){return l(this._r,this._g,this._b,this._a)},toHex8String:function(){return"#"+this.toHex8()},toRgb:function(){return{r:z(this._r),g:z(this._g),b:z(this._b),a:this._a}},toRgbString:function(){return 1==this._a?"rgb("+z(this._r)+", "+z(this._g)+", "+z(this._b)+")":"rgba("+z(this._r)+", "+z(this._g)+", "+z(this._b)+", "+this._roundA+")"},toPercentageRgb:function(){return{r:z(100*k(this._r,255))+"%",g:z(100*k(this._g,255))+"%",b:z(100*k(this._b,255))+"%",a:this._a}},toPercentageRgbString:function(){return 1==this._a?"rgb("+z(100*k(this._r,255))+"%, "+z(100*k(this._g,255))+"%, "+z(100*k(this._b,255))+"%)":"rgba("+z(100*k(this._r,255))+"%, "+z(100*k(this._g,255))+"%, "+z(100*k(this._b,255))+"%, "+this._roundA+")"},toName:function(){return 0===this._a?"transparent":this._a<1?!1:q[a(this._r,this._g,this._b,!0)]||!1},toFilter:function(t){var i="#"+l(this._r,this._g,this._b,this._a),n=i,r=this._gradientType?"GradientType = 1, ":"";if(t){var o=e(t);n=o.toHex8String()}return"progid:DXImageTransform.Microsoft.gradient("+r+"startColorstr="+i+",endColorstr="+n+")"},toString:function(e){var t=!!e;e=e||this._format;var i=!1,n=this._a<1&&this._a>=0,r=!t&&n&&("hex"===e||"hex6"===e||"hex3"===e||"name"===e);return r?"name"===e&&0===this._a?this.toName():this.toRgbString():("rgb"===e&&(i=this.toRgbString()),"prgb"===e&&(i=this.toPercentageRgbString()),("hex"===e||"hex6"===e)&&(i=this.toHexString()),"hex3"===e&&(i=this.toHexString(!0)),"hex8"===e&&(i=this.toHex8String()),"name"===e&&(i=this.toName()),"hsl"===e&&(i=this.toHslString()),"hsv"===e&&(i=this.toHsvString()),i||this.toHexString())},_applyModification:function(e,t){var i=e.apply(null,[this].concat([].slice.call(t)));return this._r=i._r,this._g=i._g,this._b=i._b,this.setAlpha(i._a),this},lighten:function(){return this._applyModification(d,arguments)},brighten:function(){return this._applyModification(f,arguments)},darken:function(){return this._applyModification(p,arguments)},desaturate:function(){return this._applyModification(u,arguments)},saturate:function(){return this._applyModification(c,arguments)},greyscale:function(){return this._applyModification(h,arguments)},spin:function(){return this._applyModification(g,arguments)},_applyCombination:function(e,t){return e.apply(null,[this].concat([].slice.call(t)))},analogous:function(){return this._applyCombination(b,arguments)},complement:function(){return this._applyCombination(m,arguments)},monochromatic:function(){return this._applyCombination(x,arguments)},splitcomplement:function(){return this._applyCombination(y,arguments)},triad:function(){return this._applyCombination(_,arguments)},tetrad:function(){return this._applyCombination(v,arguments)}},e.fromRatio=function(t,i){if("object"==typeof t){var n={};for(var r in t)t.hasOwnProperty(r)&&(n[r]="a"===r?t[r]:D(t[r]));t=n}return e(t,i)},e.equals=function(t,i){return t&&i?e(t).toRgbString()==e(i).toRgbString():!1},e.random=function(){return e.fromRatio({r:H(),g:H(),b:H()})},e.mix=function(t,i,n){n=0===n?0:n||50;var r,o=e(t).toRgb(),s=e(i).toRgb(),a=n/100,l=2*a-1,u=s.a-o.a;r=l*u==-1?l:(l+u)/(1+l*u),r=(r+1)/2;var c=1-r,h={r:s.r*r+o.r*c,g:s.g*r+o.g*c,b:s.b*r+o.b*c,a:s.a*a+o.a*(1-a)};return e(h)},e.readability=function(t,i){var n=e(t),r=e(i);return(Math.max(n.getLuminance(),r.getLuminance())+.05)/(Math.min(n.getLuminance(),r.getLuminance())+.05)},e.isReadable=function(t,i,n){var r,o,s=e.readability(t,i);switch(o=!1,r=E(n),r.level+r.size){case"AAsmall":case"AAAlarge":o=s>=4.5;break;case"AAlarge":o=s>=3;break;case"AAAsmall":o=s>=7}return o},e.mostReadable=function(t,i,n){var r,o,s,a,l=null,u=0;n=n||{},o=n.includeFallbackColors,s=n.level,a=n.size;for(var c=0;c<i.length;c++)r=e.readability(t,i[c]),r>u&&(u=r,l=e(i[c]));return e.isReadable(t,l,{level:s,size:a})||!o?l:(n.includeFallbackColors=!1,e.mostReadable(t,["#fff","#000"],n))};var Y=e.names={aliceblue:"f0f8ff",antiquewhite:"faebd7",aqua:"0ff",aquamarine:"7fffd4",azure:"f0ffff",beige:"f5f5dc",bisque:"ffe4c4",black:"000",blanchedalmond:"ffebcd",blue:"00f",blueviolet:"8a2be2",brown:"a52a2a",burlywood:"deb887",burntsienna:"ea7e5d",cadetblue:"5f9ea0",chartreuse:"7fff00",chocolate:"d2691e",coral:"ff7f50",cornflowerblue:"6495ed",cornsilk:"fff8dc",crimson:"dc143c",cyan:"0ff",darkblue:"00008b",darkcyan:"008b8b",darkgoldenrod:"b8860b",darkgray:"a9a9a9",darkgreen:"006400",darkgrey:"a9a9a9",darkkhaki:"bdb76b",darkmagenta:"8b008b",darkolivegreen:"556b2f",darkorange:"ff8c00",darkorchid:"9932cc",darkred:"8b0000",darksalmon:"e9967a",darkseagreen:"8fbc8f",darkslateblue:"483d8b",darkslategray:"2f4f4f",darkslategrey:"2f4f4f",darkturquoise:"00ced1",darkviolet:"9400d3",deeppink:"ff1493",deepskyblue:"00bfff",dimgray:"696969",dimgrey:"696969",dodgerblue:"1e90ff",firebrick:"b22222",floralwhite:"fffaf0",forestgreen:"228b22",fuchsia:"f0f",gainsboro:"dcdcdc",ghostwhite:"f8f8ff",gold:"ffd700",goldenrod:"daa520",gray:"808080",green:"008000",greenyellow:"adff2f",grey:"808080",honeydew:"f0fff0",hotpink:"ff69b4",indianred:"cd5c5c",indigo:"4b0082",ivory:"fffff0",khaki:"f0e68c",lavender:"e6e6fa",lavenderblush:"fff0f5",lawngreen:"7cfc00",lemonchiffon:"fffacd",lightblue:"add8e6",lightcoral:"f08080",lightcyan:"e0ffff",lightgoldenrodyellow:"fafad2",lightgray:"d3d3d3",lightgreen:"90ee90",lightgrey:"d3d3d3",lightpink:"ffb6c1",lightsalmon:"ffa07a",lightseagreen:"20b2aa",lightskyblue:"87cefa",lightslategray:"789",lightslategrey:"789",lightsteelblue:"b0c4de",lightyellow:"ffffe0",lime:"0f0",limegreen:"32cd32",linen:"faf0e6",magenta:"f0f",maroon:"800000",mediumaquamarine:"66cdaa",mediumblue:"0000cd",mediumorchid:"ba55d3",mediumpurple:"9370db",mediumseagreen:"3cb371",mediumslateblue:"7b68ee",mediumspringgreen:"00fa9a",mediumturquoise:"48d1cc",mediumvioletred:"c71585",midnightblue:"191970",mintcream:"f5fffa",mistyrose:"ffe4e1",moccasin:"ffe4b5",navajowhite:"ffdead",navy:"000080",oldlace:"fdf5e6",olive:"808000",olivedrab:"6b8e23",orange:"ffa500",orangered:"ff4500",orchid:"da70d6",palegoldenrod:"eee8aa",palegreen:"98fb98",paleturquoise:"afeeee",palevioletred:"db7093",papayawhip:"ffefd5",peachpuff:"ffdab9",peru:"cd853f",pink:"ffc0cb",plum:"dda0dd",powderblue:"b0e0e6",purple:"800080",rebeccapurple:"663399",red:"f00",rosybrown:"bc8f8f",royalblue:"4169e1",saddlebrown:"8b4513",salmon:"fa8072",sandybrown:"f4a460",seagreen:"2e8b57",seashell:"fff5ee",sienna:"a0522d",silver:"c0c0c0",skyblue:"87ceeb",slateblue:"6a5acd",slategray:"708090",slategrey:"708090",snow:"fffafa",springgreen:"00ff7f",steelblue:"4682b4",tan:"d2b48c",teal:"008080",thistle:"d8bfd8",tomato:"ff6347",turquoise:"40e0d0",violet:"ee82ee",wheat:"f5deb3",white:"fff",whitesmoke:"f5f5f5",yellow:"ff0",yellowgreen:"9acd32"},q=e.hexNames=w(Y),W=function(){var e="[-\\+]?\\d+%?",t="[-\\+]?\\d*\\.\\d+%?",i="(?:"+t+")|(?:"+e+")",n="[\\s|\\(]+("+i+")[,|\\s]+("+i+")[,|\\s]+("+i+")\\s*\\)?",r="[\\s|\\(]+("+i+")[,|\\s]+("+i+")[,|\\s]+("+i+")[,|\\s]+("+i+")\\s*\\)?";return{rgb:new RegExp("rgb"+n),rgba:new RegExp("rgba"+r),hsl:new RegExp("hsl"+n),hsla:new RegExp("hsla"+r),hsv:new RegExp("hsv"+n),hsva:new RegExp("hsva"+r),hex3:/^([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,hex6:/^([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,hex8:/^([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/}}();"undefined"!=typeof module&&module.exports?module.exports=e:"function"==typeof define&&define.amd?define(function(){return e}):window.tinycolor=e}(),function(e){e.fn.clonePosition=function(t){return this.css(e(t).getStyles())},e.fn.exists=function(){return 0!==this.length},e.fn.getStyles=function(){var e=this;return{margin:e.css("margin"),"margin-left":e.css("margin-left"),"margin-right":e.css("margin-right"),"margin-top":e.css("margin-top"),"margin-bottom":e.css("margin-bottom"),left:e.css("left"),right:e.css("right"),top:e.css("top"),bottom:e.css("bottom"),position:e.css("position"),display:e.css("display"),"text-align":e.css("text-align"),width:e.css("width"),height:e.css("height"),color:e.css("color"),"background-color":e.css("background-color")}},e.fn.parseStyles=function(){function e(e,t){return e=parseInt(e,10),isNaN(e)?t:e}var t=this;return{margin:e(t.css("margin"),0),"margin-left":e(t.css("margin-left"),0),"margin-right":e(t.css("margin-right"),0),"margin-top":e(t.css("margin-top"),0),"margin-bottom":e(t.css("margin-bottom"),0),padding:e(t.css("padding"),0),"padding-left":e(t.css("padding-left"),0),"padding-right":e(t.css("padding-right"),0),"padding-top":e(t.css("padding-top"),0),"padding-bottom":e(t.css("padding-bottom"),0),left:e(t.css("left"),0),right:e(t.css("right"),0),top:e(t.css("top"),0),bottom:e(t.css("bottom"),0),position:e(t.css("position"),0),display:e(t.css("display"),0),"text-align":e(t.css("text-align"),0),width:e(t.css("width"),0),height:e(t.css("height"),0),color:t.css("color"),"background-color":t.css("background-color")}},e.fn.clearPosition=function(){return this.css({margin:"0","margin-left":"0","margin-right":"0","margin-top":"0","margin-bottom":"0",left:"0",right:"0",top:"0",bottom:"0",position:"absolute",display:"block","text-align":"left"})},e.fn.active=function(){this.removeClass("inactive").addClass("active")},e.fn.inactive=function(){this.removeClass("active").addClass("inactive")},e.fn.complete=function(){this.removeClass("inactive").removeClass("active").addClass("complete")},e.fn.getNodes=function(){var e=[];for(i in this)isNaN(parseInt(i,10))||e.push(this[i]);return 1===e.length&&(e=e[0]),e}}(jQuery);var dS=function(){var e={s001:{solutions:[1,0,2]}};return{get:function(t){return e[t]}}}();window.onkeydown=function(e){var t={};switch("MacIntel"===navigator.platform&&(t.num9=105,t.num6=102,t.num4=100),"Win32"===navigator.platform&&(t.num9=33,t.num6=39,t.num4=37),e.keyCode){case t.num9:_root.controller.nextModule();break;case t.num6:_root.controller.nextScene();break;case t.num4:_root.controller.previousScene()}},TimelineMax.prototype.stick=function(e,t,i){var n=(TweenMax,t.label?t.label:"untitled"),r="piggy"===i||">"===i||void 0===i?!0:!1;r?(this.add(e),this.add(n)):(this.add(e,i),this.add(n,i))},TimelineMax.prototype.jig=function(e,t,i,n,r){var o,s,a,l=!1,u={},c=jQuery(e).getStyles();for(o in jigLibrary.defaults)void 0!==i?u[o]=void 0===i[o]?jigLibrary.defaults[o]:i[o]:u=jigLibrary.defaults;if(a=jigLibrary[t](e,u,c,l),this.stick(a,u,n),void 0!==r)for(o=0;r>o;o++)s=void 0!==n&&n>0?n+u.speed*o:u.speed*o,l=o===r-1?!0:!1,a=jigLibrary[t](e,u,c,l),this.stick(a,u,s);return this},TweenMax.fadeIn=function(e,t,i){var t=void 0!==t?t:1;this.fromTo(getNodes(e),t,{opacity:0,immediateRender:!1},{opacity:1,onComplete:i})},TweenMax.fadeOut=function(e,t,i){var t=void 0!==t?t:1;this.fromTo(getNodes(e),t,{opacity:1,immediateRender:!1},{opacity:0,onComplete:i})};var jigLibrary={author:"Adam Goodnight",version:"0.6",defaults:{from:0,to:0,speed:1,strength:1,extra:!0,origin:"50% 50%",rotationY:0,density:.8,scale:1,bol:!0,ease:"Sine.easeOut"}};jigLibrary.pulse=function(e,t){var i=new TimelineMax;return i.set(e,{transformOrigin:t.origin}),i.to(e,t.speed/3,{opacity:1}),i.to(e,t.speed/3,{opacity:.4}),i.to(e,t.speed/3,{opacity:1}),i},jigLibrary.squish=function(e,t){var i=new TimelineMax,n=1-.1*t.strength;return i.add(TweenMax.to(e,t.speed/2,{scaleY:n,transformOrigin:"100% 100%"})),i.add(TweenMax.to(e,t.speed/2,{scaleY:1,transformOrigin:"100% 100%"})),i},jigLibrary.fly=function(e,t,i){{var n=new TimelineMax;parseInt(i.width,10)/t.strength/3*-1,parseInt(i.height,10)/t.strength*2}return n.from(e,t.speed,{transformOrigin:"0% 50%",scale:1.2,opacity:0,rotationY:-90,rotationX:-40}),n},jigLibrary.hop=function(e,t,i){var n=new TimelineMax;t.bol=t.bol?!1:!0,unNull(t.rotation)&&(t.rotation="30"),t.origin="50% 100%";for(var r=0,o=0,s=t.bol?t.rotation+"deg":-1*t.rotation+"deg",a=[t.speed/6,t.speed/3,t.speed/4],l=t.strength*parseInt(i.height,10);r<a.length-1;)o+=a[r],r++;return a[3]=t.speed-o,n.set(e,{transformOrigin:t.origin}),n.to(e,a[0],{scaleX:1*t.scale+(1-t.density),scaleY:1*t.scale-(1-t.density),ease:"Expo.easeIn"}),n.to(e,a[1],{scaleX:1*t.scale-(.9-t.density),scaleY:1*t.scale+(.9-t.density),y:"-="+l,ease:"Linear",rotation:"+="+s}),n.to(e,a[2],{scaleX:.8*t.scale+(1-t.density),scaleY:1*t.scale-(1-t.density),y:"+="+l,ease:"Sine.easeIn",rotation:0}),n.to(e,a[3],{scaleX:t.scale,scaleY:t.scale,ease:"Sine.easeOut"}),n},jigLibrary.wiggle=function(e,t,i,n){var r=new TimelineMax;return r.to(e,t.speed/2,{rotation:10*t.strength,ease:"Sine.easeInOut",transformOrigin:t.origin}),n?r.to(e,t.speed/2,{rotation:0,ease:"Sine.easeInOut"}):r.to(e,t.speed/2,{rotation:-10*t.strength,ease:"Sine.easeInOut"}),r},jigLibrary.chromaZoom=function(e,t,i){var n=new TimelineMax,r=["#FF0000","#FF7F00","#FFFF00","#00FF00","#0000FF","#6600FF","#8B00FF"];return n.fromTo(e,t.speed/2,{opacity:1,scale:0,rotationY:t.rotation,color:tinycolor(arrayRandomize(r)[0]).brighten(50).toHexString(),ease:t.ease},{opacity:1,scale:1,rotationY:0,color:tinycolor(arrayRandomize(r)[0]).brighten(50).toHexString(),ease:t.ease}),n.to(e,t.speed/4,{color:tinycolor(i.color).brighten(100).toString()}),n.to(e,t.speed/4,{color:i.color}),n},jigLibrary.spin=function(e,t){var i=new TimelineMax;return i.to(e,t.speed,{rotationZ:"+=360",ease:t.ease}),i},jigLibrary.slideIn=function(e,t){var i=new TimelineMax;return i.from(e,t.speed,{opacity:0,x:-50*t.strength,ease:t.ease}),i};
//# sourceMappingURL=data:application/json;base64,