function getRect(t){var e,i={width:parseInt(jQuery(t.id).css("width"),10),height:parseInt(jQuery(t.id).css("height"),10),left:jQuery(t.id).css("left"),top:jQuery(t.id).css("top")};for(e in i)"auto"===i[e]&&(i[e]=0);return i}function readlock(t){if(t){var e,i=t.split("_");i=i.splice(1),i=i[0];var n=i.substr(0,1),r=i.substr(1,1);return"f"===r?e=!0:"u"===r&&(e=!1),[n,e]}}function islockLabel(t){var e=t?t.substr(0,t.indexOf("_")):void 0;return function(t){return"lock"===t?!0:!1}(e)}function getlockIndex(t){var e=t.split("_");return e=e.splice(1),e=e[0],e=e.substr(0,1)}function checklocks(t){var e,i,n,r,o,s,a=t.timeline.time(),l=t.timeline.getLabelsArray();for(e=0;e<l.length;e++)if(islockLabel(l[e].name))if(r=readlock(l[e].name),n=r[0],o=r[1],locked_status=t.locks[n].item.locked,o)a<l[e].time?t.locks[n].from.reached=!1:a>=l[e].time&&(t.locks[n].from.reached=!0),t.locks[n].from.reached===!0?t.locks[n].item.lock():t.locks[n].item.unlock();else{for(i=0;i<t.locks.length;i++)getlockIndex(t.locks[i].from.label)===n&&(s=t.locks[i].from);a<l[e].time?t.locks[n].until.reached=!1:a>=l[e].time&&(t.locks[n].until.reached=!0),t.locks[n].until.reached===!0?t.locks[n].item.unlock():t.locks[n].until.reached===!1&&s.reached&&t.locks[n].item.lock()}t.p_time=a}function useLocalStorage(){return Modernizr.localstorage?!0:!1}function removePrefix(t){var e=[];switch(t[0]){case"#":e[1]=t.substr(1),e[0]=t[0];break;case".":e[1]=t.substr(1),e[0]=t[0];break;default:e[1]=t,e[0]=null}return e}function findNode(t,e){var i,n,r=[];switch(t){case"#":r=[document.getElementById(e)];break;case".":i=Array.prototype.slice.call(document.getElementsByClassName(e));for(n in i)r.push(i[n]);break;default:try{i=Array.prototype.slice.call(document.getElementsByTagName(e));for(n in i)r.push(i[n])}catch(o){console.log("Selector is not valid, see documentation")}}return r}function removeUndefined(t){var e,i={};for(e in t)void 0!==t[e].nodeName&&(i[e]=t[e]);return i}function searchForNode(t,e){var i,n,r,o=0,s=Object.keys(removeUndefined(t)).length,a=[];for(i in t)if(void 0!==t[i].nodeName)if(o++,n=t[i].nodeName.toLowerCase(),n===e){if(a.push(t[i]),o===s-1)return a.length>0?a:!1}else if(void 0!==t[i].childNodes&&(r=searchForNode(t[i].childNodes,e),void 0!==r))return r}function getNodes(t){var e=[];for(i in jQuery(t))isNaN(parseInt(i,10))||e.push(jQuery(t)[i]);return 1===e.length&&(e=e[0]),e}function isEmpty(t){var e;if(null===t)return!0;if(t.length>0)return!1;if(0===t.length)return!0;for(e in t)if(hasOwnProperty.call(t,e))return!1;return!0}function Crate(t,e,i){var n,r,o=removePrefix(t);return e.length&&e.length>1?console.log("Please use only one item"):(e.length<=1?console.log("pass 1 item, not an array"):n=jQuery(e.id).clone(),n.empty(),n.attr("id",o[1]),n.clonePosition(e.id),jQuery(e.id).clearPosition(),jQuery(e.id).wrap(n)),void 0!==i?(i.placeHere&&delete i.placeHere,i.type?(r=i.type,delete i.type):r=Item):r=Item,new r(t,i)}function GSAP_method(t,e,i,n,r){var o,s,a,l,u=[];if(animator="yoyo"===r?"fromTo":r,s=void 0!==n.sync?isNaN(n.sync)?t.getLabelTime(n.sync):n.sync:void 0,a=void 0!==n.repeat?n.repeat:void 0,l=n.offset,"[object Array]"===Object.prototype.toString.call(e))for(u[0]=[],o=0;o<e.length;o++)u[0][o]=e[o].id?e[o].id:e[o];else u[0]=e.id?e.id:e;if(u[1]=i,n.options2?(u[2]=n.options,u[3]=n.options2,l&&(u[4]=l)):(u[2]=n.options,l&&(u[3]=l)),t.add(TweenMax[animator].apply(t,u),s),"yoyo"===r&&(void 0===s&&(s=i),t.add(TweenMax[animator].apply(t,[u[0],u[1],u[3],u[2]]),s)),void 0!==a)for(o=0;a-1>o;o++)t.add(TweenMax[animator].apply(t,u)),"yoyo"===r&&t.add(TweenMax[animator].apply(t,[u[0],u[1],u[3],u[2]]))}function createBlock(t,e,i,n,r){var o=removeDir(e);o=removeExt(o),o=o.substring(1),o=t.concat(o),void 0===i[n]&&(i[n]={});var s=void 0===r?!0:r;useLocalStorage&&(course=_root.courseTitle?_root.courseTitle:"untitled_web_course",localStorage[course+"-"+o]=s),i[n][o]=s}function updateModuleList(t,e){for(j=0;j<e.list.length;j++)if(void 0!==e.list[j].item.checkbox)if(j!==t)e.list[j].item.active=!1,jQuery(e.list[j].item.checkbox).removeClass("active");else{var i=toArray(e.storage.scenes.completed);i[t]===!0&&jQuery(e.list[t].item.checkbox).active()}}function checkStates(t,e){var n=0;for(i=0;i<t.length;i++)void 0!==t[i][e]&&t[i][e]!==!1&&n++;return n===t.length?!0:!1}function checkState(t,e){return void 0!==t[e]&&t[e]!==!1?!0:!1}function setStates(t,e,i){var n,r;if(t.length)for(n=0,r=t.length;r>n;n++)t[n][e]=i;else for(n in t)t[n][e]=i}function removeExt(t){return t.split(".")[0]}function removeDir(t){return lastIndex=t.lastIndexOf("/"),t.slice(lastIndex+1)}function getExt(t){return t.split(".")[1]}function getDir(t){return lastIndex=t.lastIndexOf("/"),t.substring(0,lastIndex+1)}function capitalize(t){var e=t.substring(0,1)[0].toUpperCase().concat(t.substring(1));return e}function randomNumber(){return Math.floor(1e5*Math.random(1))}function toArray(t){var e,i=[];for(e in t)t.propertyIsEnumerable(e)&&i.push(t[e]);return i}function arrayCompare(t,e){var i,n=[];if(e.length===t.length){for(i=0;i<t.length;i++)n.push(t[i]===e[i]?!0:!1);return n}console.log("compare() :: arrays must have equal lengths")}function arrayReverse(t){var e,i,n=[],r=t.length;for(e=0;r>e;e++)i=t.pop(),n.push(i);return n}function arrayRandomize(t){var e,i,n,r,o=t.length;for(e=0;o>e;e++)i=t.pop(),n=Math.floor(Math.random(t.length)*t.length),r=t[n],t.splice(n,1,i),t.push(r);return t}function includeID(t,e,i){return function(){var n=Array.prototype.slice.call(arguments);return n.unshift(e),t.apply(this,n),i}}function GSAPEvent(t,e,i,n,r,o){var s,a,l,u=new Scene({paused:!0});if(void 0!==o)if(o.length>0){for(l=[n[r]],a=0;a<o.length;a++)l.push(o[a]);l.push(u),s=i[t].apply(e,l)}else s=i[t].call(e,n[r],u);else s=i[t].call(e,n[r],u);return n[r][t]=u,n[r][t].func=void 0!==s?s:function(){},function(){e.buttons[e.currentButton][t].play(),e.buttons[e.currentButton][t].func()}}function or(t,e){return e?e:t}function ifNot(t,e,i){return t===e?t:i}function isArray(t){return"object"==typeof t&&void 0!==t.length?!0:!1}function unNull(t){return void 0===t||null===t?!0:!1}function parent(t,e){return void 0!==t&&void 0!==t[e+""]?!0:!1}function forAll(t,e){var i,n;if(t.length>0)for(i=0,n<t.length;n>i;i++)t[e]()}function cbug(t){jQuery(".debug-modal").append(t+"<br />")}function SceneController(t){function e(){var t,e;if(void 0!==o.controller&&(void 0!==o.controller.trigger_next&&o.controller.trigger_next.disable(),void 0!==o.controller.trigger_back&&o.controller.trigger_back.disable(),void 0!==o.controller.doneTrigger&&o.controller.doneTrigger.disable(),o.controller.list.length>0))for(t=0,e=o.controller.list.length;e>t;t++)o.controller.list[t].item.disable();void 0!==o.toggleTrigger&&o.toggleTrigger.disable(),void 0!==o.audioTrigger&&o.audioTrigger.disable()}function i(){var t,e;if(void 0!==o.controller&&(void 0!==o.controller.trigger_next&&o.controller.trigger_next.enable(),void 0!==o.controller.trigger_back&&o.controller.trigger_back.enable(),void 0!==o.controller.doneTrigger&&o.controller.doneTrigger.enable(),o.controller.list.length>0))for(t=0,e=o.controller.list.length;e>t;t++)o.controller.list[t].item.enable();void 0!==o.toggleTrigger&&o.toggleTrigger.enable(),void 0!==o.audioTrigger&&o.audioTrigger.enable()}var n,r,o;return void 0!==t&&(n=void 0!==t.restrict?!0:!1,r=void 0!==t.scene?t.scene:void 0,audio=t.audioController?t.audioController:void 0),o={_loading:!1,scene:r,controller:void 0,progressBar:void 0,toggleTrigger:void 0,audioTrigger:void 0,progress:0,totalProgress:0,time:0,change:!0,userAction:!1,completed:!1,never_completed:!0,bounds_maxed:!1,interval:void 0,onStart:function(){},onFinish:function(){},audioController:audio,audioFile:void 0},o.kill=function(){this.scene.kill(arguments),this.change=!0,void 0!==o.audioController&&o.audioController.stopAll()},o.play=function(t){void 0!==o.audioController?(o.audioController.unmute(o.controller.audioID),o.audioController.resume(o.controller.audioID),o.stopped=!1,o.scene.play(t),o.change=!0):(o.stopped=!1,o.scene.play(t),o.change=!0)},o.pause=function(){o.scene.progress()>0&&o.scene.progress()<1&&(this.stopped=!0,this.scene.pause(),this.change=!0)},o.restart=function(t){this.scene.restart(),this.change=!0,void 0!==t?t===!0?this.play():t===!1?this.pause():this.play(t):this.play()},o.gotoAndPlay=function(t){this.scene.timeline.seek(t),this.scene.play(),this.change=!0},o.gotoAndStop=function(t){this.scene.timeline.seek(t),this.scene.pause(),this.change=!0},o.duration=function(){return o.scene.duration()},o.bind=function(t){var e;this.progressBar=void 0!==t.scrub?t.scrub:void 0;for(e in t)switch(e){case"audio":this.audioTrigger="object"!=typeof t[e]?new Button(t[e]):t[e];break;case"toggle":this.toggleTrigger="object"!=typeof t[e]?new Button(t[e]):t[e];break;case"restart":this.restartTrigger="object"!=typeof t[e]?new Button(t[e]):t[e]}void 0!==this.toggleTrigger&&(this.toggleTrigger.element.onmousedown=function(t,e,i){return function(){return e.active?(i.pause(),e.active=!1):(i.play(),e.active=!0),t.apply(this,arguments)}}(this.toggleTrigger.element.onmousedown,this.toggleTrigger,this)),void 0!==this.restartTrigger&&(this.restartTrigger.element.onmousedown=function(t,e,i){return function(){return 1===i.progress&&i.restart(!0),t.apply(this,arguments)}}(this.restartTrigger.element.onmousedown,this.restartTrigger,this)),void 0!==this.audioTrigger&&(this.audioTrigger.element.onmousedown=function(t,e){return function(){o.controller.audioController.muted?(o.controller.audioController.unmuteAll(),jQuery(e.element).find(".sound-on").active(),jQuery(e.element).find(".sound-off").inactive(),e.active=!0):(o.controller.audioController.muteAll(),jQuery(e.element).find(".sound-on").inactive(),jQuery(e.element).find(".sound-off").active(),e.active=!1),t.call(e),console.log(o.controller.audioController.muted)}}(this.audioTrigger.element.onmousedown,this.audioTrigger))},o.refresh=function(){o.completed=!1,o.progress=0,o.totalProgress=0,o.never_completed=!0,o.scrubber_pos=0,o.bounds_reached={top:0,left:0,width:0,height:0}},o.init=function(t,e){var i,r,s,a;void 0!==this.progressBar&&(r=o.progressBar.scrubber.style.width,s=o.progressBar.bar.style.width,i=s-r,o.refresh()),this.interval=setInterval(function(){if(void 0!==o.scene.timeline&&o.scene.timeline.duration()>0){if(o.progressBar&&(o._loading===!1?(o.progressBar.scrubber.show(),o.progressBar.fill.show(),o.toggleTrigger.enable()):(o.progressBar.scrubber.hide(),o.progressBar.fill.hide(),o.toggleTrigger.disable())),_ready&&!o._loading){if(o.progress=o.scene.timeline.progress(),void 0!==o.progressBar&&(a=o.progressBar.scrubber.dragEngine.isPressed),void 0!==o.audioController)if(o.scene.timeline._paused&&o.audioController.pause(o.controller.audioID),a)o.audioController.pause(o.controller.audioID),o.audioController.waiting=!0;else if(o.audioController.waiting===!0){var t=o.audioController.getRelative(o.progress);o.audioController.setPosition(o.controller.audioID,t),o.audioController.waiting=!1,o.audioController.resume(o.controller.audioID)}o.progress<1&&(checklocks(o.scene),o.completed=!1),void 0!==o.progressBar&&o.progress<1&&(o.scrubber_pos=o.scene.timeline.totalProgress()*i,n?o.never_completed?(a?(o.progressBar.scrubber.dragEngine.maxX>o.progressBar.scrubber.dragEngine.x&&o.progressBar.scrubber.dragEngine.applyBounds(o.reached_bounds),o.progressBar.scrubber.dragEngine.update()):(o.scene.timeline._paused||o.progress>o.totalProgress&&(o.reached_bounds={top:o.progressBar.scrubber.bounds.top,left:o.progressBar.scrubber.bounds.left,width:o.scrubber_pos+r,height:o.progressBar.scrubber.bounds.height},o.totalProgress=o.progress),TweenMax.set(o.progressBar.scrubber.id,{x:o.scrubber_pos})),o.scene.timeline._paused||void 0===o.reached_bounds||TweenMax.set(o.progressBar.fill.id,{width:o.reached_bounds.width})):(o.progressBar.scrubber.dragEngine.applyBounds(o.progressBar.scrubber.bounds),TweenMax.set(o.progressBar.fill.id,{width:s}),o.progressBar.scrubber.dragEngine.update(),o.bounds_maxed=!0,TweenMax.set(o.progressBar.scrubber.id,{x:o.scrubber_pos})):(TweenMax.set(o.progressBar.scrubber.id,{x:o.scrubber_pos}),TweenMax.set(o.progressBar.fill.id,{width:o.scrubber_pos+r}))),void 0!==o.toggleTrigger&&o.change&&(o.change=!1,1===o.progress?(jQuery(o.toggleTrigger.element).find(".restart").active(),jQuery(o.toggleTrigger.element).find(".play").inactive(),jQuery(o.toggleTrigger.element).find(".pause").inactive()):o.toggleTrigger.active?(jQuery(o.toggleTrigger.element).find(".restart").inactive(),jQuery(o.toggleTrigger.element).find(".play").inactive(),jQuery(o.toggleTrigger.element).find(".pause").active()):(jQuery(o.toggleTrigger.element).find(".restart").inactive(),jQuery(o.toggleTrigger.element).find(".play").active(),jQuery(o.toggleTrigger.element).find(".pause").inactive())),1!==o.progress||o.completed||(o.completed=!0,o.never_completed=!1,void 0!==o.progressBar&&(TweenMax.set(o.progressBar.scrubber.id,{x:i}),TweenMax.set(o.progressBar.fill.id,{width:s})),void 0!==o.toggleTrigger&&(jQuery(o.toggleTrigger.element).find(".play").inactive(),jQuery(o.toggleTrigger.element).find(".pause").inactive(),jQuery(o.toggleTrigger.element).find(".restart").active()))}}else void 0!==o.progressBar&&(o.progressBar.scrubber.hide(),o.progressBar.fill.hide(),o.toggleTrigger.disable());_ready&&o.controller&&o.controller.watch()},10),t?(void 0!==this.progressBar&&(this.progressBar.stopped=this.stopped=!0),void 0!==this.toggleTrigger&&(this.toggleTrigger.active=!0),this.pause()):(void 0!==this.progressBar&&(this.progressBar.stopped=this.stopped=!1),void 0!==this.toggleTrigger&&(this.toggleTrigger.active=!1),this.play()),e&&e()},o.swap=function(t,e){o.kill(),o.scene=t,e?o.scene.pause():o.scene.play()},o.load=function(t,n,s,a){function l(){i(),o._loading=!1}function u(){_ready&&(TweenMax.fromTo(t,.3,{opacity:0},{opacity:1,onComplete:l}),parent(a,"onFinish")&&a.onFinish(),clearInterval(o.waitForReady))}function c(){o.waitForReady=setInterval(u,500),o.scene=_root[s],a&&a.callback&&a.callback()}function h(){o.controller&&(o.audioFile=o.controller.audioPath+removeDir(removeExt(n))+".mp3",o.controller.audioController.getSoundById(o.controller.audioID)&&(o.controller.audioController.stopAll(),o.controller.audioController.destroySound(o.controller.audioID)),o.controller.audioID=removeDir(removeExt(o.audioFile)),o.controller.audioController.createSound({id:o.controller.audioID,url:o.audioFile,autoLoad:!0,autoPlay:!1,volume:100}),o.controller.audioController.load(o.controller.audioID,{onload:function(){this.mute(),this.play()},onplay:function(){c(),this.pause()}}))}function d(){jQuery(t).empty(),jQuery(t).load(n,function(){f=jQuery(this).find("img"),f.length>0?jQuery(f).on("load",function(){h()}):h()})}var f;return o._loading===!1&&(o._loading=!0,e(),_ready=!1,void 0!==r&&o.kill(),parent(a,"onStart")&&a.onStart(),TweenMax.to(t,.4,{opacity:0,onComplete:d})),this},o}function ModuleController(t,e,i){function n(t){return void 0===t?void 0:"soundManager"===t.type?(soundManager.relativePosition=function(){return this.position/this.duration*100},soundManager.getRelative=function(t){return this.getSoundById(u.audioID).duration*t},soundManager.setup({url:t.fallbackURL})):void 0}var r,o,s,a=0,l=0,u={current_module:0,scenes:void 0,current_scene:0,progress:void 0,moduleTitle:{id:void 0},sceneTitle:{id:void 0},trigger_next:void 0,trigger_back:void 0,doneTrigger:void 0,storage:{scenes:{},modules:{}},list:[]};if(u.onStart=function(){var t;if(void 0!==u.scenes&&void 0!==u.modules[u.current_module]&&TweenMax.fadeOut(u.sceneTitle.item.id,.5,function(){}),u.loader.play().show(),"undefined"==typeof _scene);else for(t in _scene)_scene[t]&&delete _scene[t];u.sceneController.refresh()},u.onFinish=function(){if(u.storage.scenes.completed){var t=removeDir(u.scenes[u.current_scene].url);t=removeExt(t),u.storage.scenes.completed[t]&&(u.sceneController.never_completed=!1)}0!==u.scenes.length&&void 0!==u.modules[u.current_module]&&(void 0!==u.moduleTitle.id&&(u.moduleTitle.item=new Text(u.moduleTitle.id,{value:u.modules[u.current_module].title})),void 0!==u.sceneTitle.id&&(u.sceneTitle.item=new Text(u.sceneTitle.id,{value:u.scenes[u.current_scene].title})),u.loader.kill().hide(),TweenMax.fadeIn(u.sceneTitle.item.id,.5)),u.autoPlay===!0&&u.sceneController.play(),s=u.current_scene>0?"active":"inactive",jQuery(u.trigger_back.id).addClass(s),jQuery(u.trigger_complete.element).inactive()},u.completeScene=function(){u.sceneController.never_completed=!1,u.sceneController.completed=!0,u.sceneController.userAction=!1},u.loadModule=function(t){l=0,u.completed=!1,void 0===u.audioPath&&(u.audioPath=t.audioPath),void 0!==u.audioPath&&u.audioPath!==t.audioPath&&(u.audioPath=t.audioPath),u.sceneController.load(u.stage,t.url,"_scene",{onStart:function(){u.onStart(),TweenMax.fadeOut(u.moduleTitle.item.id,.5),TweenMax.fadeOut(u.sceneTitle.item.id,.5)},onFinish:function(){u.scenes=[],TweenMax.fadeIn(u.moduleTitle.item.id,.5);for(l in u.modules[u.current_module])"s"===String(l).substring(0,1)&&u.scenes.push(u.modules[u.current_module][l]);u.sceneController.init(!0),u.audioPath=t.audioPath,u.onFinish()}})},u.nextModule=function(){!u._loading&&u.current_module>=0&&u.current_module<u.modules.length-1&&(jQuery(u.trigger_complete.element).inactive(),createBlock("s",u.scenes[u.current_scene].url,u.storage.scenes,"completed"),createBlock("m",u.modules[u.current_module].url,u.storage.modules,"completed"),jQuery(u.list[u.current_module].item.checkbox).complete(),u.current_module+=1,u.current_scene=0,updateModuleList(u.current_module,u),u.loadModule(u.modules[u.current_module]))},u.nextScene=function(){!u._loading&&u.current_scene<u.scenes.length-1&&(u.scenes[u.current_scene].progress=u.sceneController.progress,createBlock("s",u.scenes[u.current_scene].url,u.storage.scenes,"completed"),u.current_scene+=1,u.sceneController.load(u.stage,u.scenes[u.current_scene].url,"_scene",{onStart:u.onStart,onFinish:u.onFinish}))},u.previousScene=function(){!u._loading&&u.current_scene>0&&(u.scenes[u.current_scene].progress=u.sceneController.progress,1===u.scenes[u.current_scene].progress&&createBlock("s",u.scenes[u.current_scene].url,u.storage.scenes,"completed"),u.current_scene-=1,u.sceneController.load(u.stage,u.scenes[u.current_scene].url,"_scene",{onStart:u.onStart,onFinish:u.onFinish}))},u.watch=function(){var t;u.current_scene<u.scenes.length-1?(t=checkState(u.scenes[u.current_scene],"completed"),t&&u.sceneController.userAction===!1?u.trigger_next.active||(u.trigger_next.active=!0,jQuery(u.trigger_next.element).active()):u.trigger_next.active&&(u.trigger_next.active=!1,jQuery(u.trigger_next.element).inactive())):u.trigger_next.active&&(u.trigger_next.active=!1,jQuery(u.trigger_next.element).inactive()),u.current_scene>0?u.trigger_back.active||(u.trigger_back.active=!0,jQuery(u.trigger_back.element).active()):u.trigger_back.active&&(u.trigger_back.active=!1,jQuery(u.trigger_back.element).inactive()),u.sceneController.never_completed===!1&&u.sceneController.completed&&!u.sceneController.userAction&&(t=checkState(u.scenes[u.current_scene],"completed"),t||(u.scenes[u.current_scene].completed=!0)),t=checkStates(u.scenes,"completed"),t&&(u.completed=!0,jQuery(u.trigger_complete.element).active())},void 0!==e)if(void 0!==e.audioController&&(u.audioController=n(e.audioController),u.audioController.waiting=!1,e.soundEvents&&e.soundEvents.select&&u.audioController.createSound({id:"global_select",url:e.soundEvents.select,autoLoad:!0,autoPlay:!1,volume:100})),u.modules=or(void 0,e.modules),u.root=or(void 0,e.root),void 0===u.modules||void 0===u.root)console.log("You must include a course object and an array of modules - {modules:[], course:object}");else for(u.autoPlay=void 0!==e.autoPlay?e.autoPlay:!1,u.onStart=or(u.onStart,e.onStart),u.onFinish=or(u.onFinish,e.onFinish),u.stage=or("#stage",e.stage),u.moduleTitle.id=or(void 0,e.moduleTitle),u.sceneTitle.id=or(void 0,e.sceneTitle),u.moduleTitle.item=or(void 0,new Text(e.moduleTitle)),u.sceneTitle.item=or(void 0,new Text(e.sceneTitle)),void 0!==e.back&&(u.trigger_back="object"!=typeof e.back?new Button(e.back):e.back,u.trigger_back.bindOn({mousedown:function(){u.previousScene()}})),void 0!==e.next&&(u.trigger_next="object"!=typeof e.next?new Button(e.next):e.next,u.trigger_next.bindOn({mousedown:function(){u.nextScene()}})),void 0!==e.complete&&(u.trigger_complete="object"!=typeof e.complete?new Button(e.complete):e.complete,u.trigger_complete.bindOn({mousedown:function(){u.nextModule()}})),void 0!==e.loader&&(u.loader={},void 0!==e.loader.wrapper&&"string"==typeof e.loader.wrapper&&(u.loader=new Item(e.loader.wrapper,{paused:!0})),void 0!==e.loader.spinner&&"string"==typeof e.loader.spinner&&(u.loader.spinner=new Item(e.loader.spinner,{paused:!0}),u.loader.spinner.to(1,{rotation:"+=360",ease:"linear",onComplete:u.loader.spinner.restart}),u.loader.addAffectee("spinner",u.loader.spinner))),o=u.modules,u.modules=[],_root.sceneController=new SceneController({restrict:!0,audioController:u.audioController}),_root.sceneController.controller=u,u.sceneController=_root.sceneController,u.sceneController.controller=u,a=0;a<o.length;a++)r=function(t){var n,r;jQuery.getJSON(o[t]+"/scenes.json",function(s){function a(i){u.modules[t];u.current_scene=0,u.current_module=t,updateModuleList(i,u),u.loadModule(u.modules[u.current_module]),void 0!==e.welcomeMessage&&TweenMax.to(e.welcomeMessage,.4,{y:300,opacity:0,ease:"Back.easeIn",onComplete:function(){TweenMax.set(e.welcomeMessage,{css:{visibility:"hidden"}})}})}u.modules[t]={};for(n in s)"module"===n?(u.modules[t].title=s[n].title,u.modules[t].url=s[n].url,u.modules[t].audioPath=s[n].audio,r=u.modules[t].link=new Button("#"+o[t],{checkbox:".checkbox"}),u.list.push({id:o[t],item:r}),u.list[l].item.completed=!1,u.list[l].item.active=!1,u.list[l].item.index=l,function(t){u.list[l].item.bindOn({mousedown:function(){u.audioController&&u.audioController.getSoundById("global_select")&&u.audioController.getSoundById("global_select").play(),a(t)}})}(l),l+=1):(u.modules[t][n]={},u.modules[t][n].url=s[n].url,u.modules[t][n].title=s[n].title);i&&t==o.length-1&&i()})}(a);else console.log("you must have scenes and a course passed in the options, otherwise this will not do anything");return u}function getChar(t){return null===t.which?String.fromCharCode(t.keyCode):0!==t.which&&0!==t.charCode?String.fromCharCode(t.which):null}function GSAPObject(t){function e(t,e,r,s,a,l){var u,c;if(l=l?l:void 0,void 0!==o.wrapper&&void 0!==o.wrapper.id&&(t="string"!=typeof t?t:o.wrapper.id+" "+t),s&&(c=void 0!==s.sync?s.sync:void 0,u=void 0!==s.repeat?s.repeat:void 0,l=void 0!==s.offset?s.offset:void 0),r.length<2){for(i in o.defaults)r[0][i]=r[0][i]?r[0][i]:o.defaults[i];GSAP_method(o.timeline,t,e,{options:r[0],offset:l,sync:c,repeat:u},a)}else{for(i in o.defaults)r[0][i]=r[i]?r[i]:o.defaults[i];GSAP_method(o.timeline,t,e,{options:r[0],options2:r[1],offset:l,sync:c,repeat:u},a)}if(0===o._elements.length)o._elements.push(t);else for(i=0,n<o._elements.length;n>i;i++)o._elements[i]!==t&&o._elements.push(t)}var i,n,r,o=new GSAP_Router(!0);return o.timeline=new TimelineMax({defaultOverwrite:"auto"}),o._elements=[],o.defaults={},o.affectees={length:0},o.atEnd=!1,o.locks=[],o.type="GSAPObject",t&&(r=void 0===t.affectees?!0:t.affectees,o.paused=void 0!==t.paused?t.paused:!1,o.paused&&o.timeline.pause(),o.defaults.ease=t.ease?t.ease:"Sine.easeOut",o.defaults.transformOrigin=t.transformOrigin?t.transformOrigin:"50% 50%"),r!==!1&&(o.affect=function(t,e){void 0===e&&(e=""+o.affectees.length),o.addAffectee(e,t)},o.addAffectee=function(t,e){o.affectees[t]=e.timeline,o.affectees.length+=1},o.removeAffectee=function(t){delete o.affectees[t],o.affectees.length-=1}),o.jig=function(t,e,n,r){var s,a,l;void 0!==o.wrapper?void 0!==o.wrapper.id&&(l=o.wrapper.id+" "+t):l=t,r&&(a=or(void 0,r.sync),s=or(void 0,r.repeat));var u=[];for(i in n)u[i]=void 0===n[i]?o.defaults[i]:n[i];for(i in o.defaults)void 0===u[i]&&(u[i]=o.defaults[i]);return void 0!==a&&isNaN(a)&&(a=this.timeline.getLabelTime(a)),this.timeline.jig?this.timeline.jig.apply(this.timeline,[l,e,u,a,s]):console.log("You need to include a version of jig.js"),this},o.staggerJig=function(t,e,i,n){var r,s,a,l,u;if(n&&(a=or(void 0,n.sync),s=or(void 0,n.repeat),l=or(void 0,n.offset)),void 0!==a?isNaN(a)&&(a=this.timeline.getLabelTime(a)):a=0,"string"==typeof t)void 0!==o.wrapper?void 0!==o.wrapper.id&&(u=getNodes(o.wrapper.id+" "+t)):u=getNodes(t),"object"!=typeof u&&(u=[u]);else if(void 0!==o.wrapper){if(void 0!==o.wrapper.id)for(r=0;r<t.length;r++)u[r]=getNodes(o.wrapper.id+" "+t[r])}else u=t;if(this.timeline.jig)for(r=0;r<u.length;r++)this.timeline.jig.apply(this.timeline,[u[r],e,i,a,s]),a+=l;else console.log("You need to include a version of jig.js");return this},o.to=function(t,i,n,r){return e(t,i,[n],r,"to"),this},o.from=function(t,i,n,r){return e(t,i,[n],r,"from"),this},o.fromTo=function(t,i,n,r,o){return e(t,i,[n,r],o,"fromTo"),this},o.staggerTo=function(t,i,n,r){return e(t,i,[n],r,"staggerTo",.3),this},o.staggerFrom=function(t,i,n,r){return e(t,i,[n],r,"staggerFrom",.3),this},o.staggerFromTo=function(t,i,n,r,o){return e(t,i,[ops,r],o,"staggerFromTo",.3),this},o.yoyo=function(t,i,n,r,o){{var s,a,l,u,c,h=0,d={},f={};jQuery(t).parseStyles()}if(void 0!==r)a=void 0!==r.sync?h+=1:void 0,l=void 0!==r.repeat?h+=1:void 0,u=void 0!==r.offset?h+=1:void 0;else{for(s in n)d[s]="scale"!==s?0:1;f=n}if(h>0){c=r;for(s in n)d[s]="scale"!==s?0:1;f=n}else c=o;return console.log(t,d,f,c),e(t,i,[d,f],c,"yoyo"),this},o.addLabel=function(t,e){return e?this.timeline.add(t,e):this.timeline.add(t),this},o.at=function(t,e,i){return i&&this.timeline.add(i,t),this.timeline.addCallback(e,t),this},o.hideAll=function(){var t,e;for(t=0,e=o._elements.length;e>t;t++)TweenMax.set(o._elements[t],{css:{visibility:"hidden",opacity:"0"}});return this},o.showAll=function(){var t,e;for(t=0,e=o._elements.length;e>t;t++)TweenMax.set(o._elements[t],{css:{visibility:"visible",opacity:"1"}});return this},o.show=function(t){if(void 0===t&&"string"!=typeof t){var e,i;for(e=0,i=this._elements.length;i>e;e++)TweenMax.set(this._elements[e],{css:{visibility:"visible",opacity:"1","pointer-events":"auto"}})}else TweenMax.set(t,{css:{visibility:"visible",opacity:"1","pointer-events":"auto"}});return this},o.hide=function(t){if(void 0===t&&"string"!=typeof t){var e,i;for(e=0,i=this._elements.length;i>e;e++)TweenMax.set(this._elements[e],{css:{visibility:"hidden",opacity:"0","pointer-events":"none"}})}else TweenMax.set(t,{css:{visibility:"hidden",opacity:"0","pointer-events":"none"}});return this},o.endAt=function(t){var e=t/1e3;return this.timeline.addCallback(function(){o.atEnd=!0},e),this},o.loop=function(t){o.set("forever"===t||void 0===t?{repeat:-1}:{repeat:t})},o}function GSAP_Router(){var t={};return t.kill=function(e,i,n){this.timeline.kill();var r;if(void 0===n&&t.affectees.length>0)for(r in t.affectees)"length"!==r&&t.affectees[r].kill.apply(t.affectees[r],[e]);return t},t.play=function(e,i,n,r){function o(t){var n;if(void 0===r||r===!0&&t.affectees.length>0)for(n in t.affectees)"length"!==n&&(0===t.timeline.progress()&&t.affectees[n].play.apply(t.affectees[n],[e,i]),t.timeline.progress()>0&&t.affectees[n].restart())}return console.log(this),1===this.timeline.progress()?(o(this),this.timeline.restart()):(o(this),this.timeline.play(e)),this.atEnd=!1,t},t.pause=function(e,i,n){this.timeline.pause();var r;if(void 0===n||n===!0&&t.affectees.length>0)for(r in t.affectees)"length"!==r&&t.affectees[r].pause.apply(t.affectees[r],[e,i]);return t},t.restart=function(e,i,n,r){function o(t){var e;if(console.log(t,t.timeline.progress()),void 0===r||r===!0&&t.affectees.length>0)for(e in t.affectees)"length"!==e&&(0===t.timeline.progress()&&t.affectees[e].play.apply(t.affectees[e]),t.timeline.progress()>0&&t.affectees[e].restart())}return console.log("restarting "+this),o(this),this.timeline.restart(),this.atEnd=!1,t},t.set=function(e,i){return void 0===i.immediateRender&&(i.immediateRender=!1),void 0===i.immediateRender&&(i.immediateRender=!0),this.timeline.set(e,i),t},t.reverse=function(){return this.timeline.reverse(),t},t.gotoAndPlay=function(e){return this.timeline.resume(e),this.timeline.play(),this.atEnd=!1,t},t.gotoAndStop=function(e){return this.timeline.resume(e),this.timeline.pause(),this.atEnd=!1,t},t.clear=function(){return this.timeline.clear(),t},t}function Scene(t){var e=new GSAPObject(t);return e.stopped=!1,e.progress=function(){return e.timeline.totalProgress()},e.duration=function(){return e.timeline.totalDuration()},e.locks=[],e.type="scene",e.wipe=function(){return e.timeline.addCallback(function(){e.clear()}),e},t&&(t.paused?e.timeline.pause():e.timeline.play(),e.wrapper=t.wrapper?new Item(t.wrapper):void 0,e.name=t.name?t.name:"scene",e.timeline.name=e.name,e.scoID=t.scoID?t.scoID:"null",e.soundtrack=t.soundtrack?t.soundtrack:void 0,overwrite=t.defaultOverwrite?t.defaultOverwrite:"auto"),e}function Item(t,e){var i,n,r;return e&&(n=e.defaultOverwrite?e.defaultOverwrite:"auto",r=or(!1,e.paused)),i=new Scene({affectees:!0,defaultOverwrite:n,paused:r}),i.type="item",i.id=t,i.element=getNodes(t),i._elements.push(i.element),i.actions=[],i.jig=includeID(i.jig,i.id,i),i.to=includeID(i.to,i.id,i),i.fromTo=includeID(i.fromTo,i.id,i),i.from=includeID(i.from,i.id,i),i.yoyo=includeID(i.yoyo,i.id,i),i.set=includeID(i.set,i.id,i),i}function Text(t,e){var i=new Item(t,e);return i.type="text",e&&(i.value=or(void 0,e.value),i.style=or(void 0,e.style)),i.value&&jQuery(t).empty().append(""+i.value),i.style&&jQuery(t+"").addClass(i.style),i}function Button(t,e){var i=new Item(t,e);return i.type="button",jQuery(i.id).css({cursor:"pointer","-webkit-user-select":"none","-moz-user-select":"none","-ms-user-select":"none"}),e&&(i.group=or(void 0,e.group),i.checkbox=or(void 0,e.checkbox),i.checkbox=e.checkbox?t+" "+e.checkbox:void 0),i.active=!1,i.down=!1,i.over=!1,i.locked=!1,getNodes("body").onmouseup=function(t){return function(){i.down=!1,null!==t&&t.call(arguments)}}(getNodes("body").onmouseup),i.element.onmouseover=function(){return i.over=!0,i},i.element.onmouseout=function(){return i.over=!1,i},i.element.onmousedown=function(){return i.down=!0,i.checkbox&&(i.active?(jQuery(i.checkbox).removeClass("active"),i.active=!1):(jQuery(i.checkbox).addClass("active"),i.active=!0)),i},i.element.onmouseup=function(){return i.down=!1,i},i.auto=function(t,e,n){var r;if(unNull(i.element[t]))return!1;if(i.element[t](),e)for(r in e)i[r]=e[r];return void 0!==n&&"function"==typeof n&&n(),i},i.bind=function(t,e){function n(t,e){var n,r=i;if(!this.locked){if(r.actions.length)for(n=0;n<r.actions.length;n++)r.actions[n]();r.timeline.call(function(){r.active=!1,console.log(r.id+" is not active")}),r.timeline.isActive()?e?r.active?r.play():r.pause():r.play():r.restart(),r.active=r.active?!1:!0}}return this.element[t]=function(t){return function(){return n(t,e),t.apply(this,arguments)}}(this.element[t]),this.pause(),this},i.toggle=function(t,e){this.active?t[e[1]]():t[e[0]]()},i.on=function(t,e){return t||console.log("You need to specify a mouseEvent"),e||console.log("You need to specify a callback"),t&&e?(i.element[t]=function(t,i){return function(){i.locked||(e(),t.call(this,arguments))}}(i.element[t],i),this):null},i.lock=function(t){var e,n,r,o,s;return jQuery(i.element).css("cursor","auto"),t?(e=t.on?t.on:i,n=t.from?t.from:"z",r=t.until?t.until:"z",o="lock_"+e.locks.length+"f",s="lock_"+e.locks.length+"u","z"===n&&(n=0),e.timeline.addLabel(o,n),"z"!==r&&e.timeline.addLabel(s,r),e.locks.push({from:{label:o,reached:!1},until:{label:s,reached:!1},item:i}),console.log(e.type),void 0===e.controller&&(e.interval=setInterval(function(){e.timeline.progress()>0&&e.timeline.progress()<1&&(console.log("checking"),checklocks(e))},100))):i.locked=!0,i},i.unlock=function(){return jQuery(i.element).css("cursor","pointer"),i.locked=!1,i},i.clearlocks=function(){if(void 0!==i.interval)try{clearInterval(i.interval)}catch(t){}return i.interval=void 0,i.locks=[],i
},i.enable=function(){i.unlock(),jQuery(i.id).removeClass("disabled").children().removeClass("disabled")},i.disable=function(){i.lock(),jQuery(i.id).addClass("disabled").children().addClass("disabled")},i.bindOn=function(t){return t.mouseover&&(i.element.onmouseover=function(t,e,n){return function(){e.locked||(n.mouseover.call(e,i.id),t.call(e,t))}}(i.element.onmouseover,i,t)),t.mouseout&&(i.element.onmouseout=function(t,e,n){return function(){e.locked||(n.mouseout.call(e,i.id),t.call(e,t))}}(i.element.onmouseout,i,t)),t.mousedown&&(i.element.onmousedown=function(t,e,n){return function(){e.locked||(n.mousedown.call(e,i.id),t.call(e,t))}}(i.element.onmousedown,i,t)),i},i}function HotSpot(t,e){var i=new Button(t,e);return i.over=!1,e&&(i.expecting=e.expecting?e.expecting:"null",i.index=e.index?e.index:0,jQuery(t).css("pointer-events","none")),i}function Drag(t,e){var i=new Button(t,e);i.dragging=!1,i.origin=jQuery(t).getStyles(),i.bounds=e&&e.bounds?getRect(e.bounds):"null",i.type="drag",i.disable=function(t){return function(){i.dragEngine.disable(),t.call(i,t)}}(i.disable),i.enable=function(t){return function(){i.dragEngine.enable(),t.call(i,t)}}(i.enable),i.bindOn=function(t){return function(e){e.whileDragging&&i.whileDragging&&i.draggingTicker&&(i.whileDragging=e.whileDragging),t.call(e,i)}}(i.bindOn),i.onDrag=function(){i.dragging=!0,i.dragEngine.update(),unNull(i.interval)&&i.draggingTicker()},i.whileDragging=function(){},i.draggingTicker=function(){i.interval=function(){i.dragging?(i.whileDragging(),window.requestAnimationFrame(i.interval)):i.interval=null},window.requestAnimationFrame(i.interval)},i.onDragEnd=function(){i.dragging=!1},i.rebound=function(){TweenMax.to(this.element,.3,{x:0,y:0})},i.snap=function(){};var n;return e&&(e.bounds&&(n=e.bounds.id?e.bounds.id:e.bounds),e.onDragEnd&&(i.onDragEnd=function(t,e,n){return function(){n.call(t,i.id),e.call(i,e)}}(i,i.onDragEnd,e.onDragEnd)),e.onDrag&&(i.onDrag=function(t,e,n){return function(){n.call(t,i.id),e.call(i,e)}}(i,i.onDrag,e.onDrag)),i.index=e.index?e.index:0,e.parent&&(e.parent.onDrag&&(i.onDrag=function(t,n){return function(){e.parent.onDrag(),n.call(t,i.id)}}(i,i.onDrag)),e.parent.onDragEnd&&(i.onDragEnd=function(t,n){return function(){e.parent.onDragEnd(),n.call(t,i.id)}}(i,i.onDragEnd)))),i.dragEngine=Draggable.create(i.element,{type:"x,y",bounds:n,onDrag:i.onDrag,onDragEnd:i.onDragEnd})[0],i}function ScrubBar(t,e){var i,n,r,o,s=new Item(t,e);return e&&(s.stopped=e.paused?e.paused:!1),s.dragging=!1,s.complete=!1,s.interval=void 0,s.style={width:parseInt(jQuery(t).css("width"),10)},s.watch=function(t){o=t?!0:!1,o?this.interval||(this.interval=setInterval(function(){i=1e3*s.controller.duration(),n=Draggable.get(s.scrubber.id).x,r=n/(s.bar.style.width-s.scrubber.style.width),s.controller.gotoAndStop(i*r/1e3)},1e3/30)):(clearInterval(this.interval),this.interval=void 0,this.controller.stopped?this.controller.pause():this.controller.play())},s.onDrag=function(){s.watch(!0),this.dragging=this.scrubber.dragging},s.onDragEnd=function(){s.watch(!1)},s.bind=function(t){t&&(t.bar&&(s.bar=t.bar),t.scrubber&&(s.scrubber=t.scrubber),t.controller&&(s.controller=t.controller),t.fill&&(s.fill=t.fill))},s}function ProgressBar(t,e){var i=new Item(t,e);return e&&(i.stopped=e.paused?e.paused:!1,e.scrubber&&(i.scrubber=e.scrubber)),i.style={width:parseInt(jQuery(t).css("width"),10)},i.getProgress=function(){},i.setProgress=function(){},i}function FillBar(t,e){var i=new Item(t,e);return i.style={width:parseInt(jQuery(t).css("width"),10)},i}function Scrubber(t,e){var i=new Drag(t,e);return i.style={width:parseInt(jQuery(t).css("width"),10)},i.down=!1,e&&(i.bar=e.bar?e.bar:"null"),i}function ClickToPresent(t,e,i){var n,r,o={};return o.controller=new SceneController({scene:e[0]}),void 0===window._ready&&(window._ready=!0),o.scenes=e,o.hotspots={},o.modalTriggers={},o.current_scene=0,o.wrapper=t,o.interval,o.onComplete=function(){},i&&(o.onComplete=i.onComplete?i.onComplete:function(){},o.controller.userAction=!0),o.hide=function(){for(n=0,r=o.scenes.length;r>n;n++)void 0!==o.scenes[n].wrapper?n!==o.current_scene&&o.scenes[n].wrapper.hide():n!==o.current_scene&&o.scenes[n].hideAll();return this},o.show=function(){for(n=0,r=o.scenes.length;r>n;n++)void 0!==o.scenes[n].wrapper?n===o.current_scene&&o.scenes[n].wrapper.show():n===o.current_scene&&o.scenes[n].showAll();return this},o.exit=function(t,e){return o.modalTriggers["scene_"+e]=new Button(t).bindOn({mousedown:function(){o._loading||(o._loading=!0,o.modalTriggers.active=!0,TweenMax.fadeOut(o.wrapper,.5,function(){o.current_scene=e,o.hide(),TweenMax.set(o.wrapper,{css:{visibility:"hidden","pointer-events":"none"}}),o.controller.kill(),o._loading=!1}))}}),this},o.hotspot=function(t,e){var i;return i=void 0===t.id?new Button(t):t,i.element.onmousedown=function(t,e,r){return function(){if(!o._loading){o._loading=!0,i.active=!0,t.call(this),o.goTo(r,function(){o._loading=!1,console.log("no longer loading")}),jQuery(o.hotspots[n]).addClass("active");for(n in o.hotspots)n!=="scene_"+r&&(o.hotspots[n].active=!1,jQuery(o.hotspots[n]).removeClass("active"))}}}(i.element.onmousedown,i,e),o.hotspots["scene_"+e]=i,this},o.triggers=function(t){return"object"==typeof t&&(void 0!==t.next&&(o.trigger_next=t.next?new Button(t.next):void 0),void 0!==t.previous&&(o.trigger_back=t.previous?new Button(t.previous):void 0)),"string"==typeof t&&(o.trigger_next=new Button(t)),void 0!==o.trigger_next&&o.trigger_next.bindOn({mousedown:function(){o.trigger_next.locked||o.next()}}),void 0!==o.trigger_back&&o.trigger_back.bindOn({mousedown:function(){o.trigger_back.locked||o.previous()}}),this},o.goTo=function(t,e){function i(){o.current_scene=t,o.hide(),TweenMax.set(o.wrapper,{css:{visibility:"hidden","pointer-events":"none"}}),o.controller.kill(),o.controller.swap(o.scenes[o.current_scene],!0),o.refresh(),"function"==typeof e&&e()}return setStates(o.hotspots,"locked",!0),void 0!==o.trigger_next&&(o.trigger_next.locked=!0),void 0!==o.trigger_back&&(o.trigger_back.locked=!0),void 0!==o.modalTriggers.active&&o.modalTriggers.active!==!1?i():TweenMax.fadeOut(o.wrapper,.5,i),this},o.next=function(){return setStates(o.hotspots,"locked",!0),o.trigger_next.locked=!0,o.trigger_back.locked=!0,TweenMax.fadeOut(o.wrapper,.5,function(){o.current_scene+=1,o.hide(),TweenMax.set(o.wrapper,{css:{visibility:"hidden"}}),o.controller.kill(),o.controller.swap(o.scenes[o.current_scene],!0),o.refresh()}),this},o.previous=function(){return setStates(o.hotspots,"locked",!0),o.trigger_next.locked=!0,o.trigger_back.locked=!0,TweenMax.fadeOut(o.wrapper,.5,function(){o.current_scene-=1,o.hide(),TweenMax.set(o.wrapper,{css:{visibility:"hidden"}}),o.controller.kill(),o.controller.swap(o.scenes[o.current_scene],!0),o.refresh()}),this},o.refresh=function(){var t=void 0!==o.scenes[o.current_scene-1]?!0:!1,e=void 0!==o.scenes[o.current_scene+1]?!0:!1,i=void 0!==o.trigger_next?!0:!1,n=void 0!==o.trigger_back?!0:!1;return n&&jQuery(o.trigger_back.id).html(t?"scene"!==o.scenes[o.current_scene-1].id&&void 0!==o.scenes[o.current_scene+1].id?""+o.scenes[o.current_scene-1].id:"Previous":"..."),i&&jQuery(o.trigger_next.id).html(e?"scene"!==o.scenes[o.current_scene+1].id&&void 0!==o.scenes[o.current_scene+1].id?""+o.scenes[o.current_scene+1].id:"Next":"..."),console.log(o.current_scene+" === "+(parseInt(o.scenes.length,10)-1)),o.current_scene===o.scenes.length-1&&(i&&o.trigger_next.disable(),n&&o.trigger_back.enable(),o.onComplete()),0===o.current_scene&&(i&&o.trigger_next.enable(),n&&o.trigger_back.disable()),o.current_scene<o.scenes.length-1&&o.current_scene>0&&(i&&o.trigger_next.enable(),n&&o.trigger_back.enable()),o.show(),o.controller.play(),TweenMax.set(o.wrapper,{css:{visibility:"visible","pointer-events":"auto"}}),TweenMax.fadeIn(o.wrapper,.5,function(){setStates(o.hotspots,"locked",!1)}),this},void 0===o.trigger_next&&void 0===o.trigger_back&&TweenMax.set(o.wrapper,{css:{visibility:"hidden","pointer-events":"none"}}),o.controller.init(!0),o}function Collage(t,e,i,r,o){function s(t,e){for(var i in t)"focal"!==i&&"axisrandom"!==i&&(t[i]=parseInt(t[i],10));for(t.xrandom=isNaN(t.xrandom)?e:t.xrandom,t.yrandom=isNaN(t.yrandom)?e:t.yrandom,t.zrandom=isNaN(t.zrandom)?e:t.zrandom,i=0,j=f.length;i<j;i++)u=String("x"+f[i]),t[u]=isNaN(t[u])?e:t[u],u=String("y"+f[i]),t[u]=isNaN(t[u])?e:t[u],u=String("z"+f[i]),t[u]=isNaN(t[u])?e:t[u];return t.x=isNaN(t.x)?e:t.x,t.y=isNaN(t.y)?e:t.y,t.z=isNaN(t.z)?e:t.z,t.rotx=isNaN(t.rotx)?e:t.rotx,t.roty=isNaN(t.roty)?e:t.roty,t.rotz=isNaN(t.rotz)?e:t.rotz,t.rotrandom=isNaN(t.rotrandom)?e:t.rotrandom,t}function a(e,i,r){function a(){return void 0!==i.rotrandom&&i.rotrandom>1&&0===Math.floor(2*Math.random())?-1:1}for(i=void 0===i?{}:s(i,0),l=0,u=e.length;u>l;l++)void 0===e[l].id&&(e[l]={id:e[l]});void 0===r?(r.rows=2,r.gutter=10):(r.rows=void 0===r.rows?2:r.rows,r.gutter=void 0===r.gutter?2:r.gutter,r.focal=void 0===r.focal?void 0:r.focal,void 0!==r.focal&&void 0===r.focal.id&&(r.focal={id:r.focal}));var l,u,c,c,h,d;d=e.length,h=e.length/r.rows,n=Math.floor(h);var f=n%1;c=Math.floor(f);var p=e.slice(),g=[],m={},_={};for(l=0,u=r.rows;u>l;l++){var v=[],y=0;if(_={top:0,left:0},console.log(m),void 0!==m.height&&(_.top+=m.height+(i.y*(l+1)+r.gutter)),n<h&&p.length>h+1)var x=!0;else x=!1;for(;v.length<n;)p.length>0&&v.length>0&&(m=jQuery(v[0].id).parseStyles()),v.unshift(p.shift()),y>0?isNaN(m.width)||isNaN(i.x)||(_.left+=Math.floor(m.width*i.x+(i.x*(l+1)+r.gutter)),_.left+=Math.floor(Math.random()*i.xrandom)*(m.width/100)*a()):(m=jQuery(v[0].id).parseStyles(),x&&(_.left+=Math.floor(m.width*r.x/n)),_.left+=Math.floor(Math.random()*i.xrandom)*(m.width/100)*a()),TweenMax.set(v[0].id,{rotationX:"+="+(i.rotx+i.rotx*Math.floor(Math.random()*i.rotrandom))*a(),rotationY:"+="+(i.roty+i.roty*Math.floor(Math.random()*i.rotrandom))*a(),rotationZ:"+="+(i.rotz+i.rotz*Math.floor(Math.random()*i.rotrandom))*a()}),_.top+=Math.floor(Math.random()*i.yrandom)*(m.height/100)*a(),jQuery(v[0].id).css(_),y++;y>0&&l===u-1&&n!==h&&(p.length>0&&v.length>0&&(m=jQuery(v[0].id).parseStyles()),v.unshift(p.shift()),isNaN(m.width)||isNaN(i.x)||(_.left+=Math.floor(m.width*i.x+(i.x*(l+1)+r.gutter)),_.left+=Math.floor(Math.random()*i.xrandom)*(m.width/100)*a()),TweenMax.set(v[0].id,{rotationX:"+="+(i.rotx+i.rotx*Math.floor(Math.random()*i.rotrandom))*a(),rotationY:"+="+(i.roty+i.roty*Math.floor(Math.random()*i.rotrandom))*a(),rotationZ:"+="+(i.rotz+i.rotz*Math.floor(Math.random()*i.rotrandom))*a()}),_.top+=Math.floor(Math.random()*i.yrandom)*(m.height/100)*a(),jQuery(v[0].id).css(_)),g.push(arrayReverse(v))}return _.left+=m.width,_.top+=m.height,void 0!==r.focal&&void 0!==r.focal.id&&(m=jQuery(r.focal.id).parseStyles(),TweenMax.set(r.focal.id,{x:_.left/2-m.width/2,y:_.top/2-m.height/2})),jQuery(t).css({width:_.left,height:_.top}),o&&o(),g}var l,u,c="string"==typeof i?i:r,h="string"==typeof r?i:r,d={},f=["sine","cos","tan"];d.pile=function(t){return t.gutter=void 0===t.gutter?0:t.gutter,t.gutter-=100,a(e,{yrandom:10*t.yrandom,xrandom:10*t.xrandom,rotz:5*t.rotz,rotrandom:5*t.rotrandom,y:1*t.x,x:1*t.y},t)},d.square=function(t){return a(e,{rotx:t.rotx-1,roty:t.roty-1,rotz:t.rotz-1,y:1*t.x,x:1*t.y},t)};var p,g;return void 0===c&&(c="pile"),void 0!==d[c]&&(l=d[c],h=void 0===h?{}:h,s(h,1),void 0!==e[0].substring?p=e[0]:void 0!==e[0].id&&(p=e[0].id),g=0,l.checkComputedStyles=setInterval(function(){(400===g||jQuery(p).parseStyles().width>0)&&(clearInterval(l.checkComputedStyles),l=l(h)),g++},10)),l}function Test(t){var e={id:or("untitled",t.id),maxAttempts:or(void 0,t.maxAttempts),guide:or(!1,t.guide),answers:or([],t.answers),onSolve:or(function(){},t.onSolve),onWrong:or(function(){},t.onWrong),onUnChoose:or(function(){},t.onUnChoose),onChoose:or(function(){},t.onChoose)};return e.multiple=e.answers.length>1?!0:!1,e.testEvents={onSolve:e.onSolve,onWrong:e.onWrong,onChoose:e.onChoose,onUnChoose:e.onUnChoose},e}function Choice(){return q={},q.checkAnswers=function(t){var e,i=0,n=0;for(e in t.buttons)t.buttons[e].active&&(n+=1,q.isCorrect(t,e)&&(i+=1));i===t.answers.length&&n===t.answers.length?t.onSolve():t.onWrong()},q.isCorrect=function(t,e){var i,n=!1,e=parseInt(e,10);for(i=0;i<t.answers.length;i++)e===parseInt(t.answers[i],10)&&(n=!0);return n},q.type="choice",q}function Matching(){var t={};return t.checkAnswers=function(t,e,i){var n,r=0;for(n=0;n<t.buttons.length;n++)t.slots[n].active&&(t.answers[e]===n?(t.slots[n].matched=!0,i(e,t.buttons[n],t.slots[n])):t.buttons[e].rebound());for(n=0;n<t.slots.length;n++)t.slots[n].matched&&r++;r===t.answers.length&&t.onSolve()},t.type="matching",t}function ButtonList(t,e){function i(){var t=0;if(!s.multiple)for(n in s.buttons)t!==s.currentButton&&(s.buttons[n].active=!1,jQuery(s.buttons[n].checkbox).removeClass("active")),t+=1}var n,r,o,s=new Test(e),a=new t(s),l=[],u=e.flag;for(s.buttons={},s.currentButton=0,l=jQuery(e.wrapper).parent().find(void 0!==e.nodes?e.nodes:"li"),n=0,r=l.length;r>n;n++){l[n].id=s.id+"_"+n,o=jQuery(l[n]).getNodes(),s.buttons[n]=new Button("#"+o.id,{checkbox:or(void 0,u)}),s.buttons[n].index=n,s.buttons[n].element.onmousedown=function(t,e,n,r){return function(){t(),n.currentButton=e.index,e.active?n.onUnChoose():n.onChoose(),void 0===e.checkbox&&(e.active=e.active===!0?!1:!0),i(),r.checkAnswers(n)}}(s.buttons[n].element.onmousedown,s.buttons[n],s,a);for(name in s.testEvents)s[name]=new GSAPEvent(name,s,s.testEvents,s.buttons,n)}return s}function DragAndDrop(t,e,i,n){function r(t,e,i){rel=-1*(t-h.answers[t]),rel=rel===-0?0:rel,console.log("relation: "+rel);var n=100,r=100;"horizontal"===h.orientation&&(n=(e.css["margin-left"]+e.css["margin-right"]+e.css.width)*rel,r=e.parent_css.height,r-=e.css["margin-top"],r+=i.css["margin-top"],r+=e.parent_css["padding-bottom"],r+=i.parent_css["padding-top"]),TweenMax.to(e.element,.2,{x:n,y:r}),e.placed=!0}var o,s,a,l,u,c,h=new Test(n);h.buttons=[],h.slots=[],h.a=e,h.b=i,h.orientation=or(void 0,n.orientation);var d=new t(h);c=jQuery(e).parent().find(".drag").getNodes(),void 0===c.length&&(c=[c]),h.checkComputedStyles=setInterval(function(){if(jQuery(c[0]).parseStyles().width>0){for(clearInterval(h.checkComputedStyles),o=0,a=c.length;a>o;o++)c[o].id=h.id+"_drag_"+o,c[o]=new Drag("#"+c[o].id,{index:o,onDrag:function(t){for(h.currentButton=t.index,t.active=!1,s=0,l=h.slots.length;l>s;s++)if(!t.active)if(t.dragEngine.hitTest(h.slots[s].element)){for(t.active=!0,h.slots[s].active=!0,h.currentSlot=h.slots[s],u=0;l>u;u++)u!==s&&(h.slots[u].active=!1);jQuery(h.slots[s].id).addClass("active")}else t.active=!1,h.slots[s].active=!1,h.currentSlot=void 0,jQuery(h.slots[s].id).removeClass("active")},onDragEnd:function(t){if(t.active&&void 0!==h.currentSlot){var e=function(){r(t.index,t,h.currentSlot)};d.checkAnswers(h,t.index,e),t.hit=!1}else t.rebound()}}),c[o].css=jQuery(c[o].id).parseStyles(),c[o].parent_css=jQuery(c[o].id).parent().parseStyles();for(h.buttons=c,c="choice"===d.type?[jQuery(i).getNodes()]:jQuery(i).parent().find(".drop").getNodes(),o=0,a=c.length;a>o;o++){c[o].id=h.id+"_drop_"+o,c[o]=new HotSpot("#"+c[o].id,{index:o}),c[o].css=jQuery(c[o].id).parseStyles(),c[o].parent_css=jQuery(c[o].id).parent().parseStyles();for(name in h.testEvents)h[name]=new GSAPEvent(name,h,h.testEvents,h.buttons,o,[c])}h.slots=c}},10)}!function(t,e){"object"==typeof module&&"object"==typeof module.exports?module.exports=t.document?e(t,!0):function(t){if(!t.document)throw new Error("jQuery requires a window with a document");return e(t)}:e(t)}("undefined"!=typeof window?window:this,function(t,e){function i(t){var e=t.length,i=re.type(t);return"function"===i||re.isWindow(t)?!1:1===t.nodeType&&e?!0:"array"===i||0===e||"number"==typeof e&&e>0&&e-1 in t}function n(t,e,i){if(re.isFunction(e))return re.grep(t,function(t,n){return!!e.call(t,n,t)!==i});if(e.nodeType)return re.grep(t,function(t){return t===e!==i});if("string"==typeof e){if(de.test(e))return re.filter(e,t,i);e=re.filter(e,t)}return re.grep(t,function(t){return re.inArray(t,e)>=0!==i})}function r(t,e){do t=t[e];while(t&&1!==t.nodeType);return t}function o(t){var e=xe[t]={};return re.each(t.match(ye)||[],function(t,i){e[i]=!0}),e}function s(){pe.addEventListener?(pe.removeEventListener("DOMContentLoaded",a,!1),t.removeEventListener("load",a,!1)):(pe.detachEvent("onreadystatechange",a),t.detachEvent("onload",a))}function a(){(pe.addEventListener||"load"===event.type||"complete"===pe.readyState)&&(s(),re.ready())}function l(t,e,i){if(void 0===i&&1===t.nodeType){var n="data-"+e.replace(Se,"-$1").toLowerCase();if(i=t.getAttribute(n),"string"==typeof i){try{i="true"===i?!0:"false"===i?!1:"null"===i?null:+i+""===i?+i:ke.test(i)?re.parseJSON(i):i}catch(r){}re.data(t,e,i)}else i=void 0}return i}function u(t){var e;for(e in t)if(("data"!==e||!re.isEmptyObject(t[e]))&&"toJSON"!==e)return!1;return!0}function c(t,e,i,n){if(re.acceptData(t)){var r,o,s=re.expando,a=t.nodeType,l=a?re.cache:t,u=a?t[s]:t[s]&&s;if(u&&l[u]&&(n||l[u].data)||void 0!==i||"string"!=typeof e)return u||(u=a?t[s]=$.pop()||re.guid++:s),l[u]||(l[u]=a?{}:{toJSON:re.noop}),("object"==typeof e||"function"==typeof e)&&(n?l[u]=re.extend(l[u],e):l[u].data=re.extend(l[u].data,e)),o=l[u],n||(o.data||(o.data={}),o=o.data),void 0!==i&&(o[re.camelCase(e)]=i),"string"==typeof e?(r=o[e],null==r&&(r=o[re.camelCase(e)])):r=o,r}}function h(t,e,i){if(re.acceptData(t)){var n,r,o=t.nodeType,s=o?re.cache:t,a=o?t[re.expando]:re.expando;if(s[a]){if(e&&(n=i?s[a]:s[a].data)){re.isArray(e)?e=e.concat(re.map(e,re.camelCase)):e in n?e=[e]:(e=re.camelCase(e),e=e in n?[e]:e.split(" ")),r=e.length;for(;r--;)delete n[e[r]];if(i?!u(n):!re.isEmptyObject(n))return}(i||(delete s[a].data,u(s[a])))&&(o?re.cleanData([t],!0):ie.deleteExpando||s!=s.window?delete s[a]:s[a]=null)}}}function d(){return!0}function f(){return!1}function p(){try{return pe.activeElement}catch(t){}}function g(t){var e=je.split("|"),i=t.createDocumentFragment();if(i.createElement)for(;e.length;)i.createElement(e.pop());return i}function m(t,e){var i,n,r=0,o=typeof t.getElementsByTagName!==Te?t.getElementsByTagName(e||"*"):typeof t.querySelectorAll!==Te?t.querySelectorAll(e||"*"):void 0;if(!o)for(o=[],i=t.childNodes||t;null!=(n=i[r]);r++)!e||re.nodeName(n,e)?o.push(n):re.merge(o,m(n,e));return void 0===e||e&&re.nodeName(t,e)?re.merge([t],o):o}function _(t){De.test(t.type)&&(t.defaultChecked=t.checked)}function v(t,e){return re.nodeName(t,"table")&&re.nodeName(11!==e.nodeType?e:e.firstChild,"tr")?t.getElementsByTagName("tbody")[0]||t.appendChild(t.ownerDocument.createElement("tbody")):t}function y(t){return t.type=(null!==re.find.attr(t,"type"))+"/"+t.type,t}function x(t){var e=Ue.exec(t.type);return e?t.type=e[1]:t.removeAttribute("type"),t}function b(t,e){for(var i,n=0;null!=(i=t[n]);n++)re._data(i,"globalEval",!e||re._data(e[n],"globalEval"))}function w(t,e){if(1===e.nodeType&&re.hasData(t)){var i,n,r,o=re._data(t),s=re._data(e,o),a=o.events;if(a){delete s.handle,s.events={};for(i in a)for(n=0,r=a[i].length;r>n;n++)re.event.add(e,i,a[i][n])}s.data&&(s.data=re.extend({},s.data))}}function T(t,e){var i,n,r;if(1===e.nodeType){if(i=e.nodeName.toLowerCase(),!ie.noCloneEvent&&e[re.expando]){r=re._data(e);for(n in r.events)re.removeEvent(e,n,r.handle);e.removeAttribute(re.expando)}"script"===i&&e.text!==t.text?(y(e).text=t.text,x(e)):"object"===i?(e.parentNode&&(e.outerHTML=t.outerHTML),ie.html5Clone&&t.innerHTML&&!re.trim(e.innerHTML)&&(e.innerHTML=t.innerHTML)):"input"===i&&De.test(t.type)?(e.defaultChecked=e.checked=t.checked,e.value!==t.value&&(e.value=t.value)):"option"===i?e.defaultSelected=e.selected=t.defaultSelected:("input"===i||"textarea"===i)&&(e.defaultValue=t.defaultValue)}}function k(e,i){var n,r=re(i.createElement(e)).appendTo(i.body),o=t.getDefaultComputedStyle&&(n=t.getDefaultComputedStyle(r[0]))?n.display:re.css(r[0],"display");return r.detach(),o}function S(t){var e=pe,i=Ke[t];return i||(i=k(t,e),"none"!==i&&i||(Je=(Je||re("<iframe frameborder='0' width='0' height='0'/>")).appendTo(e.documentElement),e=(Je[0].contentWindow||Je[0].contentDocument).document,e.write(),e.close(),i=k(t,e),Je.detach()),Ke[t]=i),i}function C(t,e){return{get:function(){var i=t();if(null!=i)return i?void delete this.get:(this.get=e).apply(this,arguments)}}}function P(t,e){if(e in t)return e;for(var i=e.charAt(0).toUpperCase()+e.slice(1),n=e,r=di.length;r--;)if(e=di[r]+i,e in t)return e;return n}function A(t,e){for(var i,n,r,o=[],s=0,a=t.length;a>s;s++)n=t[s],n.style&&(o[s]=re._data(n,"olddisplay"),i=n.style.display,e?(o[s]||"none"!==i||(n.style.display=""),""===n.style.display&&Ae(n)&&(o[s]=re._data(n,"olddisplay",S(n.nodeName)))):(r=Ae(n),(i&&"none"!==i||!r)&&re._data(n,"olddisplay",r?i:re.css(n,"display"))));for(s=0;a>s;s++)n=t[s],n.style&&(e&&"none"!==n.style.display&&""!==n.style.display||(n.style.display=e?o[s]||"":"none"));return t}function O(t,e,i){var n=li.exec(e);return n?Math.max(0,n[1]-(i||0))+(n[2]||"px"):e}function D(t,e,i,n,r){for(var o=i===(n?"border":"content")?4:"width"===e?1:0,s=0;4>o;o+=2)"margin"===i&&(s+=re.css(t,i+Pe[o],!0,r)),n?("content"===i&&(s-=re.css(t,"padding"+Pe[o],!0,r)),"margin"!==i&&(s-=re.css(t,"border"+Pe[o]+"Width",!0,r))):(s+=re.css(t,"padding"+Pe[o],!0,r),"padding"!==i&&(s+=re.css(t,"border"+Pe[o]+"Width",!0,r)));return s}function M(t,e,i){var n=!0,r="width"===e?t.offsetWidth:t.offsetHeight,o=ti(t),s=ie.boxSizing&&"border-box"===re.css(t,"boxSizing",!1,o);if(0>=r||null==r){if(r=ei(t,e,o),(0>r||null==r)&&(r=t.style[e]),ni.test(r))return r;n=s&&(ie.boxSizingReliable()||r===t.style[e]),r=parseFloat(r)||0}return r+D(t,e,i||(s?"border":"content"),n,o)+"px"}function N(t,e,i,n,r){return new N.prototype.init(t,e,i,n,r)}function R(){return setTimeout(function(){fi=void 0}),fi=re.now()}function E(t,e){var i,n={height:t},r=0;for(e=e?1:0;4>r;r+=2-e)i=Pe[r],n["margin"+i]=n["padding"+i]=t;return e&&(n.opacity=n.width=t),n}function L(t,e,i){for(var n,r=(yi[e]||[]).concat(yi["*"]),o=0,s=r.length;s>o;o++)if(n=r[o].call(i,e,t))return n}function j(t,e,i){var n,r,o,s,a,l,u,c,h=this,d={},f=t.style,p=t.nodeType&&Ae(t),g=re._data(t,"fxshow");i.queue||(a=re._queueHooks(t,"fx"),null==a.unqueued&&(a.unqueued=0,l=a.empty.fire,a.empty.fire=function(){a.unqueued||l()}),a.unqueued++,h.always(function(){h.always(function(){a.unqueued--,re.queue(t,"fx").length||a.empty.fire()})})),1===t.nodeType&&("height"in e||"width"in e)&&(i.overflow=[f.overflow,f.overflowX,f.overflowY],u=re.css(t,"display"),c="none"===u?re._data(t,"olddisplay")||S(t.nodeName):u,"inline"===c&&"none"===re.css(t,"float")&&(ie.inlineBlockNeedsLayout&&"inline"!==S(t.nodeName)?f.zoom=1:f.display="inline-block")),i.overflow&&(f.overflow="hidden",ie.shrinkWrapBlocks()||h.always(function(){f.overflow=i.overflow[0],f.overflowX=i.overflow[1],f.overflowY=i.overflow[2]}));for(n in e)if(r=e[n],gi.exec(r)){if(delete e[n],o=o||"toggle"===r,r===(p?"hide":"show")){if("show"!==r||!g||void 0===g[n])continue;p=!0}d[n]=g&&g[n]||re.style(t,n)}else u=void 0;if(re.isEmptyObject(d))"inline"===("none"===u?S(t.nodeName):u)&&(f.display=u);else{g?"hidden"in g&&(p=g.hidden):g=re._data(t,"fxshow",{}),o&&(g.hidden=!p),p?re(t).show():h.done(function(){re(t).hide()}),h.done(function(){var e;re._removeData(t,"fxshow");for(e in d)re.style(t,e,d[e])});for(n in d)s=L(p?g[n]:0,n,h),n in g||(g[n]=s.start,p&&(s.end=s.start,s.start="width"===n||"height"===n?1:0))}}function F(t,e){var i,n,r,o,s;for(i in t)if(n=re.camelCase(i),r=e[n],o=t[i],re.isArray(o)&&(r=o[1],o=t[i]=o[0]),i!==n&&(t[n]=o,delete t[i]),s=re.cssHooks[n],s&&"expand"in s){o=s.expand(o),delete t[n];for(i in o)i in t||(t[i]=o[i],e[i]=r)}else e[n]=r}function I(t,e,i){var n,r,o=0,s=vi.length,a=re.Deferred().always(function(){delete l.elem}),l=function(){if(r)return!1;for(var e=fi||R(),i=Math.max(0,u.startTime+u.duration-e),n=i/u.duration||0,o=1-n,s=0,l=u.tweens.length;l>s;s++)u.tweens[s].run(o);return a.notifyWith(t,[u,o,i]),1>o&&l?i:(a.resolveWith(t,[u]),!1)},u=a.promise({elem:t,props:re.extend({},e),opts:re.extend(!0,{specialEasing:{}},i),originalProperties:e,originalOptions:i,startTime:fi||R(),duration:i.duration,tweens:[],createTween:function(e,i){var n=re.Tween(t,u.opts,e,i,u.opts.specialEasing[e]||u.opts.easing);return u.tweens.push(n),n},stop:function(e){var i=0,n=e?u.tweens.length:0;if(r)return this;for(r=!0;n>i;i++)u.tweens[i].run(1);return e?a.resolveWith(t,[u,e]):a.rejectWith(t,[u,e]),this}}),c=u.props;for(F(c,u.opts.specialEasing);s>o;o++)if(n=vi[o].call(u,t,c,u.opts))return n;return re.map(c,L,u),re.isFunction(u.opts.start)&&u.opts.start.call(t,u),re.fx.timer(re.extend(l,{elem:t,anim:u,queue:u.opts.queue})),u.progress(u.opts.progress).done(u.opts.done,u.opts.complete).fail(u.opts.fail).always(u.opts.always)}function z(t){return function(e,i){"string"!=typeof e&&(i=e,e="*");var n,r=0,o=e.toLowerCase().match(ye)||[];if(re.isFunction(i))for(;n=o[r++];)"+"===n.charAt(0)?(n=n.slice(1)||"*",(t[n]=t[n]||[]).unshift(i)):(t[n]=t[n]||[]).push(i)}}function X(t,e,i,n){function r(a){var l;return o[a]=!0,re.each(t[a]||[],function(t,a){var u=a(e,i,n);return"string"!=typeof u||s||o[u]?s?!(l=u):void 0:(e.dataTypes.unshift(u),r(u),!1)}),l}var o={},s=t===Yi;return r(e.dataTypes[0])||!o["*"]&&r("*")}function B(t,e){var i,n,r=re.ajaxSettings.flatOptions||{};for(n in e)void 0!==e[n]&&((r[n]?t:i||(i={}))[n]=e[n]);return i&&re.extend(!0,t,i),t}function H(t,e,i){for(var n,r,o,s,a=t.contents,l=t.dataTypes;"*"===l[0];)l.shift(),void 0===r&&(r=t.mimeType||e.getResponseHeader("Content-Type"));if(r)for(s in a)if(a[s]&&a[s].test(r)){l.unshift(s);break}if(l[0]in i)o=l[0];else{for(s in i){if(!l[0]||t.converters[s+" "+l[0]]){o=s;break}n||(n=s)}o=o||n}return o?(o!==l[0]&&l.unshift(o),i[o]):void 0}function Y(t,e,i,n){var r,o,s,a,l,u={},c=t.dataTypes.slice();if(c[1])for(s in t.converters)u[s.toLowerCase()]=t.converters[s];for(o=c.shift();o;)if(t.responseFields[o]&&(i[t.responseFields[o]]=e),!l&&n&&t.dataFilter&&(e=t.dataFilter(e,t.dataType)),l=o,o=c.shift())if("*"===o)o=l;else if("*"!==l&&l!==o){if(s=u[l+" "+o]||u["* "+o],!s)for(r in u)if(a=r.split(" "),a[1]===o&&(s=u[l+" "+a[0]]||u["* "+a[0]])){s===!0?s=u[r]:u[r]!==!0&&(o=a[0],c.unshift(a[1]));break}if(s!==!0)if(s&&t["throws"])e=s(e);else try{e=s(e)}catch(h){return{state:"parsererror",error:s?h:"No conversion from "+l+" to "+o}}}return{state:"success",data:e}}function q(t,e,i,n){var r;if(re.isArray(e))re.each(e,function(e,r){i||Ui.test(t)?n(t,r):q(t+"["+("object"==typeof r?e:"")+"]",r,i,n)});else if(i||"object"!==re.type(e))n(t,e);else for(r in e)q(t+"["+r+"]",e[r],i,n)}function W(){try{return new t.XMLHttpRequest}catch(e){}}function Q(){try{return new t.ActiveXObject("Microsoft.XMLHTTP")}catch(e){}}function U(t){return re.isWindow(t)?t:9===t.nodeType?t.defaultView||t.parentWindow:!1}var $=[],V=$.slice,G=$.concat,Z=$.push,J=$.indexOf,K={},te=K.toString,ee=K.hasOwnProperty,ie={},ne="1.11.1",re=function(t,e){return new re.fn.init(t,e)},oe=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,se=/^-ms-/,ae=/-([\da-z])/gi,le=function(t,e){return e.toUpperCase()};re.fn=re.prototype={jquery:ne,constructor:re,selector:"",length:0,toArray:function(){return V.call(this)},get:function(t){return null!=t?0>t?this[t+this.length]:this[t]:V.call(this)},pushStack:function(t){var e=re.merge(this.constructor(),t);return e.prevObject=this,e.context=this.context,e},each:function(t,e){return re.each(this,t,e)},map:function(t){return this.pushStack(re.map(this,function(e,i){return t.call(e,i,e)}))},slice:function(){return this.pushStack(V.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(t){var e=this.length,i=+t+(0>t?e:0);return this.pushStack(i>=0&&e>i?[this[i]]:[])},end:function(){return this.prevObject||this.constructor(null)},push:Z,sort:$.sort,splice:$.splice},re.extend=re.fn.extend=function(){var t,e,i,n,r,o,s=arguments[0]||{},a=1,l=arguments.length,u=!1;for("boolean"==typeof s&&(u=s,s=arguments[a]||{},a++),"object"==typeof s||re.isFunction(s)||(s={}),a===l&&(s=this,a--);l>a;a++)if(null!=(r=arguments[a]))for(n in r)t=s[n],i=r[n],s!==i&&(u&&i&&(re.isPlainObject(i)||(e=re.isArray(i)))?(e?(e=!1,o=t&&re.isArray(t)?t:[]):o=t&&re.isPlainObject(t)?t:{},s[n]=re.extend(u,o,i)):void 0!==i&&(s[n]=i));return s},re.extend({expando:"jQuery"+(ne+Math.random()).replace(/\D/g,""),isReady:!0,error:function(t){throw new Error(t)},noop:function(){},isFunction:function(t){return"function"===re.type(t)},isArray:Array.isArray||function(t){return"array"===re.type(t)},isWindow:function(t){return null!=t&&t==t.window},isNumeric:function(t){return!re.isArray(t)&&t-parseFloat(t)>=0},isEmptyObject:function(t){var e;for(e in t)return!1;return!0},isPlainObject:function(t){var e;if(!t||"object"!==re.type(t)||t.nodeType||re.isWindow(t))return!1;try{if(t.constructor&&!ee.call(t,"constructor")&&!ee.call(t.constructor.prototype,"isPrototypeOf"))return!1}catch(i){return!1}if(ie.ownLast)for(e in t)return ee.call(t,e);for(e in t);return void 0===e||ee.call(t,e)},type:function(t){return null==t?t+"":"object"==typeof t||"function"==typeof t?K[te.call(t)]||"object":typeof t},globalEval:function(e){e&&re.trim(e)&&(t.execScript||function(e){t.eval.call(t,e)})(e)},camelCase:function(t){return t.replace(se,"ms-").replace(ae,le)},nodeName:function(t,e){return t.nodeName&&t.nodeName.toLowerCase()===e.toLowerCase()},each:function(t,e,n){var r,o=0,s=t.length,a=i(t);if(n){if(a)for(;s>o&&(r=e.apply(t[o],n),r!==!1);o++);else for(o in t)if(r=e.apply(t[o],n),r===!1)break}else if(a)for(;s>o&&(r=e.call(t[o],o,t[o]),r!==!1);o++);else for(o in t)if(r=e.call(t[o],o,t[o]),r===!1)break;return t},trim:function(t){return null==t?"":(t+"").replace(oe,"")},makeArray:function(t,e){var n=e||[];return null!=t&&(i(Object(t))?re.merge(n,"string"==typeof t?[t]:t):Z.call(n,t)),n},inArray:function(t,e,i){var n;if(e){if(J)return J.call(e,t,i);for(n=e.length,i=i?0>i?Math.max(0,n+i):i:0;n>i;i++)if(i in e&&e[i]===t)return i}return-1},merge:function(t,e){for(var i=+e.length,n=0,r=t.length;i>n;)t[r++]=e[n++];if(i!==i)for(;void 0!==e[n];)t[r++]=e[n++];return t.length=r,t},grep:function(t,e,i){for(var n,r=[],o=0,s=t.length,a=!i;s>o;o++)n=!e(t[o],o),n!==a&&r.push(t[o]);return r},map:function(t,e,n){var r,o=0,s=t.length,a=i(t),l=[];if(a)for(;s>o;o++)r=e(t[o],o,n),null!=r&&l.push(r);else for(o in t)r=e(t[o],o,n),null!=r&&l.push(r);return G.apply([],l)},guid:1,proxy:function(t,e){var i,n,r;return"string"==typeof e&&(r=t[e],e=t,t=r),re.isFunction(t)?(i=V.call(arguments,2),n=function(){return t.apply(e||this,i.concat(V.call(arguments)))},n.guid=t.guid=t.guid||re.guid++,n):void 0},now:function(){return+new Date},support:ie}),re.each("Boolean Number String Function Array Date RegExp Object Error".split(" "),function(t,e){K["[object "+e+"]"]=e.toLowerCase()});var ue=function(t){function e(t,e,i,n){var r,o,s,a,l,u,h,f,p,g;if((e?e.ownerDocument||e:X)!==N&&M(e),e=e||N,i=i||[],!t||"string"!=typeof t)return i;if(1!==(a=e.nodeType)&&9!==a)return[];if(E&&!n){if(r=ve.exec(t))if(s=r[1]){if(9===a){if(o=e.getElementById(s),!o||!o.parentNode)return i;if(o.id===s)return i.push(o),i}else if(e.ownerDocument&&(o=e.ownerDocument.getElementById(s))&&I(e,o)&&o.id===s)return i.push(o),i}else{if(r[2])return K.apply(i,e.getElementsByTagName(t)),i;if((s=r[3])&&b.getElementsByClassName&&e.getElementsByClassName)return K.apply(i,e.getElementsByClassName(s)),i}if(b.qsa&&(!L||!L.test(t))){if(f=h=z,p=e,g=9===a&&t,1===a&&"object"!==e.nodeName.toLowerCase()){for(u=S(t),(h=e.getAttribute("id"))?f=h.replace(xe,"\\$&"):e.setAttribute("id",f),f="[id='"+f+"'] ",l=u.length;l--;)u[l]=f+d(u[l]);p=ye.test(t)&&c(e.parentNode)||e,g=u.join(",")}if(g)try{return K.apply(i,p.querySelectorAll(g)),i}catch(m){}finally{h||e.removeAttribute("id")}}}return P(t.replace(le,"$1"),e,i,n)}function i(){function t(i,n){return e.push(i+" ")>w.cacheLength&&delete t[e.shift()],t[i+" "]=n}var e=[];return t}function n(t){return t[z]=!0,t}function r(t){var e=N.createElement("div");try{return!!t(e)}catch(i){return!1}finally{e.parentNode&&e.parentNode.removeChild(e),e=null
}}function o(t,e){for(var i=t.split("|"),n=t.length;n--;)w.attrHandle[i[n]]=e}function s(t,e){var i=e&&t,n=i&&1===t.nodeType&&1===e.nodeType&&(~e.sourceIndex||$)-(~t.sourceIndex||$);if(n)return n;if(i)for(;i=i.nextSibling;)if(i===e)return-1;return t?1:-1}function a(t){return function(e){var i=e.nodeName.toLowerCase();return"input"===i&&e.type===t}}function l(t){return function(e){var i=e.nodeName.toLowerCase();return("input"===i||"button"===i)&&e.type===t}}function u(t){return n(function(e){return e=+e,n(function(i,n){for(var r,o=t([],i.length,e),s=o.length;s--;)i[r=o[s]]&&(i[r]=!(n[r]=i[r]))})})}function c(t){return t&&typeof t.getElementsByTagName!==U&&t}function h(){}function d(t){for(var e=0,i=t.length,n="";i>e;e++)n+=t[e].value;return n}function f(t,e,i){var n=e.dir,r=i&&"parentNode"===n,o=H++;return e.first?function(e,i,o){for(;e=e[n];)if(1===e.nodeType||r)return t(e,i,o)}:function(e,i,s){var a,l,u=[B,o];if(s){for(;e=e[n];)if((1===e.nodeType||r)&&t(e,i,s))return!0}else for(;e=e[n];)if(1===e.nodeType||r){if(l=e[z]||(e[z]={}),(a=l[n])&&a[0]===B&&a[1]===o)return u[2]=a[2];if(l[n]=u,u[2]=t(e,i,s))return!0}}}function p(t){return t.length>1?function(e,i,n){for(var r=t.length;r--;)if(!t[r](e,i,n))return!1;return!0}:t[0]}function g(t,i,n){for(var r=0,o=i.length;o>r;r++)e(t,i[r],n);return n}function m(t,e,i,n,r){for(var o,s=[],a=0,l=t.length,u=null!=e;l>a;a++)(o=t[a])&&(!i||i(o,n,r))&&(s.push(o),u&&e.push(a));return s}function _(t,e,i,r,o,s){return r&&!r[z]&&(r=_(r)),o&&!o[z]&&(o=_(o,s)),n(function(n,s,a,l){var u,c,h,d=[],f=[],p=s.length,_=n||g(e||"*",a.nodeType?[a]:a,[]),v=!t||!n&&e?_:m(_,d,t,a,l),y=i?o||(n?t:p||r)?[]:s:v;if(i&&i(v,y,a,l),r)for(u=m(y,f),r(u,[],a,l),c=u.length;c--;)(h=u[c])&&(y[f[c]]=!(v[f[c]]=h));if(n){if(o||t){if(o){for(u=[],c=y.length;c--;)(h=y[c])&&u.push(v[c]=h);o(null,y=[],u,l)}for(c=y.length;c--;)(h=y[c])&&(u=o?ee.call(n,h):d[c])>-1&&(n[u]=!(s[u]=h))}}else y=m(y===s?y.splice(p,y.length):y),o?o(null,s,y,l):K.apply(s,y)})}function v(t){for(var e,i,n,r=t.length,o=w.relative[t[0].type],s=o||w.relative[" "],a=o?1:0,l=f(function(t){return t===e},s,!0),u=f(function(t){return ee.call(e,t)>-1},s,!0),c=[function(t,i,n){return!o&&(n||i!==A)||((e=i).nodeType?l(t,i,n):u(t,i,n))}];r>a;a++)if(i=w.relative[t[a].type])c=[f(p(c),i)];else{if(i=w.filter[t[a].type].apply(null,t[a].matches),i[z]){for(n=++a;r>n&&!w.relative[t[n].type];n++);return _(a>1&&p(c),a>1&&d(t.slice(0,a-1).concat({value:" "===t[a-2].type?"*":""})).replace(le,"$1"),i,n>a&&v(t.slice(a,n)),r>n&&v(t=t.slice(n)),r>n&&d(t))}c.push(i)}return p(c)}function y(t,i){var r=i.length>0,o=t.length>0,s=function(n,s,a,l,u){var c,h,d,f=0,p="0",g=n&&[],_=[],v=A,y=n||o&&w.find.TAG("*",u),x=B+=null==v?1:Math.random()||.1,b=y.length;for(u&&(A=s!==N&&s);p!==b&&null!=(c=y[p]);p++){if(o&&c){for(h=0;d=t[h++];)if(d(c,s,a)){l.push(c);break}u&&(B=x)}r&&((c=!d&&c)&&f--,n&&g.push(c))}if(f+=p,r&&p!==f){for(h=0;d=i[h++];)d(g,_,s,a);if(n){if(f>0)for(;p--;)g[p]||_[p]||(_[p]=Z.call(l));_=m(_)}K.apply(l,_),u&&!n&&_.length>0&&f+i.length>1&&e.uniqueSort(l)}return u&&(B=x,A=v),g};return r?n(s):s}var x,b,w,T,k,S,C,P,A,O,D,M,N,R,E,L,j,F,I,z="sizzle"+-new Date,X=t.document,B=0,H=0,Y=i(),q=i(),W=i(),Q=function(t,e){return t===e&&(D=!0),0},U="undefined",$=1<<31,V={}.hasOwnProperty,G=[],Z=G.pop,J=G.push,K=G.push,te=G.slice,ee=G.indexOf||function(t){for(var e=0,i=this.length;i>e;e++)if(this[e]===t)return e;return-1},ie="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|repeat|multiple|open|readonly|required|scoped",ne="[\\x20\\t\\r\\n\\f]",re="(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",oe=re.replace("w","w#"),se="\\["+ne+"*("+re+")(?:"+ne+"*([*^$|!~]?=)"+ne+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+oe+"))|)"+ne+"*\\]",ae=":("+re+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+se+")*)|.*)\\)|)",le=new RegExp("^"+ne+"+|((?:^|[^\\\\])(?:\\\\.)*)"+ne+"+$","g"),ue=new RegExp("^"+ne+"*,"+ne+"*"),ce=new RegExp("^"+ne+"*([>+~]|"+ne+")"+ne+"*"),he=new RegExp("="+ne+"*([^\\]'\"]*?)"+ne+"*\\]","g"),de=new RegExp(ae),fe=new RegExp("^"+oe+"$"),pe={ID:new RegExp("^#("+re+")"),CLASS:new RegExp("^\\.("+re+")"),TAG:new RegExp("^("+re.replace("w","w*")+")"),ATTR:new RegExp("^"+se),PSEUDO:new RegExp("^"+ae),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+ne+"*(even|odd|(([+-]|)(\\d*)n|)"+ne+"*(?:([+-]|)"+ne+"*(\\d+)|))"+ne+"*\\)|)","i"),bool:new RegExp("^(?:"+ie+")$","i"),needsContext:new RegExp("^"+ne+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+ne+"*((?:-\\d)?\\d*)"+ne+"*\\)|)(?=[^-]|$)","i")},ge=/^(?:input|select|textarea|button)$/i,me=/^h\d$/i,_e=/^[^{]+\{\s*\[native \w/,ve=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,ye=/[+~]/,xe=/'|\\/g,be=new RegExp("\\\\([\\da-f]{1,6}"+ne+"?|("+ne+")|.)","ig"),we=function(t,e,i){var n="0x"+e-65536;return n!==n||i?e:0>n?String.fromCharCode(n+65536):String.fromCharCode(n>>10|55296,1023&n|56320)};try{K.apply(G=te.call(X.childNodes),X.childNodes),G[X.childNodes.length].nodeType}catch(Te){K={apply:G.length?function(t,e){J.apply(t,te.call(e))}:function(t,e){for(var i=t.length,n=0;t[i++]=e[n++];);t.length=i-1}}}b=e.support={},k=e.isXML=function(t){var e=t&&(t.ownerDocument||t).documentElement;return e?"HTML"!==e.nodeName:!1},M=e.setDocument=function(t){var e,i=t?t.ownerDocument||t:X,n=i.defaultView;return i!==N&&9===i.nodeType&&i.documentElement?(N=i,R=i.documentElement,E=!k(i),n&&n!==n.top&&(n.addEventListener?n.addEventListener("unload",function(){M()},!1):n.attachEvent&&n.attachEvent("onunload",function(){M()})),b.attributes=r(function(t){return t.className="i",!t.getAttribute("className")}),b.getElementsByTagName=r(function(t){return t.appendChild(i.createComment("")),!t.getElementsByTagName("*").length}),b.getElementsByClassName=_e.test(i.getElementsByClassName)&&r(function(t){return t.innerHTML="<div class='a'></div><div class='a i'></div>",t.firstChild.className="i",2===t.getElementsByClassName("i").length}),b.getById=r(function(t){return R.appendChild(t).id=z,!i.getElementsByName||!i.getElementsByName(z).length}),b.getById?(w.find.ID=function(t,e){if(typeof e.getElementById!==U&&E){var i=e.getElementById(t);return i&&i.parentNode?[i]:[]}},w.filter.ID=function(t){var e=t.replace(be,we);return function(t){return t.getAttribute("id")===e}}):(delete w.find.ID,w.filter.ID=function(t){var e=t.replace(be,we);return function(t){var i=typeof t.getAttributeNode!==U&&t.getAttributeNode("id");return i&&i.value===e}}),w.find.TAG=b.getElementsByTagName?function(t,e){return typeof e.getElementsByTagName!==U?e.getElementsByTagName(t):void 0}:function(t,e){var i,n=[],r=0,o=e.getElementsByTagName(t);if("*"===t){for(;i=o[r++];)1===i.nodeType&&n.push(i);return n}return o},w.find.CLASS=b.getElementsByClassName&&function(t,e){return typeof e.getElementsByClassName!==U&&E?e.getElementsByClassName(t):void 0},j=[],L=[],(b.qsa=_e.test(i.querySelectorAll))&&(r(function(t){t.innerHTML="<select msallowclip=''><option selected=''></option></select>",t.querySelectorAll("[msallowclip^='']").length&&L.push("[*^$]="+ne+"*(?:''|\"\")"),t.querySelectorAll("[selected]").length||L.push("\\["+ne+"*(?:value|"+ie+")"),t.querySelectorAll(":checked").length||L.push(":checked")}),r(function(t){var e=i.createElement("input");e.setAttribute("type","hidden"),t.appendChild(e).setAttribute("name","D"),t.querySelectorAll("[name=d]").length&&L.push("name"+ne+"*[*^$|!~]?="),t.querySelectorAll(":enabled").length||L.push(":enabled",":disabled"),t.querySelectorAll("*,:x"),L.push(",.*:")})),(b.matchesSelector=_e.test(F=R.matches||R.webkitMatchesSelector||R.mozMatchesSelector||R.oMatchesSelector||R.msMatchesSelector))&&r(function(t){b.disconnectedMatch=F.call(t,"div"),F.call(t,"[s!='']:x"),j.push("!=",ae)}),L=L.length&&new RegExp(L.join("|")),j=j.length&&new RegExp(j.join("|")),e=_e.test(R.compareDocumentPosition),I=e||_e.test(R.contains)?function(t,e){var i=9===t.nodeType?t.documentElement:t,n=e&&e.parentNode;return t===n||!(!n||1!==n.nodeType||!(i.contains?i.contains(n):t.compareDocumentPosition&&16&t.compareDocumentPosition(n)))}:function(t,e){if(e)for(;e=e.parentNode;)if(e===t)return!0;return!1},Q=e?function(t,e){if(t===e)return D=!0,0;var n=!t.compareDocumentPosition-!e.compareDocumentPosition;return n?n:(n=(t.ownerDocument||t)===(e.ownerDocument||e)?t.compareDocumentPosition(e):1,1&n||!b.sortDetached&&e.compareDocumentPosition(t)===n?t===i||t.ownerDocument===X&&I(X,t)?-1:e===i||e.ownerDocument===X&&I(X,e)?1:O?ee.call(O,t)-ee.call(O,e):0:4&n?-1:1)}:function(t,e){if(t===e)return D=!0,0;var n,r=0,o=t.parentNode,a=e.parentNode,l=[t],u=[e];if(!o||!a)return t===i?-1:e===i?1:o?-1:a?1:O?ee.call(O,t)-ee.call(O,e):0;if(o===a)return s(t,e);for(n=t;n=n.parentNode;)l.unshift(n);for(n=e;n=n.parentNode;)u.unshift(n);for(;l[r]===u[r];)r++;return r?s(l[r],u[r]):l[r]===X?-1:u[r]===X?1:0},i):N},e.matches=function(t,i){return e(t,null,null,i)},e.matchesSelector=function(t,i){if((t.ownerDocument||t)!==N&&M(t),i=i.replace(he,"='$1']"),!(!b.matchesSelector||!E||j&&j.test(i)||L&&L.test(i)))try{var n=F.call(t,i);if(n||b.disconnectedMatch||t.document&&11!==t.document.nodeType)return n}catch(r){}return e(i,N,null,[t]).length>0},e.contains=function(t,e){return(t.ownerDocument||t)!==N&&M(t),I(t,e)},e.attr=function(t,e){(t.ownerDocument||t)!==N&&M(t);var i=w.attrHandle[e.toLowerCase()],n=i&&V.call(w.attrHandle,e.toLowerCase())?i(t,e,!E):void 0;return void 0!==n?n:b.attributes||!E?t.getAttribute(e):(n=t.getAttributeNode(e))&&n.specified?n.value:null},e.error=function(t){throw new Error("Syntax error, unrecognized expression: "+t)},e.uniqueSort=function(t){var e,i=[],n=0,r=0;if(D=!b.detectDuplicates,O=!b.sortStable&&t.slice(0),t.sort(Q),D){for(;e=t[r++];)e===t[r]&&(n=i.push(r));for(;n--;)t.splice(i[n],1)}return O=null,t},T=e.getText=function(t){var e,i="",n=0,r=t.nodeType;if(r){if(1===r||9===r||11===r){if("string"==typeof t.textContent)return t.textContent;for(t=t.firstChild;t;t=t.nextSibling)i+=T(t)}else if(3===r||4===r)return t.nodeValue}else for(;e=t[n++];)i+=T(e);return i},w=e.selectors={cacheLength:50,createPseudo:n,match:pe,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(t){return t[1]=t[1].replace(be,we),t[3]=(t[3]||t[4]||t[5]||"").replace(be,we),"~="===t[2]&&(t[3]=" "+t[3]+" "),t.slice(0,4)},CHILD:function(t){return t[1]=t[1].toLowerCase(),"nth"===t[1].slice(0,3)?(t[3]||e.error(t[0]),t[4]=+(t[4]?t[5]+(t[6]||1):2*("even"===t[3]||"odd"===t[3])),t[5]=+(t[7]+t[8]||"odd"===t[3])):t[3]&&e.error(t[0]),t},PSEUDO:function(t){var e,i=!t[6]&&t[2];return pe.CHILD.test(t[0])?null:(t[3]?t[2]=t[4]||t[5]||"":i&&de.test(i)&&(e=S(i,!0))&&(e=i.indexOf(")",i.length-e)-i.length)&&(t[0]=t[0].slice(0,e),t[2]=i.slice(0,e)),t.slice(0,3))}},filter:{TAG:function(t){var e=t.replace(be,we).toLowerCase();return"*"===t?function(){return!0}:function(t){return t.nodeName&&t.nodeName.toLowerCase()===e}},CLASS:function(t){var e=Y[t+" "];return e||(e=new RegExp("(^|"+ne+")"+t+"("+ne+"|$)"))&&Y(t,function(t){return e.test("string"==typeof t.className&&t.className||typeof t.getAttribute!==U&&t.getAttribute("class")||"")})},ATTR:function(t,i,n){return function(r){var o=e.attr(r,t);return null==o?"!="===i:i?(o+="","="===i?o===n:"!="===i?o!==n:"^="===i?n&&0===o.indexOf(n):"*="===i?n&&o.indexOf(n)>-1:"$="===i?n&&o.slice(-n.length)===n:"~="===i?(" "+o+" ").indexOf(n)>-1:"|="===i?o===n||o.slice(0,n.length+1)===n+"-":!1):!0}},CHILD:function(t,e,i,n,r){var o="nth"!==t.slice(0,3),s="last"!==t.slice(-4),a="of-type"===e;return 1===n&&0===r?function(t){return!!t.parentNode}:function(e,i,l){var u,c,h,d,f,p,g=o!==s?"nextSibling":"previousSibling",m=e.parentNode,_=a&&e.nodeName.toLowerCase(),v=!l&&!a;if(m){if(o){for(;g;){for(h=e;h=h[g];)if(a?h.nodeName.toLowerCase()===_:1===h.nodeType)return!1;p=g="only"===t&&!p&&"nextSibling"}return!0}if(p=[s?m.firstChild:m.lastChild],s&&v){for(c=m[z]||(m[z]={}),u=c[t]||[],f=u[0]===B&&u[1],d=u[0]===B&&u[2],h=f&&m.childNodes[f];h=++f&&h&&h[g]||(d=f=0)||p.pop();)if(1===h.nodeType&&++d&&h===e){c[t]=[B,f,d];break}}else if(v&&(u=(e[z]||(e[z]={}))[t])&&u[0]===B)d=u[1];else for(;(h=++f&&h&&h[g]||(d=f=0)||p.pop())&&((a?h.nodeName.toLowerCase()!==_:1!==h.nodeType)||!++d||(v&&((h[z]||(h[z]={}))[t]=[B,d]),h!==e)););return d-=r,d===n||d%n===0&&d/n>=0}}},PSEUDO:function(t,i){var r,o=w.pseudos[t]||w.setFilters[t.toLowerCase()]||e.error("unsupported pseudo: "+t);return o[z]?o(i):o.length>1?(r=[t,t,"",i],w.setFilters.hasOwnProperty(t.toLowerCase())?n(function(t,e){for(var n,r=o(t,i),s=r.length;s--;)n=ee.call(t,r[s]),t[n]=!(e[n]=r[s])}):function(t){return o(t,0,r)}):o}},pseudos:{not:n(function(t){var e=[],i=[],r=C(t.replace(le,"$1"));return r[z]?n(function(t,e,i,n){for(var o,s=r(t,null,n,[]),a=t.length;a--;)(o=s[a])&&(t[a]=!(e[a]=o))}):function(t,n,o){return e[0]=t,r(e,null,o,i),!i.pop()}}),has:n(function(t){return function(i){return e(t,i).length>0}}),contains:n(function(t){return function(e){return(e.textContent||e.innerText||T(e)).indexOf(t)>-1}}),lang:n(function(t){return fe.test(t||"")||e.error("unsupported lang: "+t),t=t.replace(be,we).toLowerCase(),function(e){var i;do if(i=E?e.lang:e.getAttribute("xml:lang")||e.getAttribute("lang"))return i=i.toLowerCase(),i===t||0===i.indexOf(t+"-");while((e=e.parentNode)&&1===e.nodeType);return!1}}),target:function(e){var i=t.location&&t.location.hash;return i&&i.slice(1)===e.id},root:function(t){return t===R},focus:function(t){return t===N.activeElement&&(!N.hasFocus||N.hasFocus())&&!!(t.type||t.href||~t.tabIndex)},enabled:function(t){return t.disabled===!1},disabled:function(t){return t.disabled===!0},checked:function(t){var e=t.nodeName.toLowerCase();return"input"===e&&!!t.checked||"option"===e&&!!t.selected},selected:function(t){return t.parentNode&&t.parentNode.selectedIndex,t.selected===!0},empty:function(t){for(t=t.firstChild;t;t=t.nextSibling)if(t.nodeType<6)return!1;return!0},parent:function(t){return!w.pseudos.empty(t)},header:function(t){return me.test(t.nodeName)},input:function(t){return ge.test(t.nodeName)},button:function(t){var e=t.nodeName.toLowerCase();return"input"===e&&"button"===t.type||"button"===e},text:function(t){var e;return"input"===t.nodeName.toLowerCase()&&"text"===t.type&&(null==(e=t.getAttribute("type"))||"text"===e.toLowerCase())},first:u(function(){return[0]}),last:u(function(t,e){return[e-1]}),eq:u(function(t,e,i){return[0>i?i+e:i]}),even:u(function(t,e){for(var i=0;e>i;i+=2)t.push(i);return t}),odd:u(function(t,e){for(var i=1;e>i;i+=2)t.push(i);return t}),lt:u(function(t,e,i){for(var n=0>i?i+e:i;--n>=0;)t.push(n);return t}),gt:u(function(t,e,i){for(var n=0>i?i+e:i;++n<e;)t.push(n);return t})}},w.pseudos.nth=w.pseudos.eq;for(x in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})w.pseudos[x]=a(x);for(x in{submit:!0,reset:!0})w.pseudos[x]=l(x);return h.prototype=w.filters=w.pseudos,w.setFilters=new h,S=e.tokenize=function(t,i){var n,r,o,s,a,l,u,c=q[t+" "];if(c)return i?0:c.slice(0);for(a=t,l=[],u=w.preFilter;a;){(!n||(r=ue.exec(a)))&&(r&&(a=a.slice(r[0].length)||a),l.push(o=[])),n=!1,(r=ce.exec(a))&&(n=r.shift(),o.push({value:n,type:r[0].replace(le," ")}),a=a.slice(n.length));for(s in w.filter)!(r=pe[s].exec(a))||u[s]&&!(r=u[s](r))||(n=r.shift(),o.push({value:n,type:s,matches:r}),a=a.slice(n.length));if(!n)break}return i?a.length:a?e.error(t):q(t,l).slice(0)},C=e.compile=function(t,e){var i,n=[],r=[],o=W[t+" "];if(!o){for(e||(e=S(t)),i=e.length;i--;)o=v(e[i]),o[z]?n.push(o):r.push(o);o=W(t,y(r,n)),o.selector=t}return o},P=e.select=function(t,e,i,n){var r,o,s,a,l,u="function"==typeof t&&t,h=!n&&S(t=u.selector||t);if(i=i||[],1===h.length){if(o=h[0]=h[0].slice(0),o.length>2&&"ID"===(s=o[0]).type&&b.getById&&9===e.nodeType&&E&&w.relative[o[1].type]){if(e=(w.find.ID(s.matches[0].replace(be,we),e)||[])[0],!e)return i;u&&(e=e.parentNode),t=t.slice(o.shift().value.length)}for(r=pe.needsContext.test(t)?0:o.length;r--&&(s=o[r],!w.relative[a=s.type]);)if((l=w.find[a])&&(n=l(s.matches[0].replace(be,we),ye.test(o[0].type)&&c(e.parentNode)||e))){if(o.splice(r,1),t=n.length&&d(o),!t)return K.apply(i,n),i;break}}return(u||C(t,h))(n,e,!E,i,ye.test(t)&&c(e.parentNode)||e),i},b.sortStable=z.split("").sort(Q).join("")===z,b.detectDuplicates=!!D,M(),b.sortDetached=r(function(t){return 1&t.compareDocumentPosition(N.createElement("div"))}),r(function(t){return t.innerHTML="<a href='#'></a>","#"===t.firstChild.getAttribute("href")})||o("type|href|height|width",function(t,e,i){return i?void 0:t.getAttribute(e,"type"===e.toLowerCase()?1:2)}),b.attributes&&r(function(t){return t.innerHTML="<input/>",t.firstChild.setAttribute("value",""),""===t.firstChild.getAttribute("value")})||o("value",function(t,e,i){return i||"input"!==t.nodeName.toLowerCase()?void 0:t.defaultValue}),r(function(t){return null==t.getAttribute("disabled")})||o(ie,function(t,e,i){var n;return i?void 0:t[e]===!0?e.toLowerCase():(n=t.getAttributeNode(e))&&n.specified?n.value:null}),e}(t);re.find=ue,re.expr=ue.selectors,re.expr[":"]=re.expr.pseudos,re.unique=ue.uniqueSort,re.text=ue.getText,re.isXMLDoc=ue.isXML,re.contains=ue.contains;var ce=re.expr.match.needsContext,he=/^<(\w+)\s*\/?>(?:<\/\1>|)$/,de=/^.[^:#\[\.,]*$/;re.filter=function(t,e,i){var n=e[0];return i&&(t=":not("+t+")"),1===e.length&&1===n.nodeType?re.find.matchesSelector(n,t)?[n]:[]:re.find.matches(t,re.grep(e,function(t){return 1===t.nodeType}))},re.fn.extend({find:function(t){var e,i=[],n=this,r=n.length;if("string"!=typeof t)return this.pushStack(re(t).filter(function(){for(e=0;r>e;e++)if(re.contains(n[e],this))return!0}));for(e=0;r>e;e++)re.find(t,n[e],i);return i=this.pushStack(r>1?re.unique(i):i),i.selector=this.selector?this.selector+" "+t:t,i},filter:function(t){return this.pushStack(n(this,t||[],!1))},not:function(t){return this.pushStack(n(this,t||[],!0))},is:function(t){return!!n(this,"string"==typeof t&&ce.test(t)?re(t):t||[],!1).length}});var fe,pe=t.document,ge=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/,me=re.fn.init=function(t,e){var i,n;if(!t)return this;if("string"==typeof t){if(i="<"===t.charAt(0)&&">"===t.charAt(t.length-1)&&t.length>=3?[null,t,null]:ge.exec(t),!i||!i[1]&&e)return!e||e.jquery?(e||fe).find(t):this.constructor(e).find(t);if(i[1]){if(e=e instanceof re?e[0]:e,re.merge(this,re.parseHTML(i[1],e&&e.nodeType?e.ownerDocument||e:pe,!0)),he.test(i[1])&&re.isPlainObject(e))for(i in e)re.isFunction(this[i])?this[i](e[i]):this.attr(i,e[i]);return this}if(n=pe.getElementById(i[2]),n&&n.parentNode){if(n.id!==i[2])return fe.find(t);this.length=1,this[0]=n}return this.context=pe,this.selector=t,this}return t.nodeType?(this.context=this[0]=t,this.length=1,this):re.isFunction(t)?"undefined"!=typeof fe.ready?fe.ready(t):t(re):(void 0!==t.selector&&(this.selector=t.selector,this.context=t.context),re.makeArray(t,this))};me.prototype=re.fn,fe=re(pe);var _e=/^(?:parents|prev(?:Until|All))/,ve={children:!0,contents:!0,next:!0,prev:!0};re.extend({dir:function(t,e,i){for(var n=[],r=t[e];r&&9!==r.nodeType&&(void 0===i||1!==r.nodeType||!re(r).is(i));)1===r.nodeType&&n.push(r),r=r[e];return n},sibling:function(t,e){for(var i=[];t;t=t.nextSibling)1===t.nodeType&&t!==e&&i.push(t);return i}}),re.fn.extend({has:function(t){var e,i=re(t,this),n=i.length;return this.filter(function(){for(e=0;n>e;e++)if(re.contains(this,i[e]))return!0})},closest:function(t,e){for(var i,n=0,r=this.length,o=[],s=ce.test(t)||"string"!=typeof t?re(t,e||this.context):0;r>n;n++)for(i=this[n];i&&i!==e;i=i.parentNode)if(i.nodeType<11&&(s?s.index(i)>-1:1===i.nodeType&&re.find.matchesSelector(i,t))){o.push(i);break}return this.pushStack(o.length>1?re.unique(o):o)},index:function(t){return t?"string"==typeof t?re.inArray(this[0],re(t)):re.inArray(t.jquery?t[0]:t,this):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(t,e){return this.pushStack(re.unique(re.merge(this.get(),re(t,e))))},addBack:function(t){return this.add(null==t?this.prevObject:this.prevObject.filter(t))}}),re.each({parent:function(t){var e=t.parentNode;return e&&11!==e.nodeType?e:null},parents:function(t){return re.dir(t,"parentNode")},parentsUntil:function(t,e,i){return re.dir(t,"parentNode",i)},next:function(t){return r(t,"nextSibling")},prev:function(t){return r(t,"previousSibling")},nextAll:function(t){return re.dir(t,"nextSibling")},prevAll:function(t){return re.dir(t,"previousSibling")},nextUntil:function(t,e,i){return re.dir(t,"nextSibling",i)},prevUntil:function(t,e,i){return re.dir(t,"previousSibling",i)},siblings:function(t){return re.sibling((t.parentNode||{}).firstChild,t)},children:function(t){return re.sibling(t.firstChild)},contents:function(t){return re.nodeName(t,"iframe")?t.contentDocument||t.contentWindow.document:re.merge([],t.childNodes)}},function(t,e){re.fn[t]=function(i,n){var r=re.map(this,e,i);return"Until"!==t.slice(-5)&&(n=i),n&&"string"==typeof n&&(r=re.filter(n,r)),this.length>1&&(ve[t]||(r=re.unique(r)),_e.test(t)&&(r=r.reverse())),this.pushStack(r)}});var ye=/\S+/g,xe={};re.Callbacks=function(t){t="string"==typeof t?xe[t]||o(t):re.extend({},t);var e,i,n,r,s,a,l=[],u=!t.once&&[],c=function(o){for(i=t.memory&&o,n=!0,s=a||0,a=0,r=l.length,e=!0;l&&r>s;s++)if(l[s].apply(o[0],o[1])===!1&&t.stopOnFalse){i=!1;break}e=!1,l&&(u?u.length&&c(u.shift()):i?l=[]:h.disable())},h={add:function(){if(l){var n=l.length;!function o(e){re.each(e,function(e,i){var n=re.type(i);"function"===n?t.unique&&h.has(i)||l.push(i):i&&i.length&&"string"!==n&&o(i)})}(arguments),e?r=l.length:i&&(a=n,c(i))}return this},remove:function(){return l&&re.each(arguments,function(t,i){for(var n;(n=re.inArray(i,l,n))>-1;)l.splice(n,1),e&&(r>=n&&r--,s>=n&&s--)}),this},has:function(t){return t?re.inArray(t,l)>-1:!(!l||!l.length)},empty:function(){return l=[],r=0,this},disable:function(){return l=u=i=void 0,this},disabled:function(){return!l},lock:function(){return u=void 0,i||h.disable(),this},locked:function(){return!u},fireWith:function(t,i){return!l||n&&!u||(i=i||[],i=[t,i.slice?i.slice():i],e?u.push(i):c(i)),this},fire:function(){return h.fireWith(this,arguments),this},fired:function(){return!!n}};return h},re.extend({Deferred:function(t){var e=[["resolve","done",re.Callbacks("once memory"),"resolved"],["reject","fail",re.Callbacks("once memory"),"rejected"],["notify","progress",re.Callbacks("memory")]],i="pending",n={state:function(){return i},always:function(){return r.done(arguments).fail(arguments),this},then:function(){var t=arguments;return re.Deferred(function(i){re.each(e,function(e,o){var s=re.isFunction(t[e])&&t[e];r[o[1]](function(){var t=s&&s.apply(this,arguments);t&&re.isFunction(t.promise)?t.promise().done(i.resolve).fail(i.reject).progress(i.notify):i[o[0]+"With"](this===n?i.promise():this,s?[t]:arguments)})}),t=null}).promise()},promise:function(t){return null!=t?re.extend(t,n):n}},r={};return n.pipe=n.then,re.each(e,function(t,o){var s=o[2],a=o[3];n[o[1]]=s.add,a&&s.add(function(){i=a},e[1^t][2].disable,e[2][2].lock),r[o[0]]=function(){return r[o[0]+"With"](this===r?n:this,arguments),this},r[o[0]+"With"]=s.fireWith}),n.promise(r),t&&t.call(r,r),r},when:function(t){var e,i,n,r=0,o=V.call(arguments),s=o.length,a=1!==s||t&&re.isFunction(t.promise)?s:0,l=1===a?t:re.Deferred(),u=function(t,i,n){return function(r){i[t]=this,n[t]=arguments.length>1?V.call(arguments):r,n===e?l.notifyWith(i,n):--a||l.resolveWith(i,n)}};if(s>1)for(e=new Array(s),i=new Array(s),n=new Array(s);s>r;r++)o[r]&&re.isFunction(o[r].promise)?o[r].promise().done(u(r,n,o)).fail(l.reject).progress(u(r,i,e)):--a;return a||l.resolveWith(n,o),l.promise()}});var be;re.fn.ready=function(t){return re.ready.promise().done(t),this},re.extend({isReady:!1,readyWait:1,holdReady:function(t){t?re.readyWait++:re.ready(!0)},ready:function(t){if(t===!0?!--re.readyWait:!re.isReady){if(!pe.body)return setTimeout(re.ready);re.isReady=!0,t!==!0&&--re.readyWait>0||(be.resolveWith(pe,[re]),re.fn.triggerHandler&&(re(pe).triggerHandler("ready"),re(pe).off("ready")))}}}),re.ready.promise=function(e){if(!be)if(be=re.Deferred(),"complete"===pe.readyState)setTimeout(re.ready);else if(pe.addEventListener)pe.addEventListener("DOMContentLoaded",a,!1),t.addEventListener("load",a,!1);else{pe.attachEvent("onreadystatechange",a),t.attachEvent("onload",a);var i=!1;try{i=null==t.frameElement&&pe.documentElement}catch(n){}i&&i.doScroll&&!function r(){if(!re.isReady){try{i.doScroll("left")}catch(t){return setTimeout(r,50)}s(),re.ready()}}()}return be.promise(e)};var we,Te="undefined";for(we in re(ie))break;ie.ownLast="0"!==we,ie.inlineBlockNeedsLayout=!1,re(function(){var t,e,i,n;i=pe.getElementsByTagName("body")[0],i&&i.style&&(e=pe.createElement("div"),n=pe.createElement("div"),n.style.cssText="position:absolute;border:0;width:0;height:0;top:0;left:-9999px",i.appendChild(n).appendChild(e),typeof e.style.zoom!==Te&&(e.style.cssText="display:inline;margin:0;border:0;padding:1px;width:1px;zoom:1",ie.inlineBlockNeedsLayout=t=3===e.offsetWidth,t&&(i.style.zoom=1)),i.removeChild(n))}),function(){var t=pe.createElement("div");if(null==ie.deleteExpando){ie.deleteExpando=!0;try{delete t.test}catch(e){ie.deleteExpando=!1}}t=null}(),re.acceptData=function(t){var e=re.noData[(t.nodeName+" ").toLowerCase()],i=+t.nodeType||1;return 1!==i&&9!==i?!1:!e||e!==!0&&t.getAttribute("classid")===e};var ke=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,Se=/([A-Z])/g;re.extend({cache:{},noData:{"applet ":!0,"embed ":!0,"object ":"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"},hasData:function(t){return t=t.nodeType?re.cache[t[re.expando]]:t[re.expando],!!t&&!u(t)},data:function(t,e,i){return c(t,e,i)},removeData:function(t,e){return h(t,e)},_data:function(t,e,i){return c(t,e,i,!0)},_removeData:function(t,e){return h(t,e,!0)}}),re.fn.extend({data:function(t,e){var i,n,r,o=this[0],s=o&&o.attributes;if(void 0===t){if(this.length&&(r=re.data(o),1===o.nodeType&&!re._data(o,"parsedAttrs"))){for(i=s.length;i--;)s[i]&&(n=s[i].name,0===n.indexOf("data-")&&(n=re.camelCase(n.slice(5)),l(o,n,r[n])));re._data(o,"parsedAttrs",!0)}return r}return"object"==typeof t?this.each(function(){re.data(this,t)}):arguments.length>1?this.each(function(){re.data(this,t,e)}):o?l(o,t,re.data(o,t)):void 0},removeData:function(t){return this.each(function(){re.removeData(this,t)})}}),re.extend({queue:function(t,e,i){var n;return t?(e=(e||"fx")+"queue",n=re._data(t,e),i&&(!n||re.isArray(i)?n=re._data(t,e,re.makeArray(i)):n.push(i)),n||[]):void 0},dequeue:function(t,e){e=e||"fx";var i=re.queue(t,e),n=i.length,r=i.shift(),o=re._queueHooks(t,e),s=function(){re.dequeue(t,e)};"inprogress"===r&&(r=i.shift(),n--),r&&("fx"===e&&i.unshift("inprogress"),delete o.stop,r.call(t,s,o)),!n&&o&&o.empty.fire()},_queueHooks:function(t,e){var i=e+"queueHooks";return re._data(t,i)||re._data(t,i,{empty:re.Callbacks("once memory").add(function(){re._removeData(t,e+"queue"),re._removeData(t,i)})})}}),re.fn.extend({queue:function(t,e){var i=2;return"string"!=typeof t&&(e=t,t="fx",i--),arguments.length<i?re.queue(this[0],t):void 0===e?this:this.each(function(){var i=re.queue(this,t,e);re._queueHooks(this,t),"fx"===t&&"inprogress"!==i[0]&&re.dequeue(this,t)})},dequeue:function(t){return this.each(function(){re.dequeue(this,t)})},clearQueue:function(t){return this.queue(t||"fx",[])},promise:function(t,e){var i,n=1,r=re.Deferred(),o=this,s=this.length,a=function(){--n||r.resolveWith(o,[o])};for("string"!=typeof t&&(e=t,t=void 0),t=t||"fx";s--;)i=re._data(o[s],t+"queueHooks"),i&&i.empty&&(n++,i.empty.add(a));return a(),r.promise(e)}});var Ce=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,Pe=["Top","Right","Bottom","Left"],Ae=function(t,e){return t=e||t,"none"===re.css(t,"display")||!re.contains(t.ownerDocument,t)},Oe=re.access=function(t,e,i,n,r,o,s){var a=0,l=t.length,u=null==i;if("object"===re.type(i)){r=!0;for(a in i)re.access(t,e,a,i[a],!0,o,s)}else if(void 0!==n&&(r=!0,re.isFunction(n)||(s=!0),u&&(s?(e.call(t,n),e=null):(u=e,e=function(t,e,i){return u.call(re(t),i)})),e))for(;l>a;a++)e(t[a],i,s?n:n.call(t[a],a,e(t[a],i)));return r?t:u?e.call(t):l?e(t[0],i):o},De=/^(?:checkbox|radio)$/i;!function(){var t=pe.createElement("input"),e=pe.createElement("div"),i=pe.createDocumentFragment();if(e.innerHTML="  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>",ie.leadingWhitespace=3===e.firstChild.nodeType,ie.tbody=!e.getElementsByTagName("tbody").length,ie.htmlSerialize=!!e.getElementsByTagName("link").length,ie.html5Clone="<:nav></:nav>"!==pe.createElement("nav").cloneNode(!0).outerHTML,t.type="checkbox",t.checked=!0,i.appendChild(t),ie.appendChecked=t.checked,e.innerHTML="<textarea>x</textarea>",ie.noCloneChecked=!!e.cloneNode(!0).lastChild.defaultValue,i.appendChild(e),e.innerHTML="<input type='radio' checked='checked' name='t'/>",ie.checkClone=e.cloneNode(!0).cloneNode(!0).lastChild.checked,ie.noCloneEvent=!0,e.attachEvent&&(e.attachEvent("onclick",function(){ie.noCloneEvent=!1}),e.cloneNode(!0).click()),null==ie.deleteExpando){ie.deleteExpando=!0;try{delete e.test}catch(n){ie.deleteExpando=!1}}}(),function(){var e,i,n=pe.createElement("div");for(e in{submit:!0,change:!0,focusin:!0})i="on"+e,(ie[e+"Bubbles"]=i in t)||(n.setAttribute(i,"t"),ie[e+"Bubbles"]=n.attributes[i].expando===!1);n=null}();var Me=/^(?:input|select|textarea)$/i,Ne=/^key/,Re=/^(?:mouse|pointer|contextmenu)|click/,Ee=/^(?:focusinfocus|focusoutblur)$/,Le=/^([^.]*)(?:\.(.+)|)$/;re.event={global:{},add:function(t,e,i,n,r){var o,s,a,l,u,c,h,d,f,p,g,m=re._data(t);if(m){for(i.handler&&(l=i,i=l.handler,r=l.selector),i.guid||(i.guid=re.guid++),(s=m.events)||(s=m.events={}),(c=m.handle)||(c=m.handle=function(t){return typeof re===Te||t&&re.event.triggered===t.type?void 0:re.event.dispatch.apply(c.elem,arguments)},c.elem=t),e=(e||"").match(ye)||[""],a=e.length;a--;)o=Le.exec(e[a])||[],f=g=o[1],p=(o[2]||"").split(".").sort(),f&&(u=re.event.special[f]||{},f=(r?u.delegateType:u.bindType)||f,u=re.event.special[f]||{},h=re.extend({type:f,origType:g,data:n,handler:i,guid:i.guid,selector:r,needsContext:r&&re.expr.match.needsContext.test(r),namespace:p.join(".")},l),(d=s[f])||(d=s[f]=[],d.delegateCount=0,u.setup&&u.setup.call(t,n,p,c)!==!1||(t.addEventListener?t.addEventListener(f,c,!1):t.attachEvent&&t.attachEvent("on"+f,c))),u.add&&(u.add.call(t,h),h.handler.guid||(h.handler.guid=i.guid)),r?d.splice(d.delegateCount++,0,h):d.push(h),re.event.global[f]=!0);t=null}},remove:function(t,e,i,n,r){var o,s,a,l,u,c,h,d,f,p,g,m=re.hasData(t)&&re._data(t);if(m&&(c=m.events)){for(e=(e||"").match(ye)||[""],u=e.length;u--;)if(a=Le.exec(e[u])||[],f=g=a[1],p=(a[2]||"").split(".").sort(),f){for(h=re.event.special[f]||{},f=(n?h.delegateType:h.bindType)||f,d=c[f]||[],a=a[2]&&new RegExp("(^|\\.)"+p.join("\\.(?:.*\\.|)")+"(\\.|$)"),l=o=d.length;o--;)s=d[o],!r&&g!==s.origType||i&&i.guid!==s.guid||a&&!a.test(s.namespace)||n&&n!==s.selector&&("**"!==n||!s.selector)||(d.splice(o,1),s.selector&&d.delegateCount--,h.remove&&h.remove.call(t,s));l&&!d.length&&(h.teardown&&h.teardown.call(t,p,m.handle)!==!1||re.removeEvent(t,f,m.handle),delete c[f])}else for(f in c)re.event.remove(t,f+e[u],i,n,!0);re.isEmptyObject(c)&&(delete m.handle,re._removeData(t,"events"))}},trigger:function(e,i,n,r){var o,s,a,l,u,c,h,d=[n||pe],f=ee.call(e,"type")?e.type:e,p=ee.call(e,"namespace")?e.namespace.split("."):[];if(a=c=n=n||pe,3!==n.nodeType&&8!==n.nodeType&&!Ee.test(f+re.event.triggered)&&(f.indexOf(".")>=0&&(p=f.split("."),f=p.shift(),p.sort()),s=f.indexOf(":")<0&&"on"+f,e=e[re.expando]?e:new re.Event(f,"object"==typeof e&&e),e.isTrigger=r?2:3,e.namespace=p.join("."),e.namespace_re=e.namespace?new RegExp("(^|\\.)"+p.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,e.result=void 0,e.target||(e.target=n),i=null==i?[e]:re.makeArray(i,[e]),u=re.event.special[f]||{},r||!u.trigger||u.trigger.apply(n,i)!==!1)){if(!r&&!u.noBubble&&!re.isWindow(n)){for(l=u.delegateType||f,Ee.test(l+f)||(a=a.parentNode);a;a=a.parentNode)d.push(a),c=a;c===(n.ownerDocument||pe)&&d.push(c.defaultView||c.parentWindow||t)}for(h=0;(a=d[h++])&&!e.isPropagationStopped();)e.type=h>1?l:u.bindType||f,o=(re._data(a,"events")||{})[e.type]&&re._data(a,"handle"),o&&o.apply(a,i),o=s&&a[s],o&&o.apply&&re.acceptData(a)&&(e.result=o.apply(a,i),e.result===!1&&e.preventDefault());
if(e.type=f,!r&&!e.isDefaultPrevented()&&(!u._default||u._default.apply(d.pop(),i)===!1)&&re.acceptData(n)&&s&&n[f]&&!re.isWindow(n)){c=n[s],c&&(n[s]=null),re.event.triggered=f;try{n[f]()}catch(g){}re.event.triggered=void 0,c&&(n[s]=c)}return e.result}},dispatch:function(t){t=re.event.fix(t);var e,i,n,r,o,s=[],a=V.call(arguments),l=(re._data(this,"events")||{})[t.type]||[],u=re.event.special[t.type]||{};if(a[0]=t,t.delegateTarget=this,!u.preDispatch||u.preDispatch.call(this,t)!==!1){for(s=re.event.handlers.call(this,t,l),e=0;(r=s[e++])&&!t.isPropagationStopped();)for(t.currentTarget=r.elem,o=0;(n=r.handlers[o++])&&!t.isImmediatePropagationStopped();)(!t.namespace_re||t.namespace_re.test(n.namespace))&&(t.handleObj=n,t.data=n.data,i=((re.event.special[n.origType]||{}).handle||n.handler).apply(r.elem,a),void 0!==i&&(t.result=i)===!1&&(t.preventDefault(),t.stopPropagation()));return u.postDispatch&&u.postDispatch.call(this,t),t.result}},handlers:function(t,e){var i,n,r,o,s=[],a=e.delegateCount,l=t.target;if(a&&l.nodeType&&(!t.button||"click"!==t.type))for(;l!=this;l=l.parentNode||this)if(1===l.nodeType&&(l.disabled!==!0||"click"!==t.type)){for(r=[],o=0;a>o;o++)n=e[o],i=n.selector+" ",void 0===r[i]&&(r[i]=n.needsContext?re(i,this).index(l)>=0:re.find(i,this,null,[l]).length),r[i]&&r.push(n);r.length&&s.push({elem:l,handlers:r})}return a<e.length&&s.push({elem:this,handlers:e.slice(a)}),s},fix:function(t){if(t[re.expando])return t;var e,i,n,r=t.type,o=t,s=this.fixHooks[r];for(s||(this.fixHooks[r]=s=Re.test(r)?this.mouseHooks:Ne.test(r)?this.keyHooks:{}),n=s.props?this.props.concat(s.props):this.props,t=new re.Event(o),e=n.length;e--;)i=n[e],t[i]=o[i];return t.target||(t.target=o.srcElement||pe),3===t.target.nodeType&&(t.target=t.target.parentNode),t.metaKey=!!t.metaKey,s.filter?s.filter(t,o):t},props:"altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),fixHooks:{},keyHooks:{props:"char charCode key keyCode".split(" "),filter:function(t,e){return null==t.which&&(t.which=null!=e.charCode?e.charCode:e.keyCode),t}},mouseHooks:{props:"button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "),filter:function(t,e){var i,n,r,o=e.button,s=e.fromElement;return null==t.pageX&&null!=e.clientX&&(n=t.target.ownerDocument||pe,r=n.documentElement,i=n.body,t.pageX=e.clientX+(r&&r.scrollLeft||i&&i.scrollLeft||0)-(r&&r.clientLeft||i&&i.clientLeft||0),t.pageY=e.clientY+(r&&r.scrollTop||i&&i.scrollTop||0)-(r&&r.clientTop||i&&i.clientTop||0)),!t.relatedTarget&&s&&(t.relatedTarget=s===t.target?e.toElement:s),t.which||void 0===o||(t.which=1&o?1:2&o?3:4&o?2:0),t}},special:{load:{noBubble:!0},focus:{trigger:function(){if(this!==p()&&this.focus)try{return this.focus(),!1}catch(t){}},delegateType:"focusin"},blur:{trigger:function(){return this===p()&&this.blur?(this.blur(),!1):void 0},delegateType:"focusout"},click:{trigger:function(){return re.nodeName(this,"input")&&"checkbox"===this.type&&this.click?(this.click(),!1):void 0},_default:function(t){return re.nodeName(t.target,"a")}},beforeunload:{postDispatch:function(t){void 0!==t.result&&t.originalEvent&&(t.originalEvent.returnValue=t.result)}}},simulate:function(t,e,i,n){var r=re.extend(new re.Event,i,{type:t,isSimulated:!0,originalEvent:{}});n?re.event.trigger(r,null,e):re.event.dispatch.call(e,r),r.isDefaultPrevented()&&i.preventDefault()}},re.removeEvent=pe.removeEventListener?function(t,e,i){t.removeEventListener&&t.removeEventListener(e,i,!1)}:function(t,e,i){var n="on"+e;t.detachEvent&&(typeof t[n]===Te&&(t[n]=null),t.detachEvent(n,i))},re.Event=function(t,e){return this instanceof re.Event?(t&&t.type?(this.originalEvent=t,this.type=t.type,this.isDefaultPrevented=t.defaultPrevented||void 0===t.defaultPrevented&&t.returnValue===!1?d:f):this.type=t,e&&re.extend(this,e),this.timeStamp=t&&t.timeStamp||re.now(),void(this[re.expando]=!0)):new re.Event(t,e)},re.Event.prototype={isDefaultPrevented:f,isPropagationStopped:f,isImmediatePropagationStopped:f,preventDefault:function(){var t=this.originalEvent;this.isDefaultPrevented=d,t&&(t.preventDefault?t.preventDefault():t.returnValue=!1)},stopPropagation:function(){var t=this.originalEvent;this.isPropagationStopped=d,t&&(t.stopPropagation&&t.stopPropagation(),t.cancelBubble=!0)},stopImmediatePropagation:function(){var t=this.originalEvent;this.isImmediatePropagationStopped=d,t&&t.stopImmediatePropagation&&t.stopImmediatePropagation(),this.stopPropagation()}},re.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(t,e){re.event.special[t]={delegateType:e,bindType:e,handle:function(t){var i,n=this,r=t.relatedTarget,o=t.handleObj;return(!r||r!==n&&!re.contains(n,r))&&(t.type=o.origType,i=o.handler.apply(this,arguments),t.type=e),i}}}),ie.submitBubbles||(re.event.special.submit={setup:function(){return re.nodeName(this,"form")?!1:void re.event.add(this,"click._submit keypress._submit",function(t){var e=t.target,i=re.nodeName(e,"input")||re.nodeName(e,"button")?e.form:void 0;i&&!re._data(i,"submitBubbles")&&(re.event.add(i,"submit._submit",function(t){t._submit_bubble=!0}),re._data(i,"submitBubbles",!0))})},postDispatch:function(t){t._submit_bubble&&(delete t._submit_bubble,this.parentNode&&!t.isTrigger&&re.event.simulate("submit",this.parentNode,t,!0))},teardown:function(){return re.nodeName(this,"form")?!1:void re.event.remove(this,"._submit")}}),ie.changeBubbles||(re.event.special.change={setup:function(){return Me.test(this.nodeName)?(("checkbox"===this.type||"radio"===this.type)&&(re.event.add(this,"propertychange._change",function(t){"checked"===t.originalEvent.propertyName&&(this._just_changed=!0)}),re.event.add(this,"click._change",function(t){this._just_changed&&!t.isTrigger&&(this._just_changed=!1),re.event.simulate("change",this,t,!0)})),!1):void re.event.add(this,"beforeactivate._change",function(t){var e=t.target;Me.test(e.nodeName)&&!re._data(e,"changeBubbles")&&(re.event.add(e,"change._change",function(t){!this.parentNode||t.isSimulated||t.isTrigger||re.event.simulate("change",this.parentNode,t,!0)}),re._data(e,"changeBubbles",!0))})},handle:function(t){var e=t.target;return this!==e||t.isSimulated||t.isTrigger||"radio"!==e.type&&"checkbox"!==e.type?t.handleObj.handler.apply(this,arguments):void 0},teardown:function(){return re.event.remove(this,"._change"),!Me.test(this.nodeName)}}),ie.focusinBubbles||re.each({focus:"focusin",blur:"focusout"},function(t,e){var i=function(t){re.event.simulate(e,t.target,re.event.fix(t),!0)};re.event.special[e]={setup:function(){var n=this.ownerDocument||this,r=re._data(n,e);r||n.addEventListener(t,i,!0),re._data(n,e,(r||0)+1)},teardown:function(){var n=this.ownerDocument||this,r=re._data(n,e)-1;r?re._data(n,e,r):(n.removeEventListener(t,i,!0),re._removeData(n,e))}}}),re.fn.extend({on:function(t,e,i,n,r){var o,s;if("object"==typeof t){"string"!=typeof e&&(i=i||e,e=void 0);for(o in t)this.on(o,e,i,t[o],r);return this}if(null==i&&null==n?(n=e,i=e=void 0):null==n&&("string"==typeof e?(n=i,i=void 0):(n=i,i=e,e=void 0)),n===!1)n=f;else if(!n)return this;return 1===r&&(s=n,n=function(t){return re().off(t),s.apply(this,arguments)},n.guid=s.guid||(s.guid=re.guid++)),this.each(function(){re.event.add(this,t,n,i,e)})},one:function(t,e,i,n){return this.on(t,e,i,n,1)},off:function(t,e,i){var n,r;if(t&&t.preventDefault&&t.handleObj)return n=t.handleObj,re(t.delegateTarget).off(n.namespace?n.origType+"."+n.namespace:n.origType,n.selector,n.handler),this;if("object"==typeof t){for(r in t)this.off(r,e,t[r]);return this}return(e===!1||"function"==typeof e)&&(i=e,e=void 0),i===!1&&(i=f),this.each(function(){re.event.remove(this,t,i,e)})},trigger:function(t,e){return this.each(function(){re.event.trigger(t,e,this)})},triggerHandler:function(t,e){var i=this[0];return i?re.event.trigger(t,e,i,!0):void 0}});var je="abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video",Fe=/ jQuery\d+="(?:null|\d+)"/g,Ie=new RegExp("<(?:"+je+")[\\s/>]","i"),ze=/^\s+/,Xe=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,Be=/<([\w:]+)/,He=/<tbody/i,Ye=/<|&#?\w+;/,qe=/<(?:script|style|link)/i,We=/checked\s*(?:[^=]|=\s*.checked.)/i,Qe=/^$|\/(?:java|ecma)script/i,Ue=/^true\/(.*)/,$e=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g,Ve={option:[1,"<select multiple='multiple'>","</select>"],legend:[1,"<fieldset>","</fieldset>"],area:[1,"<map>","</map>"],param:[1,"<object>","</object>"],thead:[1,"<table>","</table>"],tr:[2,"<table><tbody>","</tbody></table>"],col:[2,"<table><tbody></tbody><colgroup>","</colgroup></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:ie.htmlSerialize?[0,"",""]:[1,"X<div>","</div>"]},Ge=g(pe),Ze=Ge.appendChild(pe.createElement("div"));Ve.optgroup=Ve.option,Ve.tbody=Ve.tfoot=Ve.colgroup=Ve.caption=Ve.thead,Ve.th=Ve.td,re.extend({clone:function(t,e,i){var n,r,o,s,a,l=re.contains(t.ownerDocument,t);if(ie.html5Clone||re.isXMLDoc(t)||!Ie.test("<"+t.nodeName+">")?o=t.cloneNode(!0):(Ze.innerHTML=t.outerHTML,Ze.removeChild(o=Ze.firstChild)),!(ie.noCloneEvent&&ie.noCloneChecked||1!==t.nodeType&&11!==t.nodeType||re.isXMLDoc(t)))for(n=m(o),a=m(t),s=0;null!=(r=a[s]);++s)n[s]&&T(r,n[s]);if(e)if(i)for(a=a||m(t),n=n||m(o),s=0;null!=(r=a[s]);s++)w(r,n[s]);else w(t,o);return n=m(o,"script"),n.length>0&&b(n,!l&&m(t,"script")),n=a=r=null,o},buildFragment:function(t,e,i,n){for(var r,o,s,a,l,u,c,h=t.length,d=g(e),f=[],p=0;h>p;p++)if(o=t[p],o||0===o)if("object"===re.type(o))re.merge(f,o.nodeType?[o]:o);else if(Ye.test(o)){for(a=a||d.appendChild(e.createElement("div")),l=(Be.exec(o)||["",""])[1].toLowerCase(),c=Ve[l]||Ve._default,a.innerHTML=c[1]+o.replace(Xe,"<$1></$2>")+c[2],r=c[0];r--;)a=a.lastChild;if(!ie.leadingWhitespace&&ze.test(o)&&f.push(e.createTextNode(ze.exec(o)[0])),!ie.tbody)for(o="table"!==l||He.test(o)?"<table>"!==c[1]||He.test(o)?0:a:a.firstChild,r=o&&o.childNodes.length;r--;)re.nodeName(u=o.childNodes[r],"tbody")&&!u.childNodes.length&&o.removeChild(u);for(re.merge(f,a.childNodes),a.textContent="";a.firstChild;)a.removeChild(a.firstChild);a=d.lastChild}else f.push(e.createTextNode(o));for(a&&d.removeChild(a),ie.appendChecked||re.grep(m(f,"input"),_),p=0;o=f[p++];)if((!n||-1===re.inArray(o,n))&&(s=re.contains(o.ownerDocument,o),a=m(d.appendChild(o),"script"),s&&b(a),i))for(r=0;o=a[r++];)Qe.test(o.type||"")&&i.push(o);return a=null,d},cleanData:function(t,e){for(var i,n,r,o,s=0,a=re.expando,l=re.cache,u=ie.deleteExpando,c=re.event.special;null!=(i=t[s]);s++)if((e||re.acceptData(i))&&(r=i[a],o=r&&l[r])){if(o.events)for(n in o.events)c[n]?re.event.remove(i,n):re.removeEvent(i,n,o.handle);l[r]&&(delete l[r],u?delete i[a]:typeof i.removeAttribute!==Te?i.removeAttribute(a):i[a]=null,$.push(r))}}}),re.fn.extend({text:function(t){return Oe(this,function(t){return void 0===t?re.text(this):this.empty().append((this[0]&&this[0].ownerDocument||pe).createTextNode(t))},null,t,arguments.length)},append:function(){return this.domManip(arguments,function(t){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var e=v(this,t);e.appendChild(t)}})},prepend:function(){return this.domManip(arguments,function(t){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var e=v(this,t);e.insertBefore(t,e.firstChild)}})},before:function(){return this.domManip(arguments,function(t){this.parentNode&&this.parentNode.insertBefore(t,this)})},after:function(){return this.domManip(arguments,function(t){this.parentNode&&this.parentNode.insertBefore(t,this.nextSibling)})},remove:function(t,e){for(var i,n=t?re.filter(t,this):this,r=0;null!=(i=n[r]);r++)e||1!==i.nodeType||re.cleanData(m(i)),i.parentNode&&(e&&re.contains(i.ownerDocument,i)&&b(m(i,"script")),i.parentNode.removeChild(i));return this},empty:function(){for(var t,e=0;null!=(t=this[e]);e++){for(1===t.nodeType&&re.cleanData(m(t,!1));t.firstChild;)t.removeChild(t.firstChild);t.options&&re.nodeName(t,"select")&&(t.options.length=0)}return this},clone:function(t,e){return t=null==t?!1:t,e=null==e?t:e,this.map(function(){return re.clone(this,t,e)})},html:function(t){return Oe(this,function(t){var e=this[0]||{},i=0,n=this.length;if(void 0===t)return 1===e.nodeType?e.innerHTML.replace(Fe,""):void 0;if(!("string"!=typeof t||qe.test(t)||!ie.htmlSerialize&&Ie.test(t)||!ie.leadingWhitespace&&ze.test(t)||Ve[(Be.exec(t)||["",""])[1].toLowerCase()])){t=t.replace(Xe,"<$1></$2>");try{for(;n>i;i++)e=this[i]||{},1===e.nodeType&&(re.cleanData(m(e,!1)),e.innerHTML=t);e=0}catch(r){}}e&&this.empty().append(t)},null,t,arguments.length)},replaceWith:function(){var t=arguments[0];return this.domManip(arguments,function(e){t=this.parentNode,re.cleanData(m(this)),t&&t.replaceChild(e,this)}),t&&(t.length||t.nodeType)?this:this.remove()},detach:function(t){return this.remove(t,!0)},domManip:function(t,e){t=G.apply([],t);var i,n,r,o,s,a,l=0,u=this.length,c=this,h=u-1,d=t[0],f=re.isFunction(d);if(f||u>1&&"string"==typeof d&&!ie.checkClone&&We.test(d))return this.each(function(i){var n=c.eq(i);f&&(t[0]=d.call(this,i,n.html())),n.domManip(t,e)});if(u&&(a=re.buildFragment(t,this[0].ownerDocument,!1,this),i=a.firstChild,1===a.childNodes.length&&(a=i),i)){for(o=re.map(m(a,"script"),y),r=o.length;u>l;l++)n=a,l!==h&&(n=re.clone(n,!0,!0),r&&re.merge(o,m(n,"script"))),e.call(this[l],n,l);if(r)for(s=o[o.length-1].ownerDocument,re.map(o,x),l=0;r>l;l++)n=o[l],Qe.test(n.type||"")&&!re._data(n,"globalEval")&&re.contains(s,n)&&(n.src?re._evalUrl&&re._evalUrl(n.src):re.globalEval((n.text||n.textContent||n.innerHTML||"").replace($e,"")));a=i=null}return this}}),re.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(t,e){re.fn[t]=function(t){for(var i,n=0,r=[],o=re(t),s=o.length-1;s>=n;n++)i=n===s?this:this.clone(!0),re(o[n])[e](i),Z.apply(r,i.get());return this.pushStack(r)}});var Je,Ke={};!function(){var t;ie.shrinkWrapBlocks=function(){if(null!=t)return t;t=!1;var e,i,n;return i=pe.getElementsByTagName("body")[0],i&&i.style?(e=pe.createElement("div"),n=pe.createElement("div"),n.style.cssText="position:absolute;border:0;width:0;height:0;top:0;left:-9999px",i.appendChild(n).appendChild(e),typeof e.style.zoom!==Te&&(e.style.cssText="-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:1px;width:1px;zoom:1",e.appendChild(pe.createElement("div")).style.width="5px",t=3!==e.offsetWidth),i.removeChild(n),t):void 0}}();var ti,ei,ii=/^margin/,ni=new RegExp("^("+Ce+")(?!px)[a-z%]+$","i"),ri=/^(top|right|bottom|left)$/;t.getComputedStyle?(ti=function(t){return t.ownerDocument.defaultView.getComputedStyle(t,null)},ei=function(t,e,i){var n,r,o,s,a=t.style;return i=i||ti(t),s=i?i.getPropertyValue(e)||i[e]:void 0,i&&(""!==s||re.contains(t.ownerDocument,t)||(s=re.style(t,e)),ni.test(s)&&ii.test(e)&&(n=a.width,r=a.minWidth,o=a.maxWidth,a.minWidth=a.maxWidth=a.width=s,s=i.width,a.width=n,a.minWidth=r,a.maxWidth=o)),void 0===s?s:s+""}):pe.documentElement.currentStyle&&(ti=function(t){return t.currentStyle},ei=function(t,e,i){var n,r,o,s,a=t.style;return i=i||ti(t),s=i?i[e]:void 0,null==s&&a&&a[e]&&(s=a[e]),ni.test(s)&&!ri.test(e)&&(n=a.left,r=t.runtimeStyle,o=r&&r.left,o&&(r.left=t.currentStyle.left),a.left="fontSize"===e?"1em":s,s=a.pixelLeft+"px",a.left=n,o&&(r.left=o)),void 0===s?s:s+""||"auto"}),function(){function e(){var e,i,n,r;i=pe.getElementsByTagName("body")[0],i&&i.style&&(e=pe.createElement("div"),n=pe.createElement("div"),n.style.cssText="position:absolute;border:0;width:0;height:0;top:0;left:-9999px",i.appendChild(n).appendChild(e),e.style.cssText="-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;display:block;margin-top:1%;top:1%;border:1px;padding:1px;width:4px;position:absolute",o=s=!1,l=!0,t.getComputedStyle&&(o="1%"!==(t.getComputedStyle(e,null)||{}).top,s="4px"===(t.getComputedStyle(e,null)||{width:"4px"}).width,r=e.appendChild(pe.createElement("div")),r.style.cssText=e.style.cssText="-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0",r.style.marginRight=r.style.width="0",e.style.width="1px",l=!parseFloat((t.getComputedStyle(r,null)||{}).marginRight)),e.innerHTML="<table><tr><td></td><td>t</td></tr></table>",r=e.getElementsByTagName("td"),r[0].style.cssText="margin:0;border:0;padding:0;display:none",a=0===r[0].offsetHeight,a&&(r[0].style.display="",r[1].style.display="none",a=0===r[0].offsetHeight),i.removeChild(n))}var i,n,r,o,s,a,l;i=pe.createElement("div"),i.innerHTML="  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>",r=i.getElementsByTagName("a")[0],n=r&&r.style,n&&(n.cssText="float:left;opacity:.5",ie.opacity="0.5"===n.opacity,ie.cssFloat=!!n.cssFloat,i.style.backgroundClip="content-box",i.cloneNode(!0).style.backgroundClip="",ie.clearCloneStyle="content-box"===i.style.backgroundClip,ie.boxSizing=""===n.boxSizing||""===n.MozBoxSizing||""===n.WebkitBoxSizing,re.extend(ie,{reliableHiddenOffsets:function(){return null==a&&e(),a},boxSizingReliable:function(){return null==s&&e(),s},pixelPosition:function(){return null==o&&e(),o},reliableMarginRight:function(){return null==l&&e(),l}}))}(),re.swap=function(t,e,i,n){var r,o,s={};for(o in e)s[o]=t.style[o],t.style[o]=e[o];r=i.apply(t,n||[]);for(o in e)t.style[o]=s[o];return r};var oi=/alpha\([^)]*\)/i,si=/opacity\s*=\s*([^)]*)/,ai=/^(none|table(?!-c[ea]).+)/,li=new RegExp("^("+Ce+")(.*)$","i"),ui=new RegExp("^([+-])=("+Ce+")","i"),ci={position:"absolute",visibility:"hidden",display:"block"},hi={letterSpacing:"0",fontWeight:"400"},di=["Webkit","O","Moz","ms"];re.extend({cssHooks:{opacity:{get:function(t,e){if(e){var i=ei(t,"opacity");return""===i?"1":i}}}},cssNumber:{columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{"float":ie.cssFloat?"cssFloat":"styleFloat"},style:function(t,e,i,n){if(t&&3!==t.nodeType&&8!==t.nodeType&&t.style){var r,o,s,a=re.camelCase(e),l=t.style;if(e=re.cssProps[a]||(re.cssProps[a]=P(l,a)),s=re.cssHooks[e]||re.cssHooks[a],void 0===i)return s&&"get"in s&&void 0!==(r=s.get(t,!1,n))?r:l[e];if(o=typeof i,"string"===o&&(r=ui.exec(i))&&(i=(r[1]+1)*r[2]+parseFloat(re.css(t,e)),o="number"),null!=i&&i===i&&("number"!==o||re.cssNumber[a]||(i+="px"),ie.clearCloneStyle||""!==i||0!==e.indexOf("background")||(l[e]="inherit"),!(s&&"set"in s&&void 0===(i=s.set(t,i,n)))))try{l[e]=i}catch(u){}}},css:function(t,e,i,n){var r,o,s,a=re.camelCase(e);return e=re.cssProps[a]||(re.cssProps[a]=P(t.style,a)),s=re.cssHooks[e]||re.cssHooks[a],s&&"get"in s&&(o=s.get(t,!0,i)),void 0===o&&(o=ei(t,e,n)),"normal"===o&&e in hi&&(o=hi[e]),""===i||i?(r=parseFloat(o),i===!0||re.isNumeric(r)?r||0:o):o}}),re.each(["height","width"],function(t,e){re.cssHooks[e]={get:function(t,i,n){return i?ai.test(re.css(t,"display"))&&0===t.offsetWidth?re.swap(t,ci,function(){return M(t,e,n)}):M(t,e,n):void 0},set:function(t,i,n){var r=n&&ti(t);return O(t,i,n?D(t,e,n,ie.boxSizing&&"border-box"===re.css(t,"boxSizing",!1,r),r):0)}}}),ie.opacity||(re.cssHooks.opacity={get:function(t,e){return si.test((e&&t.currentStyle?t.currentStyle.filter:t.style.filter)||"")?.01*parseFloat(RegExp.$1)+"":e?"1":""},set:function(t,e){var i=t.style,n=t.currentStyle,r=re.isNumeric(e)?"alpha(opacity="+100*e+")":"",o=n&&n.filter||i.filter||"";i.zoom=1,(e>=1||""===e)&&""===re.trim(o.replace(oi,""))&&i.removeAttribute&&(i.removeAttribute("filter"),""===e||n&&!n.filter)||(i.filter=oi.test(o)?o.replace(oi,r):o+" "+r)}}),re.cssHooks.marginRight=C(ie.reliableMarginRight,function(t,e){return e?re.swap(t,{display:"inline-block"},ei,[t,"marginRight"]):void 0}),re.each({margin:"",padding:"",border:"Width"},function(t,e){re.cssHooks[t+e]={expand:function(i){for(var n=0,r={},o="string"==typeof i?i.split(" "):[i];4>n;n++)r[t+Pe[n]+e]=o[n]||o[n-2]||o[0];return r}},ii.test(t)||(re.cssHooks[t+e].set=O)}),re.fn.extend({css:function(t,e){return Oe(this,function(t,e,i){var n,r,o={},s=0;if(re.isArray(e)){for(n=ti(t),r=e.length;r>s;s++)o[e[s]]=re.css(t,e[s],!1,n);return o}return void 0!==i?re.style(t,e,i):re.css(t,e)},t,e,arguments.length>1)},show:function(){return A(this,!0)},hide:function(){return A(this)},toggle:function(t){return"boolean"==typeof t?t?this.show():this.hide():this.each(function(){Ae(this)?re(this).show():re(this).hide()})}}),re.Tween=N,N.prototype={constructor:N,init:function(t,e,i,n,r,o){this.elem=t,this.prop=i,this.easing=r||"swing",this.options=e,this.start=this.now=this.cur(),this.end=n,this.unit=o||(re.cssNumber[i]?"":"px")},cur:function(){var t=N.propHooks[this.prop];return t&&t.get?t.get(this):N.propHooks._default.get(this)},run:function(t){var e,i=N.propHooks[this.prop];return this.pos=e=this.options.duration?re.easing[this.easing](t,this.options.duration*t,0,1,this.options.duration):t,this.now=(this.end-this.start)*e+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),i&&i.set?i.set(this):N.propHooks._default.set(this),this}},N.prototype.init.prototype=N.prototype,N.propHooks={_default:{get:function(t){var e;return null==t.elem[t.prop]||t.elem.style&&null!=t.elem.style[t.prop]?(e=re.css(t.elem,t.prop,""),e&&"auto"!==e?e:0):t.elem[t.prop]},set:function(t){re.fx.step[t.prop]?re.fx.step[t.prop](t):t.elem.style&&(null!=t.elem.style[re.cssProps[t.prop]]||re.cssHooks[t.prop])?re.style(t.elem,t.prop,t.now+t.unit):t.elem[t.prop]=t.now}}},N.propHooks.scrollTop=N.propHooks.scrollLeft={set:function(t){t.elem.nodeType&&t.elem.parentNode&&(t.elem[t.prop]=t.now)}},re.easing={linear:function(t){return t},swing:function(t){return.5-Math.cos(t*Math.PI)/2}},re.fx=N.prototype.init,re.fx.step={};var fi,pi,gi=/^(?:toggle|show|hide)$/,mi=new RegExp("^(?:([+-])=|)("+Ce+")([a-z%]*)$","i"),_i=/queueHooks$/,vi=[j],yi={"*":[function(t,e){var i=this.createTween(t,e),n=i.cur(),r=mi.exec(e),o=r&&r[3]||(re.cssNumber[t]?"":"px"),s=(re.cssNumber[t]||"px"!==o&&+n)&&mi.exec(re.css(i.elem,t)),a=1,l=20;if(s&&s[3]!==o){o=o||s[3],r=r||[],s=+n||1;do a=a||".5",s/=a,re.style(i.elem,t,s+o);while(a!==(a=i.cur()/n)&&1!==a&&--l)}return r&&(s=i.start=+s||+n||0,i.unit=o,i.end=r[1]?s+(r[1]+1)*r[2]:+r[2]),i}]};re.Animation=re.extend(I,{tweener:function(t,e){re.isFunction(t)?(e=t,t=["*"]):t=t.split(" ");for(var i,n=0,r=t.length;r>n;n++)i=t[n],yi[i]=yi[i]||[],yi[i].unshift(e)},prefilter:function(t,e){e?vi.unshift(t):vi.push(t)}}),re.speed=function(t,e,i){var n=t&&"object"==typeof t?re.extend({},t):{complete:i||!i&&e||re.isFunction(t)&&t,duration:t,easing:i&&e||e&&!re.isFunction(e)&&e};return n.duration=re.fx.off?0:"number"==typeof n.duration?n.duration:n.duration in re.fx.speeds?re.fx.speeds[n.duration]:re.fx.speeds._default,(null==n.queue||n.queue===!0)&&(n.queue="fx"),n.old=n.complete,n.complete=function(){re.isFunction(n.old)&&n.old.call(this),n.queue&&re.dequeue(this,n.queue)},n},re.fn.extend({fadeTo:function(t,e,i,n){return this.filter(Ae).css("opacity",0).show().end().animate({opacity:e},t,i,n)},animate:function(t,e,i,n){var r=re.isEmptyObject(t),o=re.speed(e,i,n),s=function(){var e=I(this,re.extend({},t),o);(r||re._data(this,"finish"))&&e.stop(!0)};return s.finish=s,r||o.queue===!1?this.each(s):this.queue(o.queue,s)},stop:function(t,e,i){var n=function(t){var e=t.stop;delete t.stop,e(i)};return"string"!=typeof t&&(i=e,e=t,t=void 0),e&&t!==!1&&this.queue(t||"fx",[]),this.each(function(){var e=!0,r=null!=t&&t+"queueHooks",o=re.timers,s=re._data(this);if(r)s[r]&&s[r].stop&&n(s[r]);else for(r in s)s[r]&&s[r].stop&&_i.test(r)&&n(s[r]);for(r=o.length;r--;)o[r].elem!==this||null!=t&&o[r].queue!==t||(o[r].anim.stop(i),e=!1,o.splice(r,1));(e||!i)&&re.dequeue(this,t)})},finish:function(t){return t!==!1&&(t=t||"fx"),this.each(function(){var e,i=re._data(this),n=i[t+"queue"],r=i[t+"queueHooks"],o=re.timers,s=n?n.length:0;for(i.finish=!0,re.queue(this,t,[]),r&&r.stop&&r.stop.call(this,!0),e=o.length;e--;)o[e].elem===this&&o[e].queue===t&&(o[e].anim.stop(!0),o.splice(e,1));for(e=0;s>e;e++)n[e]&&n[e].finish&&n[e].finish.call(this);delete i.finish})}}),re.each(["toggle","show","hide"],function(t,e){var i=re.fn[e];re.fn[e]=function(t,n,r){return null==t||"boolean"==typeof t?i.apply(this,arguments):this.animate(E(e,!0),t,n,r)}}),re.each({slideDown:E("show"),slideUp:E("hide"),slideToggle:E("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(t,e){re.fn[t]=function(t,i,n){return this.animate(e,t,i,n)}}),re.timers=[],re.fx.tick=function(){var t,e=re.timers,i=0;for(fi=re.now();i<e.length;i++)t=e[i],t()||e[i]!==t||e.splice(i--,1);e.length||re.fx.stop(),fi=void 0},re.fx.timer=function(t){re.timers.push(t),t()?re.fx.start():re.timers.pop()},re.fx.interval=13,re.fx.start=function(){pi||(pi=setInterval(re.fx.tick,re.fx.interval))},re.fx.stop=function(){clearInterval(pi),pi=null},re.fx.speeds={slow:600,fast:200,_default:400},re.fn.delay=function(t,e){return t=re.fx?re.fx.speeds[t]||t:t,e=e||"fx",this.queue(e,function(e,i){var n=setTimeout(e,t);i.stop=function(){clearTimeout(n)}})},function(){var t,e,i,n,r;e=pe.createElement("div"),e.setAttribute("className","t"),e.innerHTML="  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>",n=e.getElementsByTagName("a")[0],i=pe.createElement("select"),r=i.appendChild(pe.createElement("option")),t=e.getElementsByTagName("input")[0],n.style.cssText="top:1px",ie.getSetAttribute="t"!==e.className,ie.style=/top/.test(n.getAttribute("style")),ie.hrefNormalized="/a"===n.getAttribute("href"),ie.checkOn=!!t.value,ie.optSelected=r.selected,ie.enctype=!!pe.createElement("form").enctype,i.disabled=!0,ie.optDisabled=!r.disabled,t=pe.createElement("input"),t.setAttribute("value",""),ie.input=""===t.getAttribute("value"),t.value="t",t.setAttribute("type","radio"),ie.radioValue="t"===t.value}();var xi=/\r/g;re.fn.extend({val:function(t){var e,i,n,r=this[0];{if(arguments.length)return n=re.isFunction(t),this.each(function(i){var r;1===this.nodeType&&(r=n?t.call(this,i,re(this).val()):t,null==r?r="":"number"==typeof r?r+="":re.isArray(r)&&(r=re.map(r,function(t){return null==t?"":t+""})),e=re.valHooks[this.type]||re.valHooks[this.nodeName.toLowerCase()],e&&"set"in e&&void 0!==e.set(this,r,"value")||(this.value=r))});if(r)return e=re.valHooks[r.type]||re.valHooks[r.nodeName.toLowerCase()],e&&"get"in e&&void 0!==(i=e.get(r,"value"))?i:(i=r.value,"string"==typeof i?i.replace(xi,""):null==i?"":i)}}}),re.extend({valHooks:{option:{get:function(t){var e=re.find.attr(t,"value");return null!=e?e:re.trim(re.text(t))}},select:{get:function(t){for(var e,i,n=t.options,r=t.selectedIndex,o="select-one"===t.type||0>r,s=o?null:[],a=o?r+1:n.length,l=0>r?a:o?r:0;a>l;l++)if(i=n[l],!(!i.selected&&l!==r||(ie.optDisabled?i.disabled:null!==i.getAttribute("disabled"))||i.parentNode.disabled&&re.nodeName(i.parentNode,"optgroup"))){if(e=re(i).val(),o)return e;s.push(e)}return s},set:function(t,e){for(var i,n,r=t.options,o=re.makeArray(e),s=r.length;s--;)if(n=r[s],re.inArray(re.valHooks.option.get(n),o)>=0)try{n.selected=i=!0}catch(a){n.scrollHeight}else n.selected=!1;return i||(t.selectedIndex=-1),r}}}}),re.each(["radio","checkbox"],function(){re.valHooks[this]={set:function(t,e){return re.isArray(e)?t.checked=re.inArray(re(t).val(),e)>=0:void 0}},ie.checkOn||(re.valHooks[this].get=function(t){return null===t.getAttribute("value")?"on":t.value})});var bi,wi,Ti=re.expr.attrHandle,ki=/^(?:checked|selected)$/i,Si=ie.getSetAttribute,Ci=ie.input;re.fn.extend({attr:function(t,e){return Oe(this,re.attr,t,e,arguments.length>1)},removeAttr:function(t){return this.each(function(){re.removeAttr(this,t)})}}),re.extend({attr:function(t,e,i){var n,r,o=t.nodeType;if(t&&3!==o&&8!==o&&2!==o)return typeof t.getAttribute===Te?re.prop(t,e,i):(1===o&&re.isXMLDoc(t)||(e=e.toLowerCase(),n=re.attrHooks[e]||(re.expr.match.bool.test(e)?wi:bi)),void 0===i?n&&"get"in n&&null!==(r=n.get(t,e))?r:(r=re.find.attr(t,e),null==r?void 0:r):null!==i?n&&"set"in n&&void 0!==(r=n.set(t,i,e))?r:(t.setAttribute(e,i+""),i):void re.removeAttr(t,e))},removeAttr:function(t,e){var i,n,r=0,o=e&&e.match(ye);if(o&&1===t.nodeType)for(;i=o[r++];)n=re.propFix[i]||i,re.expr.match.bool.test(i)?Ci&&Si||!ki.test(i)?t[n]=!1:t[re.camelCase("default-"+i)]=t[n]=!1:re.attr(t,i,""),t.removeAttribute(Si?i:n)},attrHooks:{type:{set:function(t,e){if(!ie.radioValue&&"radio"===e&&re.nodeName(t,"input")){var i=t.value;return t.setAttribute("type",e),i&&(t.value=i),e}}}}}),wi={set:function(t,e,i){return e===!1?re.removeAttr(t,i):Ci&&Si||!ki.test(i)?t.setAttribute(!Si&&re.propFix[i]||i,i):t[re.camelCase("default-"+i)]=t[i]=!0,i}},re.each(re.expr.match.bool.source.match(/\w+/g),function(t,e){var i=Ti[e]||re.find.attr;Ti[e]=Ci&&Si||!ki.test(e)?function(t,e,n){var r,o;return n||(o=Ti[e],Ti[e]=r,r=null!=i(t,e,n)?e.toLowerCase():null,Ti[e]=o),r}:function(t,e,i){return i?void 0:t[re.camelCase("default-"+e)]?e.toLowerCase():null}}),Ci&&Si||(re.attrHooks.value={set:function(t,e,i){return re.nodeName(t,"input")?void(t.defaultValue=e):bi&&bi.set(t,e,i)}}),Si||(bi={set:function(t,e,i){var n=t.getAttributeNode(i);return n||t.setAttributeNode(n=t.ownerDocument.createAttribute(i)),n.value=e+="","value"===i||e===t.getAttribute(i)?e:void 0}},Ti.id=Ti.name=Ti.coords=function(t,e,i){var n;return i?void 0:(n=t.getAttributeNode(e))&&""!==n.value?n.value:null},re.valHooks.button={get:function(t,e){var i=t.getAttributeNode(e);return i&&i.specified?i.value:void 0},set:bi.set},re.attrHooks.contenteditable={set:function(t,e,i){bi.set(t,""===e?!1:e,i)}},re.each(["width","height"],function(t,e){re.attrHooks[e]={set:function(t,i){return""===i?(t.setAttribute(e,"auto"),i):void 0}}})),ie.style||(re.attrHooks.style={get:function(t){return t.style.cssText||void 0},set:function(t,e){return t.style.cssText=e+""}});var Pi=/^(?:input|select|textarea|button|object)$/i,Ai=/^(?:a|area)$/i;re.fn.extend({prop:function(t,e){return Oe(this,re.prop,t,e,arguments.length>1)},removeProp:function(t){return t=re.propFix[t]||t,this.each(function(){try{this[t]=void 0,delete this[t]}catch(e){}})}}),re.extend({propFix:{"for":"htmlFor","class":"className"},prop:function(t,e,i){var n,r,o,s=t.nodeType;if(t&&3!==s&&8!==s&&2!==s)return o=1!==s||!re.isXMLDoc(t),o&&(e=re.propFix[e]||e,r=re.propHooks[e]),void 0!==i?r&&"set"in r&&void 0!==(n=r.set(t,i,e))?n:t[e]=i:r&&"get"in r&&null!==(n=r.get(t,e))?n:t[e]},propHooks:{tabIndex:{get:function(t){var e=re.find.attr(t,"tabindex");return e?parseInt(e,10):Pi.test(t.nodeName)||Ai.test(t.nodeName)&&t.href?0:-1}}}}),ie.hrefNormalized||re.each(["href","src"],function(t,e){re.propHooks[e]={get:function(t){return t.getAttribute(e,4)}}}),ie.optSelected||(re.propHooks.selected={get:function(t){var e=t.parentNode;return e&&(e.selectedIndex,e.parentNode&&e.parentNode.selectedIndex),null}}),re.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){re.propFix[this.toLowerCase()]=this}),ie.enctype||(re.propFix.enctype="encoding");var Oi=/[\t\r\n\f]/g;re.fn.extend({addClass:function(t){var e,i,n,r,o,s,a=0,l=this.length,u="string"==typeof t&&t;if(re.isFunction(t))return this.each(function(e){re(this).addClass(t.call(this,e,this.className))});if(u)for(e=(t||"").match(ye)||[];l>a;a++)if(i=this[a],n=1===i.nodeType&&(i.className?(" "+i.className+" ").replace(Oi," "):" ")){for(o=0;r=e[o++];)n.indexOf(" "+r+" ")<0&&(n+=r+" ");s=re.trim(n),i.className!==s&&(i.className=s)}return this},removeClass:function(t){var e,i,n,r,o,s,a=0,l=this.length,u=0===arguments.length||"string"==typeof t&&t;if(re.isFunction(t))return this.each(function(e){re(this).removeClass(t.call(this,e,this.className))});if(u)for(e=(t||"").match(ye)||[];l>a;a++)if(i=this[a],n=1===i.nodeType&&(i.className?(" "+i.className+" ").replace(Oi," "):"")){for(o=0;r=e[o++];)for(;n.indexOf(" "+r+" ")>=0;)n=n.replace(" "+r+" "," ");
s=t?re.trim(n):"",i.className!==s&&(i.className=s)}return this},toggleClass:function(t,e){var i=typeof t;return"boolean"==typeof e&&"string"===i?e?this.addClass(t):this.removeClass(t):this.each(re.isFunction(t)?function(i){re(this).toggleClass(t.call(this,i,this.className,e),e)}:function(){if("string"===i)for(var e,n=0,r=re(this),o=t.match(ye)||[];e=o[n++];)r.hasClass(e)?r.removeClass(e):r.addClass(e);else(i===Te||"boolean"===i)&&(this.className&&re._data(this,"__className__",this.className),this.className=this.className||t===!1?"":re._data(this,"__className__")||"")})},hasClass:function(t){for(var e=" "+t+" ",i=0,n=this.length;n>i;i++)if(1===this[i].nodeType&&(" "+this[i].className+" ").replace(Oi," ").indexOf(e)>=0)return!0;return!1}}),re.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "),function(t,e){re.fn[e]=function(t,i){return arguments.length>0?this.on(e,null,t,i):this.trigger(e)}}),re.fn.extend({hover:function(t,e){return this.mouseenter(t).mouseleave(e||t)},bind:function(t,e,i){return this.on(t,null,e,i)},unbind:function(t,e){return this.off(t,null,e)},delegate:function(t,e,i,n){return this.on(e,t,i,n)},undelegate:function(t,e,i){return 1===arguments.length?this.off(t,"**"):this.off(e,t||"**",i)}});var Di=re.now(),Mi=/\?/,Ni=/(,)|(\[|{)|(}|])|"(?:[^"\\\r\n]|\\["\\\/bfnrt]|\\u[\da-fA-F]{4})*"\s*:?|true|false|null|-?(?!0\d)\d+(?:\.\d+|)(?:[eE][+-]?\d+|)/g;re.parseJSON=function(e){if(t.JSON&&t.JSON.parse)return t.JSON.parse(e+"");var i,n=null,r=re.trim(e+"");return r&&!re.trim(r.replace(Ni,function(t,e,r,o){return i&&e&&(n=0),0===n?t:(i=r||e,n+=!o-!r,"")}))?Function("return "+r)():re.error("Invalid JSON: "+e)},re.parseXML=function(e){var i,n;if(!e||"string"!=typeof e)return null;try{t.DOMParser?(n=new DOMParser,i=n.parseFromString(e,"text/xml")):(i=new ActiveXObject("Microsoft.XMLDOM"),i.async="false",i.loadXML(e))}catch(r){i=void 0}return i&&i.documentElement&&!i.getElementsByTagName("parsererror").length||re.error("Invalid XML: "+e),i};var Ri,Ei,Li=/#.*$/,ji=/([?&])_=[^&]*/,Fi=/^(.*?):[ \t]*([^\r\n]*)\r?$/gm,Ii=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,zi=/^(?:GET|HEAD)$/,Xi=/^\/\//,Bi=/^([\w.+-]+:)(?:\/\/(?:[^\/?#]*@|)([^\/?#:]*)(?::(\d+)|)|)/,Hi={},Yi={},qi="*/".concat("*");try{Ei=location.href}catch(Wi){Ei=pe.createElement("a"),Ei.href="",Ei=Ei.href}Ri=Bi.exec(Ei.toLowerCase())||[],re.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:Ei,type:"GET",isLocal:Ii.test(Ri[1]),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":qi,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":re.parseJSON,"text xml":re.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(t,e){return e?B(B(t,re.ajaxSettings),e):B(re.ajaxSettings,t)},ajaxPrefilter:z(Hi),ajaxTransport:z(Yi),ajax:function(t,e){function i(t,e,i,n){var r,c,_,v,x,w=e;2!==y&&(y=2,a&&clearTimeout(a),u=void 0,s=n||"",b.readyState=t>0?4:0,r=t>=200&&300>t||304===t,i&&(v=H(h,b,i)),v=Y(h,v,b,r),r?(h.ifModified&&(x=b.getResponseHeader("Last-Modified"),x&&(re.lastModified[o]=x),x=b.getResponseHeader("etag"),x&&(re.etag[o]=x)),204===t||"HEAD"===h.type?w="nocontent":304===t?w="notmodified":(w=v.state,c=v.data,_=v.error,r=!_)):(_=w,(t||!w)&&(w="error",0>t&&(t=0))),b.status=t,b.statusText=(e||w)+"",r?p.resolveWith(d,[c,w,b]):p.rejectWith(d,[b,w,_]),b.statusCode(m),m=void 0,l&&f.trigger(r?"ajaxSuccess":"ajaxError",[b,h,r?c:_]),g.fireWith(d,[b,w]),l&&(f.trigger("ajaxComplete",[b,h]),--re.active||re.event.trigger("ajaxStop")))}"object"==typeof t&&(e=t,t=void 0),e=e||{};var n,r,o,s,a,l,u,c,h=re.ajaxSetup({},e),d=h.context||h,f=h.context&&(d.nodeType||d.jquery)?re(d):re.event,p=re.Deferred(),g=re.Callbacks("once memory"),m=h.statusCode||{},_={},v={},y=0,x="canceled",b={readyState:0,getResponseHeader:function(t){var e;if(2===y){if(!c)for(c={};e=Fi.exec(s);)c[e[1].toLowerCase()]=e[2];e=c[t.toLowerCase()]}return null==e?null:e},getAllResponseHeaders:function(){return 2===y?s:null},setRequestHeader:function(t,e){var i=t.toLowerCase();return y||(t=v[i]=v[i]||t,_[t]=e),this},overrideMimeType:function(t){return y||(h.mimeType=t),this},statusCode:function(t){var e;if(t)if(2>y)for(e in t)m[e]=[m[e],t[e]];else b.always(t[b.status]);return this},abort:function(t){var e=t||x;return u&&u.abort(e),i(0,e),this}};if(p.promise(b).complete=g.add,b.success=b.done,b.error=b.fail,h.url=((t||h.url||Ei)+"").replace(Li,"").replace(Xi,Ri[1]+"//"),h.type=e.method||e.type||h.method||h.type,h.dataTypes=re.trim(h.dataType||"*").toLowerCase().match(ye)||[""],null==h.crossDomain&&(n=Bi.exec(h.url.toLowerCase()),h.crossDomain=!(!n||n[1]===Ri[1]&&n[2]===Ri[2]&&(n[3]||("http:"===n[1]?"80":"443"))===(Ri[3]||("http:"===Ri[1]?"80":"443")))),h.data&&h.processData&&"string"!=typeof h.data&&(h.data=re.param(h.data,h.traditional)),X(Hi,h,e,b),2===y)return b;l=h.global,l&&0===re.active++&&re.event.trigger("ajaxStart"),h.type=h.type.toUpperCase(),h.hasContent=!zi.test(h.type),o=h.url,h.hasContent||(h.data&&(o=h.url+=(Mi.test(o)?"&":"?")+h.data,delete h.data),h.cache===!1&&(h.url=ji.test(o)?o.replace(ji,"$1_="+Di++):o+(Mi.test(o)?"&":"?")+"_="+Di++)),h.ifModified&&(re.lastModified[o]&&b.setRequestHeader("If-Modified-Since",re.lastModified[o]),re.etag[o]&&b.setRequestHeader("If-None-Match",re.etag[o])),(h.data&&h.hasContent&&h.contentType!==!1||e.contentType)&&b.setRequestHeader("Content-Type",h.contentType),b.setRequestHeader("Accept",h.dataTypes[0]&&h.accepts[h.dataTypes[0]]?h.accepts[h.dataTypes[0]]+("*"!==h.dataTypes[0]?", "+qi+"; q=0.01":""):h.accepts["*"]);for(r in h.headers)b.setRequestHeader(r,h.headers[r]);if(h.beforeSend&&(h.beforeSend.call(d,b,h)===!1||2===y))return b.abort();x="abort";for(r in{success:1,error:1,complete:1})b[r](h[r]);if(u=X(Yi,h,e,b)){b.readyState=1,l&&f.trigger("ajaxSend",[b,h]),h.async&&h.timeout>0&&(a=setTimeout(function(){b.abort("timeout")},h.timeout));try{y=1,u.send(_,i)}catch(w){if(!(2>y))throw w;i(-1,w)}}else i(-1,"No Transport");return b},getJSON:function(t,e,i){return re.get(t,e,i,"json")},getScript:function(t,e){return re.get(t,void 0,e,"script")}}),re.each(["get","post"],function(t,e){re[e]=function(t,i,n,r){return re.isFunction(i)&&(r=r||n,n=i,i=void 0),re.ajax({url:t,type:e,dataType:r,data:i,success:n})}}),re.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(t,e){re.fn[e]=function(t){return this.on(e,t)}}),re._evalUrl=function(t){return re.ajax({url:t,type:"GET",dataType:"script",async:!1,global:!1,"throws":!0})},re.fn.extend({wrapAll:function(t){if(re.isFunction(t))return this.each(function(e){re(this).wrapAll(t.call(this,e))});if(this[0]){var e=re(t,this[0].ownerDocument).eq(0).clone(!0);this[0].parentNode&&e.insertBefore(this[0]),e.map(function(){for(var t=this;t.firstChild&&1===t.firstChild.nodeType;)t=t.firstChild;return t}).append(this)}return this},wrapInner:function(t){return this.each(re.isFunction(t)?function(e){re(this).wrapInner(t.call(this,e))}:function(){var e=re(this),i=e.contents();i.length?i.wrapAll(t):e.append(t)})},wrap:function(t){var e=re.isFunction(t);return this.each(function(i){re(this).wrapAll(e?t.call(this,i):t)})},unwrap:function(){return this.parent().each(function(){re.nodeName(this,"body")||re(this).replaceWith(this.childNodes)}).end()}}),re.expr.filters.hidden=function(t){return t.offsetWidth<=0&&t.offsetHeight<=0||!ie.reliableHiddenOffsets()&&"none"===(t.style&&t.style.display||re.css(t,"display"))},re.expr.filters.visible=function(t){return!re.expr.filters.hidden(t)};var Qi=/%20/g,Ui=/\[\]$/,$i=/\r?\n/g,Vi=/^(?:submit|button|image|reset|file)$/i,Gi=/^(?:input|select|textarea|keygen)/i;re.param=function(t,e){var i,n=[],r=function(t,e){e=re.isFunction(e)?e():null==e?"":e,n[n.length]=encodeURIComponent(t)+"="+encodeURIComponent(e)};if(void 0===e&&(e=re.ajaxSettings&&re.ajaxSettings.traditional),re.isArray(t)||t.jquery&&!re.isPlainObject(t))re.each(t,function(){r(this.name,this.value)});else for(i in t)q(i,t[i],e,r);return n.join("&").replace(Qi,"+")},re.fn.extend({serialize:function(){return re.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var t=re.prop(this,"elements");return t?re.makeArray(t):this}).filter(function(){var t=this.type;return this.name&&!re(this).is(":disabled")&&Gi.test(this.nodeName)&&!Vi.test(t)&&(this.checked||!De.test(t))}).map(function(t,e){var i=re(this).val();return null==i?null:re.isArray(i)?re.map(i,function(t){return{name:e.name,value:t.replace($i,"\r\n")}}):{name:e.name,value:i.replace($i,"\r\n")}}).get()}}),re.ajaxSettings.xhr=void 0!==t.ActiveXObject?function(){return!this.isLocal&&/^(get|post|head|put|delete|options)$/i.test(this.type)&&W()||Q()}:W;var Zi=0,Ji={},Ki=re.ajaxSettings.xhr();t.ActiveXObject&&re(t).on("unload",function(){for(var t in Ji)Ji[t](void 0,!0)}),ie.cors=!!Ki&&"withCredentials"in Ki,Ki=ie.ajax=!!Ki,Ki&&re.ajaxTransport(function(t){if(!t.crossDomain||ie.cors){var e;return{send:function(i,n){var r,o=t.xhr(),s=++Zi;if(o.open(t.type,t.url,t.async,t.username,t.password),t.xhrFields)for(r in t.xhrFields)o[r]=t.xhrFields[r];t.mimeType&&o.overrideMimeType&&o.overrideMimeType(t.mimeType),t.crossDomain||i["X-Requested-With"]||(i["X-Requested-With"]="XMLHttpRequest");for(r in i)void 0!==i[r]&&o.setRequestHeader(r,i[r]+"");o.send(t.hasContent&&t.data||null),e=function(i,r){var a,l,u;if(e&&(r||4===o.readyState))if(delete Ji[s],e=void 0,o.onreadystatechange=re.noop,r)4!==o.readyState&&o.abort();else{u={},a=o.status,"string"==typeof o.responseText&&(u.text=o.responseText);try{l=o.statusText}catch(c){l=""}a||!t.isLocal||t.crossDomain?1223===a&&(a=204):a=u.text?200:404}u&&n(a,l,u,o.getAllResponseHeaders())},t.async?4===o.readyState?setTimeout(e):o.onreadystatechange=Ji[s]=e:e()},abort:function(){e&&e(void 0,!0)}}}}),re.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/(?:java|ecma)script/},converters:{"text script":function(t){return re.globalEval(t),t}}}),re.ajaxPrefilter("script",function(t){void 0===t.cache&&(t.cache=!1),t.crossDomain&&(t.type="GET",t.global=!1)}),re.ajaxTransport("script",function(t){if(t.crossDomain){var e,i=pe.head||re("head")[0]||pe.documentElement;return{send:function(n,r){e=pe.createElement("script"),e.async=!0,t.scriptCharset&&(e.charset=t.scriptCharset),e.src=t.url,e.onload=e.onreadystatechange=function(t,i){(i||!e.readyState||/loaded|complete/.test(e.readyState))&&(e.onload=e.onreadystatechange=null,e.parentNode&&e.parentNode.removeChild(e),e=null,i||r(200,"success"))},i.insertBefore(e,i.firstChild)},abort:function(){e&&e.onload(void 0,!0)}}}});var tn=[],en=/(=)\?(?=&|$)|\?\?/;re.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var t=tn.pop()||re.expando+"_"+Di++;return this[t]=!0,t}}),re.ajaxPrefilter("json jsonp",function(e,i,n){var r,o,s,a=e.jsonp!==!1&&(en.test(e.url)?"url":"string"==typeof e.data&&!(e.contentType||"").indexOf("application/x-www-form-urlencoded")&&en.test(e.data)&&"data");return a||"jsonp"===e.dataTypes[0]?(r=e.jsonpCallback=re.isFunction(e.jsonpCallback)?e.jsonpCallback():e.jsonpCallback,a?e[a]=e[a].replace(en,"$1"+r):e.jsonp!==!1&&(e.url+=(Mi.test(e.url)?"&":"?")+e.jsonp+"="+r),e.converters["script json"]=function(){return s||re.error(r+" was not called"),s[0]},e.dataTypes[0]="json",o=t[r],t[r]=function(){s=arguments},n.always(function(){t[r]=o,e[r]&&(e.jsonpCallback=i.jsonpCallback,tn.push(r)),s&&re.isFunction(o)&&o(s[0]),s=o=void 0}),"script"):void 0}),re.parseHTML=function(t,e,i){if(!t||"string"!=typeof t)return null;"boolean"==typeof e&&(i=e,e=!1),e=e||pe;var n=he.exec(t),r=!i&&[];return n?[e.createElement(n[1])]:(n=re.buildFragment([t],e,r),r&&r.length&&re(r).remove(),re.merge([],n.childNodes))};var nn=re.fn.load;re.fn.load=function(t,e,i){if("string"!=typeof t&&nn)return nn.apply(this,arguments);var n,r,o,s=this,a=t.indexOf(" ");return a>=0&&(n=re.trim(t.slice(a,t.length)),t=t.slice(0,a)),re.isFunction(e)?(i=e,e=void 0):e&&"object"==typeof e&&(o="POST"),s.length>0&&re.ajax({url:t,type:o,dataType:"html",data:e}).done(function(t){r=arguments,s.html(n?re("<div>").append(re.parseHTML(t)).find(n):t)}).complete(i&&function(t,e){s.each(i,r||[t.responseText,e,t])}),this},re.expr.filters.animated=function(t){return re.grep(re.timers,function(e){return t===e.elem}).length};var rn=t.document.documentElement;re.offset={setOffset:function(t,e,i){var n,r,o,s,a,l,u,c=re.css(t,"position"),h=re(t),d={};"static"===c&&(t.style.position="relative"),a=h.offset(),o=re.css(t,"top"),l=re.css(t,"left"),u=("absolute"===c||"fixed"===c)&&re.inArray("auto",[o,l])>-1,u?(n=h.position(),s=n.top,r=n.left):(s=parseFloat(o)||0,r=parseFloat(l)||0),re.isFunction(e)&&(e=e.call(t,i,a)),null!=e.top&&(d.top=e.top-a.top+s),null!=e.left&&(d.left=e.left-a.left+r),"using"in e?e.using.call(t,d):h.css(d)}},re.fn.extend({offset:function(t){if(arguments.length)return void 0===t?this:this.each(function(e){re.offset.setOffset(this,t,e)});var e,i,n={top:0,left:0},r=this[0],o=r&&r.ownerDocument;if(o)return e=o.documentElement,re.contains(e,r)?(typeof r.getBoundingClientRect!==Te&&(n=r.getBoundingClientRect()),i=U(o),{top:n.top+(i.pageYOffset||e.scrollTop)-(e.clientTop||0),left:n.left+(i.pageXOffset||e.scrollLeft)-(e.clientLeft||0)}):n},position:function(){if(this[0]){var t,e,i={top:0,left:0},n=this[0];return"fixed"===re.css(n,"position")?e=n.getBoundingClientRect():(t=this.offsetParent(),e=this.offset(),re.nodeName(t[0],"html")||(i=t.offset()),i.top+=re.css(t[0],"borderTopWidth",!0),i.left+=re.css(t[0],"borderLeftWidth",!0)),{top:e.top-i.top-re.css(n,"marginTop",!0),left:e.left-i.left-re.css(n,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){for(var t=this.offsetParent||rn;t&&!re.nodeName(t,"html")&&"static"===re.css(t,"position");)t=t.offsetParent;return t||rn})}}),re.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(t,e){var i=/Y/.test(e);re.fn[t]=function(n){return Oe(this,function(t,n,r){var o=U(t);return void 0===r?o?e in o?o[e]:o.document.documentElement[n]:t[n]:void(o?o.scrollTo(i?re(o).scrollLeft():r,i?r:re(o).scrollTop()):t[n]=r)},t,n,arguments.length,null)}}),re.each(["top","left"],function(t,e){re.cssHooks[e]=C(ie.pixelPosition,function(t,i){return i?(i=ei(t,e),ni.test(i)?re(t).position()[e]+"px":i):void 0})}),re.each({Height:"height",Width:"width"},function(t,e){re.each({padding:"inner"+t,content:e,"":"outer"+t},function(i,n){re.fn[n]=function(n,r){var o=arguments.length&&(i||"boolean"!=typeof n),s=i||(n===!0||r===!0?"margin":"border");return Oe(this,function(e,i,n){var r;return re.isWindow(e)?e.document.documentElement["client"+t]:9===e.nodeType?(r=e.documentElement,Math.max(e.body["scroll"+t],r["scroll"+t],e.body["offset"+t],r["offset"+t],r["client"+t])):void 0===n?re.css(e,i,s):re.style(e,i,n,s)},e,o?n:void 0,o,null)}})}),re.fn.size=function(){return this.length},re.fn.andSelf=re.fn.addBack,"function"==typeof define&&define.amd&&define("jquery",[],function(){return re});var on=t.jQuery,sn=t.$;return re.noConflict=function(e){return t.$===re&&(t.$=sn),e&&t.jQuery===re&&(t.jQuery=on),re},typeof e===Te&&(t.jQuery=t.$=re),re});var _gsScope="undefined"!=typeof module&&module.exports&&"undefined"!=typeof global?global:this||window;(_gsScope._gsQueue||(_gsScope._gsQueue=[])).push(function(){"use strict";_gsScope._gsDefine("TweenMax",["core.Animation","core.SimpleTimeline","TweenLite"],function(t,e,i){var n=function(t){var e,i=[],n=t.length;for(e=0;e!==n;i.push(t[e++]));return i},r=function(t,e,n){i.call(this,t,e,n),this._cycle=0,this._yoyo=this.vars.yoyo===!0,this._repeat=this.vars.repeat||0,this._repeatDelay=this.vars.repeatDelay||0,this._dirty=!0,this.render=r.prototype.render},o=1e-10,s=i._internals,a=s.isSelector,l=s.isArray,u=r.prototype=i.to({},.1,{}),c=[];r.version="1.14.2",u.constructor=r,u.kill()._gc=!1,r.killTweensOf=r.killDelayedCallsTo=i.killTweensOf,r.getTweensOf=i.getTweensOf,r.lagSmoothing=i.lagSmoothing,r.ticker=i.ticker,r.render=i.render,u.invalidate=function(){return this._yoyo=this.vars.yoyo===!0,this._repeat=this.vars.repeat||0,this._repeatDelay=this.vars.repeatDelay||0,this._uncache(!0),i.prototype.invalidate.call(this)},u.updateTo=function(t,e){var n,r=this.ratio,o=this.vars.immediateRender||t.immediateRender;e&&this._startTime<this._timeline._time&&(this._startTime=this._timeline._time,this._uncache(!1),this._gc?this._enabled(!0,!1):this._timeline.insert(this,this._startTime-this._delay));for(n in t)this.vars[n]=t[n];if(this._initted||o)if(e)this._initted=!1;else if(this._gc&&this._enabled(!0,!1),this._notifyPluginsOfEnabled&&this._firstPT&&i._onPluginEvent("_onDisable",this),this._time/this._duration>.998){var s=this._time;this.render(0,!0,!1),this._initted=!1,this.render(s,!0,!1)}else if(this._time>0||o){this._initted=!1,this._init();for(var a,l=1/(1-r),u=this._firstPT;u;)a=u.s+u.c,u.c*=l,u.s=a-u.c,u=u._next}return this},u.render=function(t,e,i){this._initted||0===this._duration&&this.vars.repeat&&this.invalidate();var n,r,a,l,u,h,d,f,p=this._dirty?this.totalDuration():this._totalDuration,g=this._time,m=this._totalTime,_=this._cycle,v=this._duration,y=this._rawPrevTime;if(t>=p?(this._totalTime=p,this._cycle=this._repeat,this._yoyo&&0!==(1&this._cycle)?(this._time=0,this.ratio=this._ease._calcEnd?this._ease.getRatio(0):0):(this._time=v,this.ratio=this._ease._calcEnd?this._ease.getRatio(1):1),this._reversed||(n=!0,r="onComplete"),0===v&&(this._initted||!this.vars.lazy||i)&&(this._startTime===this._timeline._duration&&(t=0),(0===t||0>y||y===o)&&y!==t&&(i=!0,y>o&&(r="onReverseComplete")),this._rawPrevTime=f=!e||t||y===t?t:o)):1e-7>t?(this._totalTime=this._time=this._cycle=0,this.ratio=this._ease._calcEnd?this._ease.getRatio(0):0,(0!==m||0===v&&y>0&&y!==o)&&(r="onReverseComplete",n=this._reversed),0>t&&(this._active=!1,0===v&&(this._initted||!this.vars.lazy||i)&&(y>=0&&(i=!0),this._rawPrevTime=f=!e||t||y===t?t:o)),this._initted||(i=!0)):(this._totalTime=this._time=t,0!==this._repeat&&(l=v+this._repeatDelay,this._cycle=this._totalTime/l>>0,0!==this._cycle&&this._cycle===this._totalTime/l&&this._cycle--,this._time=this._totalTime-this._cycle*l,this._yoyo&&0!==(1&this._cycle)&&(this._time=v-this._time),this._time>v?this._time=v:0>this._time&&(this._time=0)),this._easeType?(u=this._time/v,h=this._easeType,d=this._easePower,(1===h||3===h&&u>=.5)&&(u=1-u),3===h&&(u*=2),1===d?u*=u:2===d?u*=u*u:3===d?u*=u*u*u:4===d&&(u*=u*u*u*u),this.ratio=1===h?1-u:2===h?u:.5>this._time/v?u/2:1-u/2):this.ratio=this._ease.getRatio(this._time/v)),g===this._time&&!i&&_===this._cycle)return void(m!==this._totalTime&&this._onUpdate&&(e||this._onUpdate.apply(this.vars.onUpdateScope||this,this.vars.onUpdateParams||c)));if(!this._initted){if(this._init(),!this._initted||this._gc)return;if(!i&&this._firstPT&&(this.vars.lazy!==!1&&this._duration||this.vars.lazy&&!this._duration))return this._time=g,this._totalTime=m,this._rawPrevTime=y,this._cycle=_,s.lazyTweens.push(this),void(this._lazy=[t,e]);this._time&&!n?this.ratio=this._ease.getRatio(this._time/v):n&&this._ease._calcEnd&&(this.ratio=this._ease.getRatio(0===this._time?0:1))}for(this._lazy!==!1&&(this._lazy=!1),this._active||!this._paused&&this._time!==g&&t>=0&&(this._active=!0),0===m&&(2===this._initted&&t>0&&this._init(),this._startAt&&(t>=0?this._startAt.render(t,e,i):r||(r="_dummyGS")),this.vars.onStart&&(0!==this._totalTime||0===v)&&(e||this.vars.onStart.apply(this.vars.onStartScope||this,this.vars.onStartParams||c))),a=this._firstPT;a;)a.f?a.t[a.p](a.c*this.ratio+a.s):a.t[a.p]=a.c*this.ratio+a.s,a=a._next;this._onUpdate&&(0>t&&this._startAt&&this._startTime&&this._startAt.render(t,e,i),e||(this._totalTime!==m||n)&&this._onUpdate.apply(this.vars.onUpdateScope||this,this.vars.onUpdateParams||c)),this._cycle!==_&&(e||this._gc||this.vars.onRepeat&&this.vars.onRepeat.apply(this.vars.onRepeatScope||this,this.vars.onRepeatParams||c)),r&&(!this._gc||i)&&(0>t&&this._startAt&&!this._onUpdate&&this._startTime&&this._startAt.render(t,e,i),n&&(this._timeline.autoRemoveChildren&&this._enabled(!1,!1),this._active=!1),!e&&this.vars[r]&&this.vars[r].apply(this.vars[r+"Scope"]||this,this.vars[r+"Params"]||c),0===v&&this._rawPrevTime===o&&f!==o&&(this._rawPrevTime=0))},r.to=function(t,e,i){return new r(t,e,i)},r.from=function(t,e,i){return i.runBackwards=!0,i.immediateRender=0!=i.immediateRender,new r(t,e,i)},r.fromTo=function(t,e,i,n){return n.startAt=i,n.immediateRender=0!=n.immediateRender&&0!=i.immediateRender,new r(t,e,n)},r.staggerTo=r.allTo=function(t,e,o,s,u,h,d){s=s||0;var f,p,g,m,_=o.delay||0,v=[],y=function(){o.onComplete&&o.onComplete.apply(o.onCompleteScope||this,arguments),u.apply(d||this,h||c)};for(l(t)||("string"==typeof t&&(t=i.selector(t)||t),a(t)&&(t=n(t))),t=t||[],0>s&&(t=n(t),t.reverse(),s*=-1),f=t.length-1,g=0;f>=g;g++){p={};for(m in o)p[m]=o[m];p.delay=_,g===f&&u&&(p.onComplete=y),v[g]=new r(t[g],e,p),_+=s}return v},r.staggerFrom=r.allFrom=function(t,e,i,n,o,s,a){return i.runBackwards=!0,i.immediateRender=0!=i.immediateRender,r.staggerTo(t,e,i,n,o,s,a)},r.staggerFromTo=r.allFromTo=function(t,e,i,n,o,s,a,l){return n.startAt=i,n.immediateRender=0!=n.immediateRender&&0!=i.immediateRender,r.staggerTo(t,e,n,o,s,a,l)},r.delayedCall=function(t,e,i,n,o){return new r(e,0,{delay:t,onComplete:e,onCompleteParams:i,onCompleteScope:n,onReverseComplete:e,onReverseCompleteParams:i,onReverseCompleteScope:n,immediateRender:!1,useFrames:o,overwrite:0})},r.set=function(t,e){return new r(t,0,e)},r.isTweening=function(t){return i.getTweensOf(t,!0).length>0};var h=function(t,e){for(var n=[],r=0,o=t._first;o;)o instanceof i?n[r++]=o:(e&&(n[r++]=o),n=n.concat(h(o,e)),r=n.length),o=o._next;return n},d=r.getAllTweens=function(e){return h(t._rootTimeline,e).concat(h(t._rootFramesTimeline,e))};r.killAll=function(t,i,n,r){null==i&&(i=!0),null==n&&(n=!0);var o,s,a,l=d(0!=r),u=l.length,c=i&&n&&r;for(a=0;u>a;a++)s=l[a],(c||s instanceof e||(o=s.target===s.vars.onComplete)&&n||i&&!o)&&(t?s.totalTime(s._reversed?0:s.totalDuration()):s._enabled(!1,!1))},r.killChildTweensOf=function(t,e){if(null!=t){var o,u,c,h,d,f=s.tweenLookup;if("string"==typeof t&&(t=i.selector(t)||t),a(t)&&(t=n(t)),l(t))for(h=t.length;--h>-1;)r.killChildTweensOf(t[h],e);else{o=[];for(c in f)for(u=f[c].target.parentNode;u;)u===t&&(o=o.concat(f[c].tweens)),u=u.parentNode;for(d=o.length,h=0;d>h;h++)e&&o[h].totalTime(o[h].totalDuration()),o[h]._enabled(!1,!1)}}};var f=function(t,i,n,r){i=i!==!1,n=n!==!1,r=r!==!1;for(var o,s,a=d(r),l=i&&n&&r,u=a.length;--u>-1;)s=a[u],(l||s instanceof e||(o=s.target===s.vars.onComplete)&&n||i&&!o)&&s.paused(t)};return r.pauseAll=function(t,e,i){f(!0,t,e,i)},r.resumeAll=function(t,e,i){f(!1,t,e,i)},r.globalTimeScale=function(e){var n=t._rootTimeline,r=i.ticker.time;return arguments.length?(e=e||o,n._startTime=r-(r-n._startTime)*n._timeScale/e,n=t._rootFramesTimeline,r=i.ticker.frame,n._startTime=r-(r-n._startTime)*n._timeScale/e,n._timeScale=t._rootTimeline._timeScale=e,e):n._timeScale},u.progress=function(t){return arguments.length?this.totalTime(this.duration()*(this._yoyo&&0!==(1&this._cycle)?1-t:t)+this._cycle*(this._duration+this._repeatDelay),!1):this._time/this.duration()},u.totalProgress=function(t){return arguments.length?this.totalTime(this.totalDuration()*t,!1):this._totalTime/this.totalDuration()},u.time=function(t,e){return arguments.length?(this._dirty&&this.totalDuration(),t>this._duration&&(t=this._duration),this._yoyo&&0!==(1&this._cycle)?t=this._duration-t+this._cycle*(this._duration+this._repeatDelay):0!==this._repeat&&(t+=this._cycle*(this._duration+this._repeatDelay)),this.totalTime(t,e)):this._time},u.duration=function(e){return arguments.length?t.prototype.duration.call(this,e):this._duration},u.totalDuration=function(t){return arguments.length?-1===this._repeat?this:this.duration((t-this._repeat*this._repeatDelay)/(this._repeat+1)):(this._dirty&&(this._totalDuration=-1===this._repeat?999999999999:this._duration*(this._repeat+1)+this._repeatDelay*this._repeat,this._dirty=!1),this._totalDuration)},u.repeat=function(t){return arguments.length?(this._repeat=t,this._uncache(!0)):this._repeat},u.repeatDelay=function(t){return arguments.length?(this._repeatDelay=t,this._uncache(!0)):this._repeatDelay},u.yoyo=function(t){return arguments.length?(this._yoyo=t,this):this._yoyo},r},!0),_gsScope._gsDefine("TimelineLite",["core.Animation","core.SimpleTimeline","TweenLite"],function(t,e,i){var n=function(t){e.call(this,t),this._labels={},this.autoRemoveChildren=this.vars.autoRemoveChildren===!0,this.smoothChildTiming=this.vars.smoothChildTiming===!0,this._sortChildren=!0,this._onUpdate=this.vars.onUpdate;var i,n,r=this.vars;for(n in r)i=r[n],a(i)&&-1!==i.join("").indexOf("{self}")&&(r[n]=this._swapSelfInParams(i));a(r.tweens)&&this.add(r.tweens,0,r.align,r.stagger)},r=1e-10,o=i._internals,s=o.isSelector,a=o.isArray,l=o.lazyTweens,u=o.lazyRender,c=[],h=_gsScope._gsDefine.globals,d=function(t){var e,i={};for(e in t)i[e]=t[e];return i},f=function(t,e,i,n){var r=t._timeline._totalTime;(e||!this._forcingPlayhead)&&(t._timeline.pause(t._startTime),e&&e.apply(n||t._timeline,i||c),this._forcingPlayhead&&t._timeline.seek(r))},p=function(t){var e,i=[],n=t.length;for(e=0;e!==n;i.push(t[e++]));return i},g=n.prototype=new e;return n.version="1.14.2",g.constructor=n,g.kill()._gc=g._forcingPlayhead=!1,g.to=function(t,e,n,r){var o=n.repeat&&h.TweenMax||i;return e?this.add(new o(t,e,n),r):this.set(t,n,r)},g.from=function(t,e,n,r){return this.add((n.repeat&&h.TweenMax||i).from(t,e,n),r)},g.fromTo=function(t,e,n,r,o){var s=r.repeat&&h.TweenMax||i;return e?this.add(s.fromTo(t,e,n,r),o):this.set(t,r,o)},g.staggerTo=function(t,e,r,o,a,l,u,c){var h,f=new n({onComplete:l,onCompleteParams:u,onCompleteScope:c,smoothChildTiming:this.smoothChildTiming});for("string"==typeof t&&(t=i.selector(t)||t),t=t||[],s(t)&&(t=p(t)),o=o||0,0>o&&(t=p(t),t.reverse(),o*=-1),h=0;t.length>h;h++)r.startAt&&(r.startAt=d(r.startAt)),f.to(t[h],e,d(r),h*o);return this.add(f,a)},g.staggerFrom=function(t,e,i,n,r,o,s,a){return i.immediateRender=0!=i.immediateRender,i.runBackwards=!0,this.staggerTo(t,e,i,n,r,o,s,a)},g.staggerFromTo=function(t,e,i,n,r,o,s,a,l){return n.startAt=i,n.immediateRender=0!=n.immediateRender&&0!=i.immediateRender,this.staggerTo(t,e,n,r,o,s,a,l)},g.call=function(t,e,n,r){return this.add(i.delayedCall(0,t,e,n),r)},g.set=function(t,e,n){return n=this._parseTimeOrLabel(n,0,!0),null==e.immediateRender&&(e.immediateRender=n===this._time&&!this._paused),this.add(new i(t,0,e),n)},n.exportRoot=function(t,e){t=t||{},null==t.smoothChildTiming&&(t.smoothChildTiming=!0);var r,o,s=new n(t),a=s._timeline;for(null==e&&(e=!0),a._remove(s,!0),s._startTime=0,s._rawPrevTime=s._time=s._totalTime=a._time,r=a._first;r;)o=r._next,e&&r instanceof i&&r.target===r.vars.onComplete||s.add(r,r._startTime-r._delay),r=o;return a.add(s,0),s},g.add=function(r,o,s,l){var u,c,h,d,f,p;if("number"!=typeof o&&(o=this._parseTimeOrLabel(o,0,!0,r)),!(r instanceof t)){if(r instanceof Array||r&&r.push&&a(r)){for(s=s||"normal",l=l||0,u=o,c=r.length,h=0;c>h;h++)a(d=r[h])&&(d=new n({tweens:d})),this.add(d,u),"string"!=typeof d&&"function"!=typeof d&&("sequence"===s?u=d._startTime+d.totalDuration()/d._timeScale:"start"===s&&(d._startTime-=d.delay())),u+=l;return this._uncache(!0)}if("string"==typeof r)return this.addLabel(r,o);if("function"!=typeof r)throw"Cannot add "+r+" into the timeline; it is not a tween, timeline, function, or string.";r=i.delayedCall(0,r)}if(e.prototype.add.call(this,r,o),(this._gc||this._time===this._duration)&&!this._paused&&this._duration<this.duration())for(f=this,p=f.rawTime()>r._startTime;f._timeline;)p&&f._timeline.smoothChildTiming?f.totalTime(f._totalTime,!0):f._gc&&f._enabled(!0,!1),f=f._timeline;return this},g.remove=function(e){if(e instanceof t)return this._remove(e,!1);if(e instanceof Array||e&&e.push&&a(e)){for(var i=e.length;--i>-1;)this.remove(e[i]);return this}return"string"==typeof e?this.removeLabel(e):this.kill(null,e)},g._remove=function(t,i){e.prototype._remove.call(this,t,i);var n=this._last;return n?this._time>n._startTime+n._totalDuration/n._timeScale&&(this._time=this.duration(),this._totalTime=this._totalDuration):this._time=this._totalTime=this._duration=this._totalDuration=0,this},g.append=function(t,e){return this.add(t,this._parseTimeOrLabel(null,e,!0,t))},g.insert=g.insertMultiple=function(t,e,i,n){return this.add(t,e||0,i,n)},g.appendMultiple=function(t,e,i,n){return this.add(t,this._parseTimeOrLabel(null,e,!0,t),i,n)},g.addLabel=function(t,e){return this._labels[t]=this._parseTimeOrLabel(e),this},g.addPause=function(t,e,i,n){return this.call(f,["{self}",e,i,n],this,t)},g.removeLabel=function(t){return delete this._labels[t],this},g.getLabelTime=function(t){return null!=this._labels[t]?this._labels[t]:-1},g._parseTimeOrLabel=function(e,i,n,r){var o;if(r instanceof t&&r.timeline===this)this.remove(r);else if(r&&(r instanceof Array||r.push&&a(r)))for(o=r.length;--o>-1;)r[o]instanceof t&&r[o].timeline===this&&this.remove(r[o]);if("string"==typeof i)return this._parseTimeOrLabel(i,n&&"number"==typeof e&&null==this._labels[i]?e-this.duration():0,n);if(i=i||0,"string"!=typeof e||!isNaN(e)&&null==this._labels[e])null==e&&(e=this.duration());else{if(o=e.indexOf("="),-1===o)return null==this._labels[e]?n?this._labels[e]=this.duration()+i:i:this._labels[e]+i;i=parseInt(e.charAt(o-1)+"1",10)*Number(e.substr(o+1)),e=o>1?this._parseTimeOrLabel(e.substr(0,o-1),0,n):this.duration()}return Number(e)+i},g.seek=function(t,e){return this.totalTime("number"==typeof t?t:this._parseTimeOrLabel(t),e!==!1)},g.stop=function(){return this.paused(!0)},g.gotoAndPlay=function(t,e){return this.play(t,e)},g.gotoAndStop=function(t,e){return this.pause(t,e)},g.render=function(t,e,i){this._gc&&this._enabled(!0,!1);var n,o,s,a,h,d=this._dirty?this.totalDuration():this._totalDuration,f=this._time,p=this._startTime,g=this._timeScale,m=this._paused;if(t>=d?(this._totalTime=this._time=d,this._reversed||this._hasPausedChild()||(o=!0,a="onComplete",0===this._duration&&(0===t||0>this._rawPrevTime||this._rawPrevTime===r)&&this._rawPrevTime!==t&&this._first&&(h=!0,this._rawPrevTime>r&&(a="onReverseComplete"))),this._rawPrevTime=this._duration||!e||t||this._rawPrevTime===t?t:r,t=d+1e-4):1e-7>t?(this._totalTime=this._time=0,(0!==f||0===this._duration&&this._rawPrevTime!==r&&(this._rawPrevTime>0||0>t&&this._rawPrevTime>=0))&&(a="onReverseComplete",o=this._reversed),0>t?(this._active=!1,this._rawPrevTime>=0&&this._first&&(h=!0),this._rawPrevTime=t):(this._rawPrevTime=this._duration||!e||t||this._rawPrevTime===t?t:r,t=0,this._initted||(h=!0))):this._totalTime=this._time=this._rawPrevTime=t,this._time!==f&&this._first||i||h){if(this._initted||(this._initted=!0),this._active||!this._paused&&this._time!==f&&t>0&&(this._active=!0),0===f&&this.vars.onStart&&0!==this._time&&(e||this.vars.onStart.apply(this.vars.onStartScope||this,this.vars.onStartParams||c)),this._time>=f)for(n=this._first;n&&(s=n._next,!this._paused||m);)(n._active||n._startTime<=this._time&&!n._paused&&!n._gc)&&(n._reversed?n.render((n._dirty?n.totalDuration():n._totalDuration)-(t-n._startTime)*n._timeScale,e,i):n.render((t-n._startTime)*n._timeScale,e,i)),n=s;else for(n=this._last;n&&(s=n._prev,!this._paused||m);)(n._active||f>=n._startTime&&!n._paused&&!n._gc)&&(n._reversed?n.render((n._dirty?n.totalDuration():n._totalDuration)-(t-n._startTime)*n._timeScale,e,i):n.render((t-n._startTime)*n._timeScale,e,i)),n=s;this._onUpdate&&(e||(l.length&&u(),this._onUpdate.apply(this.vars.onUpdateScope||this,this.vars.onUpdateParams||c))),a&&(this._gc||(p===this._startTime||g!==this._timeScale)&&(0===this._time||d>=this.totalDuration())&&(o&&(l.length&&u(),this._timeline.autoRemoveChildren&&this._enabled(!1,!1),this._active=!1),!e&&this.vars[a]&&this.vars[a].apply(this.vars[a+"Scope"]||this,this.vars[a+"Params"]||c)))
}},g._hasPausedChild=function(){for(var t=this._first;t;){if(t._paused||t instanceof n&&t._hasPausedChild())return!0;t=t._next}return!1},g.getChildren=function(t,e,n,r){r=r||-9999999999;for(var o=[],s=this._first,a=0;s;)r>s._startTime||(s instanceof i?e!==!1&&(o[a++]=s):(n!==!1&&(o[a++]=s),t!==!1&&(o=o.concat(s.getChildren(!0,e,n)),a=o.length))),s=s._next;return o},g.getTweensOf=function(t,e){var n,r,o=this._gc,s=[],a=0;for(o&&this._enabled(!0,!0),n=i.getTweensOf(t),r=n.length;--r>-1;)(n[r].timeline===this||e&&this._contains(n[r]))&&(s[a++]=n[r]);return o&&this._enabled(!1,!0),s},g.recent=function(){return this._recent},g._contains=function(t){for(var e=t.timeline;e;){if(e===this)return!0;e=e.timeline}return!1},g.shiftChildren=function(t,e,i){i=i||0;for(var n,r=this._first,o=this._labels;r;)r._startTime>=i&&(r._startTime+=t),r=r._next;if(e)for(n in o)o[n]>=i&&(o[n]+=t);return this._uncache(!0)},g._kill=function(t,e){if(!t&&!e)return this._enabled(!1,!1);for(var i=e?this.getTweensOf(e):this.getChildren(!0,!0,!1),n=i.length,r=!1;--n>-1;)i[n]._kill(t,e)&&(r=!0);return r},g.clear=function(t){var e=this.getChildren(!1,!0,!0),i=e.length;for(this._time=this._totalTime=0;--i>-1;)e[i]._enabled(!1,!1);return t!==!1&&(this._labels={}),this._uncache(!0)},g.invalidate=function(){for(var e=this._first;e;)e.invalidate(),e=e._next;return t.prototype.invalidate.call(this)},g._enabled=function(t,i){if(t===this._gc)for(var n=this._first;n;)n._enabled(t,!0),n=n._next;return e.prototype._enabled.call(this,t,i)},g.totalTime=function(){this._forcingPlayhead=!0;var e=t.prototype.totalTime.apply(this,arguments);return this._forcingPlayhead=!1,e},g.duration=function(t){return arguments.length?(0!==this.duration()&&0!==t&&this.timeScale(this._duration/t),this):(this._dirty&&this.totalDuration(),this._duration)},g.totalDuration=function(t){if(!arguments.length){if(this._dirty){for(var e,i,n=0,r=this._last,o=999999999999;r;)e=r._prev,r._dirty&&r.totalDuration(),r._startTime>o&&this._sortChildren&&!r._paused?this.add(r,r._startTime-r._delay):o=r._startTime,0>r._startTime&&!r._paused&&(n-=r._startTime,this._timeline.smoothChildTiming&&(this._startTime+=r._startTime/this._timeScale),this.shiftChildren(-r._startTime,!1,-9999999999),o=0),i=r._startTime+r._totalDuration/r._timeScale,i>n&&(n=i),r=e;this._duration=this._totalDuration=n,this._dirty=!1}return this._totalDuration}return 0!==this.totalDuration()&&0!==t&&this.timeScale(this._totalDuration/t),this},g.usesFrames=function(){for(var e=this._timeline;e._timeline;)e=e._timeline;return e===t._rootFramesTimeline},g.rawTime=function(){return this._paused?this._totalTime:(this._timeline.rawTime()-this._startTime)*this._timeScale},n},!0),_gsScope._gsDefine("TimelineMax",["TimelineLite","TweenLite","easing.Ease"],function(t,e,i){var n=function(e){t.call(this,e),this._repeat=this.vars.repeat||0,this._repeatDelay=this.vars.repeatDelay||0,this._cycle=0,this._yoyo=this.vars.yoyo===!0,this._dirty=!0},r=1e-10,o=[],s=e._internals,a=s.lazyTweens,l=s.lazyRender,u=new i(null,null,1,0),c=n.prototype=new t;return c.constructor=n,c.kill()._gc=!1,n.version="1.14.2",c.invalidate=function(){return this._yoyo=this.vars.yoyo===!0,this._repeat=this.vars.repeat||0,this._repeatDelay=this.vars.repeatDelay||0,this._uncache(!0),t.prototype.invalidate.call(this)},c.addCallback=function(t,i,n,r){return this.add(e.delayedCall(0,t,n,r),i)},c.removeCallback=function(t,e){if(t)if(null==e)this._kill(null,t);else for(var i=this.getTweensOf(t,!1),n=i.length,r=this._parseTimeOrLabel(e);--n>-1;)i[n]._startTime===r&&i[n]._enabled(!1,!1);return this},c.tweenTo=function(t,i){i=i||{};var n,r,s,a={ease:u,overwrite:i.delay?2:1,useFrames:this.usesFrames(),immediateRender:!1};for(r in i)a[r]=i[r];return a.time=this._parseTimeOrLabel(t),n=Math.abs(Number(a.time)-this._time)/this._timeScale||.001,s=new e(this,n,a),a.onStart=function(){s.target.paused(!0),s.vars.time!==s.target.time()&&n===s.duration()&&s.duration(Math.abs(s.vars.time-s.target.time())/s.target._timeScale),i.onStart&&i.onStart.apply(i.onStartScope||s,i.onStartParams||o)},s},c.tweenFromTo=function(t,e,i){i=i||{},t=this._parseTimeOrLabel(t),i.startAt={onComplete:this.seek,onCompleteParams:[t],onCompleteScope:this},i.immediateRender=i.immediateRender!==!1;var n=this.tweenTo(e,i);return n.duration(Math.abs(n.vars.time-t)/this._timeScale||.001)},c.render=function(t,e,i){this._gc&&this._enabled(!0,!1);var n,s,u,c,h,d,f=this._dirty?this.totalDuration():this._totalDuration,p=this._duration,g=this._time,m=this._totalTime,_=this._startTime,v=this._timeScale,y=this._rawPrevTime,x=this._paused,b=this._cycle;if(t>=f?(this._locked||(this._totalTime=f,this._cycle=this._repeat),this._reversed||this._hasPausedChild()||(s=!0,c="onComplete",0===this._duration&&(0===t||0>y||y===r)&&y!==t&&this._first&&(h=!0,y>r&&(c="onReverseComplete"))),this._rawPrevTime=this._duration||!e||t||this._rawPrevTime===t?t:r,this._yoyo&&0!==(1&this._cycle)?this._time=t=0:(this._time=p,t=p+1e-4)):1e-7>t?(this._locked||(this._totalTime=this._cycle=0),this._time=0,(0!==g||0===p&&y!==r&&(y>0||0>t&&y>=0)&&!this._locked)&&(c="onReverseComplete",s=this._reversed),0>t?(this._active=!1,y>=0&&this._first&&(h=!0),this._rawPrevTime=t):(this._rawPrevTime=p||!e||t||this._rawPrevTime===t?t:r,t=0,this._initted||(h=!0))):(0===p&&0>y&&(h=!0),this._time=this._rawPrevTime=t,this._locked||(this._totalTime=t,0!==this._repeat&&(d=p+this._repeatDelay,this._cycle=this._totalTime/d>>0,0!==this._cycle&&this._cycle===this._totalTime/d&&this._cycle--,this._time=this._totalTime-this._cycle*d,this._yoyo&&0!==(1&this._cycle)&&(this._time=p-this._time),this._time>p?(this._time=p,t=p+1e-4):0>this._time?this._time=t=0:t=this._time))),this._cycle!==b&&!this._locked){var w=this._yoyo&&0!==(1&b),T=w===(this._yoyo&&0!==(1&this._cycle)),k=this._totalTime,S=this._cycle,C=this._rawPrevTime,P=this._time;if(this._totalTime=b*p,b>this._cycle?w=!w:this._totalTime+=p,this._time=g,this._rawPrevTime=0===p?y-1e-4:y,this._cycle=b,this._locked=!0,g=w?0:p,this.render(g,e,0===p),e||this._gc||this.vars.onRepeat&&this.vars.onRepeat.apply(this.vars.onRepeatScope||this,this.vars.onRepeatParams||o),T&&(g=w?p+1e-4:-1e-4,this.render(g,!0,!1)),this._locked=!1,this._paused&&!x)return;this._time=P,this._totalTime=k,this._cycle=S,this._rawPrevTime=C}if(!(this._time!==g&&this._first||i||h))return void(m!==this._totalTime&&this._onUpdate&&(e||this._onUpdate.apply(this.vars.onUpdateScope||this,this.vars.onUpdateParams||o)));if(this._initted||(this._initted=!0),this._active||!this._paused&&this._totalTime!==m&&t>0&&(this._active=!0),0===m&&this.vars.onStart&&0!==this._totalTime&&(e||this.vars.onStart.apply(this.vars.onStartScope||this,this.vars.onStartParams||o)),this._time>=g)for(n=this._first;n&&(u=n._next,!this._paused||x);)(n._active||n._startTime<=this._time&&!n._paused&&!n._gc)&&(n._reversed?n.render((n._dirty?n.totalDuration():n._totalDuration)-(t-n._startTime)*n._timeScale,e,i):n.render((t-n._startTime)*n._timeScale,e,i)),n=u;else for(n=this._last;n&&(u=n._prev,!this._paused||x);)(n._active||g>=n._startTime&&!n._paused&&!n._gc)&&(n._reversed?n.render((n._dirty?n.totalDuration():n._totalDuration)-(t-n._startTime)*n._timeScale,e,i):n.render((t-n._startTime)*n._timeScale,e,i)),n=u;this._onUpdate&&(e||(a.length&&l(),this._onUpdate.apply(this.vars.onUpdateScope||this,this.vars.onUpdateParams||o))),c&&(this._locked||this._gc||(_===this._startTime||v!==this._timeScale)&&(0===this._time||f>=this.totalDuration())&&(s&&(a.length&&l(),this._timeline.autoRemoveChildren&&this._enabled(!1,!1),this._active=!1),!e&&this.vars[c]&&this.vars[c].apply(this.vars[c+"Scope"]||this,this.vars[c+"Params"]||o)))},c.getActive=function(t,e,i){null==t&&(t=!0),null==e&&(e=!0),null==i&&(i=!1);var n,r,o=[],s=this.getChildren(t,e,i),a=0,l=s.length;for(n=0;l>n;n++)r=s[n],r.isActive()&&(o[a++]=r);return o},c.getLabelAfter=function(t){t||0!==t&&(t=this._time);var e,i=this.getLabelsArray(),n=i.length;for(e=0;n>e;e++)if(i[e].time>t)return i[e].name;return null},c.getLabelBefore=function(t){null==t&&(t=this._time);for(var e=this.getLabelsArray(),i=e.length;--i>-1;)if(t>e[i].time)return e[i].name;return null},c.getLabelsArray=function(){var t,e=[],i=0;for(t in this._labels)e[i++]={time:this._labels[t],name:t};return e.sort(function(t,e){return t.time-e.time}),e},c.progress=function(t,e){return arguments.length?this.totalTime(this.duration()*(this._yoyo&&0!==(1&this._cycle)?1-t:t)+this._cycle*(this._duration+this._repeatDelay),e):this._time/this.duration()},c.totalProgress=function(t,e){return arguments.length?this.totalTime(this.totalDuration()*t,e):this._totalTime/this.totalDuration()},c.totalDuration=function(e){return arguments.length?-1===this._repeat?this:this.duration((e-this._repeat*this._repeatDelay)/(this._repeat+1)):(this._dirty&&(t.prototype.totalDuration.call(this),this._totalDuration=-1===this._repeat?999999999999:this._duration*(this._repeat+1)+this._repeatDelay*this._repeat),this._totalDuration)},c.time=function(t,e){return arguments.length?(this._dirty&&this.totalDuration(),t>this._duration&&(t=this._duration),this._yoyo&&0!==(1&this._cycle)?t=this._duration-t+this._cycle*(this._duration+this._repeatDelay):0!==this._repeat&&(t+=this._cycle*(this._duration+this._repeatDelay)),this.totalTime(t,e)):this._time},c.repeat=function(t){return arguments.length?(this._repeat=t,this._uncache(!0)):this._repeat},c.repeatDelay=function(t){return arguments.length?(this._repeatDelay=t,this._uncache(!0)):this._repeatDelay},c.yoyo=function(t){return arguments.length?(this._yoyo=t,this):this._yoyo},c.currentLabel=function(t){return arguments.length?this.seek(t,!0):this.getLabelBefore(this._time+1e-8)},n},!0),function(){var t=180/Math.PI,e=[],i=[],n=[],r={},o=function(t,e,i,n){this.a=t,this.b=e,this.c=i,this.d=n,this.da=n-t,this.ca=i-t,this.ba=e-t},s=",x,y,z,left,top,right,bottom,marginTop,marginLeft,marginRight,marginBottom,paddingLeft,paddingTop,paddingRight,paddingBottom,backgroundPosition,backgroundPosition_y,",a=function(t,e,i,n){var r={a:t},o={},s={},a={c:n},l=(t+e)/2,u=(e+i)/2,c=(i+n)/2,h=(l+u)/2,d=(u+c)/2,f=(d-h)/8;return r.b=l+(t-l)/4,o.b=h+f,r.c=o.a=(r.b+o.b)/2,o.c=s.a=(h+d)/2,s.b=d-f,a.b=c+(n-c)/4,s.c=a.a=(s.b+a.b)/2,[r,o,s,a]},l=function(t,r,o,s,l){var u,c,h,d,f,p,g,m,_,v,y,x,b,w=t.length-1,T=0,k=t[0].a;for(u=0;w>u;u++)f=t[T],c=f.a,h=f.d,d=t[T+1].d,l?(y=e[u],x=i[u],b=.25*(x+y)*r/(s?.5:n[u]||.5),p=h-(h-c)*(s?.5*r:0!==y?b/y:0),g=h+(d-h)*(s?.5*r:0!==x?b/x:0),m=h-(p+((g-p)*(3*y/(y+x)+.5)/4||0))):(p=h-.5*(h-c)*r,g=h+.5*(d-h)*r,m=h-(p+g)/2),p+=m,g+=m,f.c=_=p,f.b=0!==u?k:k=f.a+.6*(f.c-f.a),f.da=h-c,f.ca=_-c,f.ba=k-c,o?(v=a(c,k,_,h),t.splice(T,1,v[0],v[1],v[2],v[3]),T+=4):T++,k=g;f=t[T],f.b=k,f.c=k+.4*(f.d-k),f.da=f.d-f.a,f.ca=f.c-f.a,f.ba=k-f.a,o&&(v=a(f.a,k,f.c,f.d),t.splice(T,1,v[0],v[1],v[2],v[3]))},u=function(t,n,r,s){var a,l,u,c,h,d,f=[];if(s)for(t=[s].concat(t),l=t.length;--l>-1;)"string"==typeof(d=t[l][n])&&"="===d.charAt(1)&&(t[l][n]=s[n]+Number(d.charAt(0)+d.substr(2)));if(a=t.length-2,0>a)return f[0]=new o(t[0][n],0,0,t[-1>a?0:1][n]),f;for(l=0;a>l;l++)u=t[l][n],c=t[l+1][n],f[l]=new o(u,0,0,c),r&&(h=t[l+2][n],e[l]=(e[l]||0)+(c-u)*(c-u),i[l]=(i[l]||0)+(h-c)*(h-c));return f[l]=new o(t[l][n],0,0,t[l+1][n]),f},c=function(t,o,a,c,h,d){var f,p,g,m,_,v,y,x,b={},w=[],T=d||t[0];h="string"==typeof h?","+h+",":s,null==o&&(o=1);for(p in t[0])w.push(p);if(t.length>1){for(x=t[t.length-1],y=!0,f=w.length;--f>-1;)if(p=w[f],Math.abs(T[p]-x[p])>.05){y=!1;break}y&&(t=t.concat(),d&&t.unshift(d),t.push(t[1]),d=t[t.length-3])}for(e.length=i.length=n.length=0,f=w.length;--f>-1;)p=w[f],r[p]=-1!==h.indexOf(","+p+","),b[p]=u(t,p,r[p],d);for(f=e.length;--f>-1;)e[f]=Math.sqrt(e[f]),i[f]=Math.sqrt(i[f]);if(!c){for(f=w.length;--f>-1;)if(r[p])for(g=b[w[f]],v=g.length-1,m=0;v>m;m++)_=g[m+1].da/i[m]+g[m].da/e[m],n[m]=(n[m]||0)+_*_;for(f=n.length;--f>-1;)n[f]=Math.sqrt(n[f])}for(f=w.length,m=a?4:1;--f>-1;)p=w[f],g=b[p],l(g,o,a,c,r[p]),y&&(g.splice(0,m),g.splice(g.length-m,m));return b},h=function(t,e,i){e=e||"soft";var n,r,s,a,l,u,c,h,d,f,p,g={},m="cubic"===e?3:2,_="soft"===e,v=[];if(_&&i&&(t=[i].concat(t)),null==t||m+1>t.length)throw"invalid Bezier data";for(d in t[0])v.push(d);for(u=v.length;--u>-1;){for(d=v[u],g[d]=l=[],f=0,h=t.length,c=0;h>c;c++)n=null==i?t[c][d]:"string"==typeof(p=t[c][d])&&"="===p.charAt(1)?i[d]+Number(p.charAt(0)+p.substr(2)):Number(p),_&&c>1&&h-1>c&&(l[f++]=(n+l[f-2])/2),l[f++]=n;for(h=f-m+1,f=0,c=0;h>c;c+=m)n=l[c],r=l[c+1],s=l[c+2],a=2===m?0:l[c+3],l[f++]=p=3===m?new o(n,r,s,a):new o(n,(2*r+n)/3,(2*r+s)/3,s);l.length=f}return g},d=function(t,e,i){for(var n,r,o,s,a,l,u,c,h,d,f,p=1/i,g=t.length;--g>-1;)for(d=t[g],o=d.a,s=d.d-o,a=d.c-o,l=d.b-o,n=r=0,c=1;i>=c;c++)u=p*c,h=1-u,n=r-(r=(u*u*s+3*h*(u*a+h*l))*u),f=g*i+c-1,e[f]=(e[f]||0)+n*n},f=function(t,e){e=e>>0||6;var i,n,r,o,s=[],a=[],l=0,u=0,c=e-1,h=[],f=[];for(i in t)d(t[i],s,e);for(r=s.length,n=0;r>n;n++)l+=Math.sqrt(s[n]),o=n%e,f[o]=l,o===c&&(u+=l,o=n/e>>0,h[o]=f,a[o]=u,l=0,f=[]);return{length:u,lengths:a,segments:h}},p=_gsScope._gsDefine.plugin({propName:"bezier",priority:-1,version:"1.3.3",API:2,global:!0,init:function(t,e,i){this._target=t,e instanceof Array&&(e={values:e}),this._func={},this._round={},this._props=[],this._timeRes=null==e.timeResolution?6:parseInt(e.timeResolution,10);var n,r,o,s,a,l=e.values||[],u={},d=l[0],p=e.autoRotate||i.vars.orientToBezier;this._autoRotate=p?p instanceof Array?p:[["x","y","rotation",p===!0?0:Number(p)||0]]:null;for(n in d)this._props.push(n);for(o=this._props.length;--o>-1;)n=this._props[o],this._overwriteProps.push(n),r=this._func[n]="function"==typeof t[n],u[n]=r?t[n.indexOf("set")||"function"!=typeof t["get"+n.substr(3)]?n:"get"+n.substr(3)]():parseFloat(t[n]),a||u[n]!==l[0][n]&&(a=u);if(this._beziers="cubic"!==e.type&&"quadratic"!==e.type&&"soft"!==e.type?c(l,isNaN(e.curviness)?1:e.curviness,!1,"thruBasic"===e.type,e.correlate,a):h(l,e.type,u),this._segCount=this._beziers[n].length,this._timeRes){var g=f(this._beziers,this._timeRes);this._length=g.length,this._lengths=g.lengths,this._segments=g.segments,this._l1=this._li=this._s1=this._si=0,this._l2=this._lengths[0],this._curSeg=this._segments[0],this._s2=this._curSeg[0],this._prec=1/this._curSeg.length}if(p=this._autoRotate)for(this._initialRotations=[],p[0]instanceof Array||(this._autoRotate=p=[p]),o=p.length;--o>-1;){for(s=0;3>s;s++)n=p[o][s],this._func[n]="function"==typeof t[n]?t[n.indexOf("set")||"function"!=typeof t["get"+n.substr(3)]?n:"get"+n.substr(3)]:!1;n=p[o][2],this._initialRotations[o]=this._func[n]?this._func[n].call(this._target):this._target[n]}return this._startRatio=i.vars.runBackwards?1:0,!0},set:function(e){var i,n,r,o,s,a,l,u,c,h,d=this._segCount,f=this._func,p=this._target,g=e!==this._startRatio;if(this._timeRes){if(c=this._lengths,h=this._curSeg,e*=this._length,r=this._li,e>this._l2&&d-1>r){for(u=d-1;u>r&&e>=(this._l2=c[++r]););this._l1=c[r-1],this._li=r,this._curSeg=h=this._segments[r],this._s2=h[this._s1=this._si=0]}else if(this._l1>e&&r>0){for(;r>0&&(this._l1=c[--r])>=e;);0===r&&this._l1>e?this._l1=0:r++,this._l2=c[r],this._li=r,this._curSeg=h=this._segments[r],this._s1=h[(this._si=h.length-1)-1]||0,this._s2=h[this._si]}if(i=r,e-=this._l1,r=this._si,e>this._s2&&h.length-1>r){for(u=h.length-1;u>r&&e>=(this._s2=h[++r]););this._s1=h[r-1],this._si=r}else if(this._s1>e&&r>0){for(;r>0&&(this._s1=h[--r])>=e;);0===r&&this._s1>e?this._s1=0:r++,this._s2=h[r],this._si=r}a=(r+(e-this._s1)/(this._s2-this._s1))*this._prec}else i=0>e?0:e>=1?d-1:d*e>>0,a=(e-i*(1/d))*d;for(n=1-a,r=this._props.length;--r>-1;)o=this._props[r],s=this._beziers[o][i],l=(a*a*s.da+3*n*(a*s.ca+n*s.ba))*a+s.a,this._round[o]&&(l=Math.round(l)),f[o]?p[o](l):p[o]=l;if(this._autoRotate){var m,_,v,y,x,b,w,T=this._autoRotate;for(r=T.length;--r>-1;)o=T[r][2],b=T[r][3]||0,w=T[r][4]===!0?1:t,s=this._beziers[T[r][0]],m=this._beziers[T[r][1]],s&&m&&(s=s[i],m=m[i],_=s.a+(s.b-s.a)*a,y=s.b+(s.c-s.b)*a,_+=(y-_)*a,y+=(s.c+(s.d-s.c)*a-y)*a,v=m.a+(m.b-m.a)*a,x=m.b+(m.c-m.b)*a,v+=(x-v)*a,x+=(m.c+(m.d-m.c)*a-x)*a,l=g?Math.atan2(x-v,y-_)*w+b:this._initialRotations[r],f[o]?p[o](l):p[o]=l)}}}),g=p.prototype;p.bezierThrough=c,p.cubicToQuadratic=a,p._autoCSS=!0,p.quadraticToCubic=function(t,e,i){return new o(t,(2*e+t)/3,(2*e+i)/3,i)},p._cssRegister=function(){var t=_gsScope._gsDefine.globals.CSSPlugin;if(t){var e=t._internals,i=e._parseToProxy,n=e._setPluginRatio,r=e.CSSPropTween;e._registerComplexSpecialProp("bezier",{parser:function(t,e,o,s,a,l){e instanceof Array&&(e={values:e}),l=new p;var u,c,h,d=e.values,f=d.length-1,g=[],m={};if(0>f)return a;for(u=0;f>=u;u++)h=i(t,d[u],s,a,l,f!==u),g[u]=h.end;for(c in e)m[c]=e[c];return m.values=g,a=new r(t,"bezier",0,0,h.pt,2),a.data=h,a.plugin=l,a.setRatio=n,0===m.autoRotate&&(m.autoRotate=!0),!m.autoRotate||m.autoRotate instanceof Array||(u=m.autoRotate===!0?0:Number(m.autoRotate),m.autoRotate=null!=h.end.left?[["left","top","rotation",u,!1]]:null!=h.end.x?[["x","y","rotation",u,!1]]:!1),m.autoRotate&&(s._transform||s._enableTransforms(!1),h.autoRotate=s._target._gsTransform),l._onInitTween(h.proxy,m,s._tween),a}})}},g._roundProps=function(t,e){for(var i=this._overwriteProps,n=i.length;--n>-1;)(t[i[n]]||t.bezier||t.bezierThrough)&&(this._round[i[n]]=e)},g._kill=function(t){var e,i,n=this._props;for(e in this._beziers)if(e in t)for(delete this._beziers[e],delete this._func[e],i=n.length;--i>-1;)n[i]===e&&n.splice(i,1);return this._super._kill.call(this,t)}}(),_gsScope._gsDefine("plugins.CSSPlugin",["plugins.TweenPlugin","TweenLite"],function(t,e){var i,n,r,o,s=function(){t.call(this,"css"),this._overwriteProps.length=0,this.setRatio=s.prototype.setRatio},a={},l=s.prototype=new t("css");l.constructor=s,s.version="1.14.2",s.API=2,s.defaultTransformPerspective=0,s.defaultSkewType="compensated",l="px",s.suffixMap={top:l,right:l,bottom:l,left:l,width:l,height:l,fontSize:l,padding:l,margin:l,perspective:l,lineHeight:""};var u,c,h,d,f,p,g=/(?:\d|\-\d|\.\d|\-\.\d)+/g,m=/(?:\d|\-\d|\.\d|\-\.\d|\+=\d|\-=\d|\+=.\d|\-=\.\d)+/g,_=/(?:\+=|\-=|\-|\b)[\d\-\.]+[a-zA-Z0-9]*(?:%|\b)/gi,v=/(?![+-]?\d*\.?\d+|e[+-]\d+)[^0-9]/g,y=/(?:\d|\-|\+|=|#|\.)*/g,x=/opacity *= *([^)]*)/i,b=/opacity:([^;]*)/i,w=/alpha\(opacity *=.+?\)/i,T=/^(rgb|hsl)/,k=/([A-Z])/g,S=/-([a-z])/gi,C=/(^(?:url\(\"|url\())|(?:(\"\))$|\)$)/gi,P=function(t,e){return e.toUpperCase()},A=/(?:Left|Right|Width)/i,O=/(M11|M12|M21|M22)=[\d\-\.e]+/gi,D=/progid\:DXImageTransform\.Microsoft\.Matrix\(.+?\)/i,M=/,(?=[^\)]*(?:\(|$))/gi,N=Math.PI/180,R=180/Math.PI,E={},L=document,j=L.createElement("div"),F=L.createElement("img"),I=s._internals={_specialProps:a},z=navigator.userAgent,X=function(){var t,e=z.indexOf("Android"),i=L.createElement("div");return h=-1!==z.indexOf("Safari")&&-1===z.indexOf("Chrome")&&(-1===e||Number(z.substr(e+8,1))>3),f=h&&6>Number(z.substr(z.indexOf("Version/")+8,1)),d=-1!==z.indexOf("Firefox"),(/MSIE ([0-9]{1,}[\.0-9]{0,})/.exec(z)||/Trident\/.*rv:([0-9]{1,}[\.0-9]{0,})/.exec(z))&&(p=parseFloat(RegExp.$1)),i.innerHTML="<a style='top:1px;opacity:.55;'>a</a>",t=i.getElementsByTagName("a")[0],t?/^0.55/.test(t.style.opacity):!1}(),B=function(t){return x.test("string"==typeof t?t:(t.currentStyle?t.currentStyle.filter:t.style.filter)||"")?parseFloat(RegExp.$1)/100:1},H=function(t){window.console&&console.log(t)},Y="",q="",W=function(t,e){e=e||j;var i,n,r=e.style;if(void 0!==r[t])return t;for(t=t.charAt(0).toUpperCase()+t.substr(1),i=["O","Moz","ms","Ms","Webkit"],n=5;--n>-1&&void 0===r[i[n]+t];);return n>=0?(q=3===n?"ms":i[n],Y="-"+q.toLowerCase()+"-",q+t):null},Q=L.defaultView?L.defaultView.getComputedStyle:function(){},U=s.getStyle=function(t,e,i,n,r){var o;return X||"opacity"!==e?(!n&&t.style[e]?o=t.style[e]:(i=i||Q(t))?o=i[e]||i.getPropertyValue(e)||i.getPropertyValue(e.replace(k,"-$1").toLowerCase()):t.currentStyle&&(o=t.currentStyle[e]),null==r||o&&"none"!==o&&"auto"!==o&&"auto auto"!==o?o:r):B(t)},$=I.convertToPixels=function(t,i,n,r,o){if("px"===r||!r)return n;if("auto"===r||!n)return 0;var a,l,u,c=A.test(i),h=t,d=j.style,f=0>n;if(f&&(n=-n),"%"===r&&-1!==i.indexOf("border"))a=n/100*(c?t.clientWidth:t.clientHeight);else{if(d.cssText="border:0 solid red;position:"+U(t,"position")+";line-height:0;","%"!==r&&h.appendChild)d[c?"borderLeftWidth":"borderTopWidth"]=n+r;else{if(h=t.parentNode||L.body,l=h._gsCache,u=e.ticker.frame,l&&c&&l.time===u)return l.width*n/100;d[c?"width":"height"]=n+r}h.appendChild(j),a=parseFloat(j[c?"offsetWidth":"offsetHeight"]),h.removeChild(j),c&&"%"===r&&s.cacheWidths!==!1&&(l=h._gsCache=h._gsCache||{},l.time=u,l.width=100*(a/n)),0!==a||o||(a=$(t,i,n,r,!0))}return f?-a:a},V=I.calculateOffset=function(t,e,i){if("absolute"!==U(t,"position",i))return 0;var n="left"===e?"Left":"Top",r=U(t,"margin"+n,i);return t["offset"+n]-($(t,e,parseFloat(r),r.replace(y,""))||0)},G=function(t,e){var i,n,r={};if(e=e||Q(t,null))if(i=e.length)for(;--i>-1;)r[e[i].replace(S,P)]=e.getPropertyValue(e[i]);else for(i in e)r[i]=e[i];else if(e=t.currentStyle||t.style)for(i in e)"string"==typeof i&&void 0===r[i]&&(r[i.replace(S,P)]=e[i]);return X||(r.opacity=B(t)),n=De(t,e,!1),r.rotation=n.rotation,r.skewX=n.skewX,r.scaleX=n.scaleX,r.scaleY=n.scaleY,r.x=n.x,r.y=n.y,Te&&(r.z=n.z,r.rotationX=n.rotationX,r.rotationY=n.rotationY,r.scaleZ=n.scaleZ),r.filters&&delete r.filters,r},Z=function(t,e,i,n,r){var o,s,a,l={},u=t.style;for(s in i)"cssText"!==s&&"length"!==s&&isNaN(s)&&(e[s]!==(o=i[s])||r&&r[s])&&-1===s.indexOf("Origin")&&("number"==typeof o||"string"==typeof o)&&(l[s]="auto"!==o||"left"!==s&&"top"!==s?""!==o&&"auto"!==o&&"none"!==o||"string"!=typeof e[s]||""===e[s].replace(v,"")?o:0:V(t,s),void 0!==u[s]&&(a=new he(u,s,u[s],a)));if(n)for(s in n)"className"!==s&&(l[s]=n[s]);return{difs:l,firstMPT:a}},J={width:["Left","Right"],height:["Top","Bottom"]},K=["marginLeft","marginRight","marginTop","marginBottom"],te=function(t,e,i){var n=parseFloat("width"===e?t.offsetWidth:t.offsetHeight),r=J[e],o=r.length;for(i=i||Q(t,null);--o>-1;)n-=parseFloat(U(t,"padding"+r[o],i,!0))||0,n-=parseFloat(U(t,"border"+r[o]+"Width",i,!0))||0;return n},ee=function(t,e){(null==t||""===t||"auto"===t||"auto auto"===t)&&(t="0 0");var i=t.split(" "),n=-1!==t.indexOf("left")?"0%":-1!==t.indexOf("right")?"100%":i[0],r=-1!==t.indexOf("top")?"0%":-1!==t.indexOf("bottom")?"100%":i[1];return null==r?r="0":"center"===r&&(r="50%"),("center"===n||isNaN(parseFloat(n))&&-1===(n+"").indexOf("="))&&(n="50%"),e&&(e.oxp=-1!==n.indexOf("%"),e.oyp=-1!==r.indexOf("%"),e.oxr="="===n.charAt(1),e.oyr="="===r.charAt(1),e.ox=parseFloat(n.replace(v,"")),e.oy=parseFloat(r.replace(v,""))),n+" "+r+(i.length>2?" "+i[2]:"")},ie=function(t,e){return"string"==typeof t&&"="===t.charAt(1)?parseInt(t.charAt(0)+"1",10)*parseFloat(t.substr(2)):parseFloat(t)-parseFloat(e)},ne=function(t,e){return null==t?e:"string"==typeof t&&"="===t.charAt(1)?parseInt(t.charAt(0)+"1",10)*parseFloat(t.substr(2))+e:parseFloat(t)},re=function(t,e,i,n){var r,o,s,a,l=1e-6;return null==t?a=e:"number"==typeof t?a=t:(r=360,o=t.split("_"),s=Number(o[0].replace(v,""))*(-1===t.indexOf("rad")?1:R)-("="===t.charAt(1)?0:e),o.length&&(n&&(n[i]=e+s),-1!==t.indexOf("short")&&(s%=r,s!==s%(r/2)&&(s=0>s?s+r:s-r)),-1!==t.indexOf("_cw")&&0>s?s=(s+9999999999*r)%r-(0|s/r)*r:-1!==t.indexOf("ccw")&&s>0&&(s=(s-9999999999*r)%r-(0|s/r)*r)),a=e+s),l>a&&a>-l&&(a=0),a},oe={aqua:[0,255,255],lime:[0,255,0],silver:[192,192,192],black:[0,0,0],maroon:[128,0,0],teal:[0,128,128],blue:[0,0,255],navy:[0,0,128],white:[255,255,255],fuchsia:[255,0,255],olive:[128,128,0],yellow:[255,255,0],orange:[255,165,0],gray:[128,128,128],purple:[128,0,128],green:[0,128,0],red:[255,0,0],pink:[255,192,203],cyan:[0,255,255],transparent:[255,255,255,0]},se=function(t,e,i){return t=0>t?t+1:t>1?t-1:t,0|255*(1>6*t?e+6*(i-e)*t:.5>t?i:2>3*t?e+6*(i-e)*(2/3-t):e)+.5},ae=s.parseColor=function(t){var e,i,n,r,o,s;return t&&""!==t?"number"==typeof t?[t>>16,255&t>>8,255&t]:(","===t.charAt(t.length-1)&&(t=t.substr(0,t.length-1)),oe[t]?oe[t]:"#"===t.charAt(0)?(4===t.length&&(e=t.charAt(1),i=t.charAt(2),n=t.charAt(3),t="#"+e+e+i+i+n+n),t=parseInt(t.substr(1),16),[t>>16,255&t>>8,255&t]):"hsl"===t.substr(0,3)?(t=t.match(g),r=Number(t[0])%360/360,o=Number(t[1])/100,s=Number(t[2])/100,i=.5>=s?s*(o+1):s+o-s*o,e=2*s-i,t.length>3&&(t[3]=Number(t[3])),t[0]=se(r+1/3,e,i),t[1]=se(r,e,i),t[2]=se(r-1/3,e,i),t):(t=t.match(g)||oe.transparent,t[0]=Number(t[0]),t[1]=Number(t[1]),t[2]=Number(t[2]),t.length>3&&(t[3]=Number(t[3])),t)):oe.black},le="(?:\\b(?:(?:rgb|rgba|hsl|hsla)\\(.+?\\))|\\B#.+?\\b";for(l in oe)le+="|"+l+"\\b";le=RegExp(le+")","gi");var ue=function(t,e,i,n){if(null==t)return function(t){return t};var r,o=e?(t.match(le)||[""])[0]:"",s=t.split(o).join("").match(_)||[],a=t.substr(0,t.indexOf(s[0])),l=")"===t.charAt(t.length-1)?")":"",u=-1!==t.indexOf(" ")?" ":",",c=s.length,h=c>0?s[0].replace(g,""):"";return c?r=e?function(t){var e,d,f,p;if("number"==typeof t)t+=h;else if(n&&M.test(t)){for(p=t.replace(M,"|").split("|"),f=0;p.length>f;f++)p[f]=r(p[f]);return p.join(",")}if(e=(t.match(le)||[o])[0],d=t.split(e).join("").match(_)||[],f=d.length,c>f--)for(;c>++f;)d[f]=i?d[0|(f-1)/2]:s[f];return a+d.join(u)+u+e+l+(-1!==t.indexOf("inset")?" inset":"")}:function(t){var e,o,d;if("number"==typeof t)t+=h;else if(n&&M.test(t)){for(o=t.replace(M,"|").split("|"),d=0;o.length>d;d++)o[d]=r(o[d]);return o.join(",")}if(e=t.match(_)||[],d=e.length,c>d--)for(;c>++d;)e[d]=i?e[0|(d-1)/2]:s[d];return a+e.join(u)+l}:function(t){return t}},ce=function(t){return t=t.split(","),function(e,i,n,r,o,s,a){var l,u=(i+"").split(" ");for(a={},l=0;4>l;l++)a[t[l]]=u[l]=u[l]||u[(l-1)/2>>0];return r.parse(e,a,o,s)}},he=(I._setPluginRatio=function(t){this.plugin.setRatio(t);for(var e,i,n,r,o=this.data,s=o.proxy,a=o.firstMPT,l=1e-6;a;)e=s[a.v],a.r?e=Math.round(e):l>e&&e>-l&&(e=0),a.t[a.p]=e,a=a._next;if(o.autoRotate&&(o.autoRotate.rotation=s.rotation),1===t)for(a=o.firstMPT;a;){if(i=a.t,i.type){if(1===i.type){for(r=i.xs0+i.s+i.xs1,n=1;i.l>n;n++)r+=i["xn"+n]+i["xs"+(n+1)];i.e=r}}else i.e=i.s+i.xs0;a=a._next}},function(t,e,i,n,r){this.t=t,this.p=e,this.v=i,this.r=r,n&&(n._prev=this,this._next=n)}),de=(I._parseToProxy=function(t,e,i,n,r,o){var s,a,l,u,c,h=n,d={},f={},p=i._transform,g=E;for(i._transform=null,E=e,n=c=i.parse(t,e,n,r),E=g,o&&(i._transform=p,h&&(h._prev=null,h._prev&&(h._prev._next=null)));n&&n!==h;){if(1>=n.type&&(a=n.p,f[a]=n.s+n.c,d[a]=n.s,o||(u=new he(n,"s",a,u,n.r),n.c=0),1===n.type))for(s=n.l;--s>0;)l="xn"+s,a=n.p+"_"+l,f[a]=n.data[l],d[a]=n[l],o||(u=new he(n,l,a,u,n.rxp[l]));n=n._next}return{proxy:d,end:f,firstMPT:u,pt:c}},I.CSSPropTween=function(t,e,n,r,s,a,l,u,c,h,d){this.t=t,this.p=e,this.s=n,this.c=r,this.n=l||e,t instanceof de||o.push(this.n),this.r=u,this.type=a||0,c&&(this.pr=c,i=!0),this.b=void 0===h?n:h,this.e=void 0===d?n+r:d,s&&(this._next=s,s._prev=this)}),fe=s.parseComplex=function(t,e,i,n,r,o,s,a,l,c){i=i||o||"",s=new de(t,e,0,0,s,c?2:1,null,!1,a,i,n),n+="";var h,d,f,p,_,v,y,x,b,w,k,S,C=i.split(", ").join(",").split(" "),P=n.split(", ").join(",").split(" "),A=C.length,O=u!==!1;for((-1!==n.indexOf(",")||-1!==i.indexOf(","))&&(C=C.join(" ").replace(M,", ").split(" "),P=P.join(" ").replace(M,", ").split(" "),A=C.length),A!==P.length&&(C=(o||"").split(" "),A=C.length),s.plugin=l,s.setRatio=c,h=0;A>h;h++)if(p=C[h],_=P[h],x=parseFloat(p),x||0===x)s.appendXtra("",x,ie(_,x),_.replace(m,""),O&&-1!==_.indexOf("px"),!0);else if(r&&("#"===p.charAt(0)||oe[p]||T.test(p)))S=","===_.charAt(_.length-1)?"),":")",p=ae(p),_=ae(_),b=p.length+_.length>6,b&&!X&&0===_[3]?(s["xs"+s.l]+=s.l?" transparent":"transparent",s.e=s.e.split(P[h]).join("transparent")):(X||(b=!1),s.appendXtra(b?"rgba(":"rgb(",p[0],_[0]-p[0],",",!0,!0).appendXtra("",p[1],_[1]-p[1],",",!0).appendXtra("",p[2],_[2]-p[2],b?",":S,!0),b&&(p=4>p.length?1:p[3],s.appendXtra("",p,(4>_.length?1:_[3])-p,S,!1)));else if(v=p.match(g)){if(y=_.match(m),!y||y.length!==v.length)return s;for(f=0,d=0;v.length>d;d++)k=v[d],w=p.indexOf(k,f),s.appendXtra(p.substr(f,w-f),Number(k),ie(y[d],k),"",O&&"px"===p.substr(w+k.length,2),0===d),f=w+k.length;s["xs"+s.l]+=p.substr(f)}else s["xs"+s.l]+=s.l?" "+p:p;if(-1!==n.indexOf("=")&&s.data){for(S=s.xs0+s.data.s,h=1;s.l>h;h++)S+=s["xs"+h]+s.data["xn"+h];s.e=S+s["xs"+h]}return s.l||(s.type=-1,s.xs0=s.e),s.xfirst||s},pe=9;for(l=de.prototype,l.l=l.pr=0;--pe>0;)l["xn"+pe]=0,l["xs"+pe]="";l.xs0="",l._next=l._prev=l.xfirst=l.data=l.plugin=l.setRatio=l.rxp=null,l.appendXtra=function(t,e,i,n,r,o){var s=this,a=s.l;return s["xs"+a]+=o&&a?" "+t:t||"",i||0===a||s.plugin?(s.l++,s.type=s.setRatio?2:1,s["xs"+s.l]=n||"",a>0?(s.data["xn"+a]=e+i,s.rxp["xn"+a]=r,s["xn"+a]=e,s.plugin||(s.xfirst=new de(s,"xn"+a,e,i,s.xfirst||s,0,s.n,r,s.pr),s.xfirst.xs0=0),s):(s.data={s:e+i},s.rxp={},s.s=e,s.c=i,s.r=r,s)):(s["xs"+a]+=e+(n||""),s)};var ge=function(t,e){e=e||{},this.p=e.prefix?W(t)||t:t,a[t]=a[this.p]=this,this.format=e.formatter||ue(e.defaultValue,e.color,e.collapsible,e.multi),e.parser&&(this.parse=e.parser),this.clrs=e.color,this.multi=e.multi,this.keyword=e.keyword,this.dflt=e.defaultValue,this.pr=e.priority||0},me=I._registerComplexSpecialProp=function(t,e,i){"object"!=typeof e&&(e={parser:i});var n,r,o=t.split(","),s=e.defaultValue;for(i=i||[s],n=0;o.length>n;n++)e.prefix=0===n&&e.prefix,e.defaultValue=i[n]||s,r=new ge(o[n],e)},_e=function(t){if(!a[t]){var e=t.charAt(0).toUpperCase()+t.substr(1)+"Plugin";me(t,{parser:function(t,i,n,r,o,s,l){var u=(_gsScope.GreenSockGlobals||_gsScope).com.greensock.plugins[e];return u?(u._cssRegister(),a[n].parse(t,i,n,r,o,s,l)):(H("Error: "+e+" js file not loaded."),o)}})}};l=ge.prototype,l.parseComplex=function(t,e,i,n,r,o){var s,a,l,u,c,h,d=this.keyword;if(this.multi&&(M.test(i)||M.test(e)?(a=e.replace(M,"|").split("|"),l=i.replace(M,"|").split("|")):d&&(a=[e],l=[i])),l){for(u=l.length>a.length?l.length:a.length,s=0;u>s;s++)e=a[s]=a[s]||this.dflt,i=l[s]=l[s]||this.dflt,d&&(c=e.indexOf(d),h=i.indexOf(d),c!==h&&(i=-1===h?l:a,i[s]+=" "+d));e=a.join(", "),i=l.join(", ")}return fe(t,this.p,e,i,this.clrs,this.dflt,n,this.pr,r,o)},l.parse=function(t,e,i,n,o,s){return this.parseComplex(t.style,this.format(U(t,this.p,r,!1,this.dflt)),this.format(e),o,s)},s.registerSpecialProp=function(t,e,i){me(t,{parser:function(t,n,r,o,s,a){var l=new de(t,r,0,0,s,2,r,!1,i);return l.plugin=a,l.setRatio=e(t,n,o._tween,r),l},priority:i})};var ve,ye="scaleX,scaleY,scaleZ,x,y,z,skewX,skewY,rotation,rotationX,rotationY,perspective,xPercent,yPercent".split(","),xe=W("transform"),be=Y+"transform",we=W("transformOrigin"),Te=null!==W("perspective"),ke=I.Transform=function(){this.skewY=0},Se=window.SVGElement,Ce=function(t,e,i){var n,r=L.createElementNS("http://www.w3.org/2000/svg",t),o=/([a-z])([A-Z])/g;for(n in i)r.setAttributeNS(null,n.replace(o,"$1-$2").toLowerCase(),i[n]);return e.appendChild(r),r},Pe=document.documentElement,Ae=function(){var t,e,i,n=p||/Android/i.test(z)&&!window.chrome;return L.createElementNS&&!n&&(t=Ce("svg",Pe),e=Ce("rect",t,{width:100,height:50,x:100}),i=e.getBoundingClientRect().left,e.style[we]="50% 50%",e.style[xe]="scale(0.5,0.5)",n=i===e.getBoundingClientRect().left,Pe.removeChild(t)),n}(),Oe=function(t,e,i){var n=t.getBBox();e=ee(e).split(" "),i.xOrigin=(-1!==e[0].indexOf("%")?parseFloat(e[0])/100*n.width:parseFloat(e[0]))+n.x,i.yOrigin=(-1!==e[1].indexOf("%")?parseFloat(e[1])/100*n.height:parseFloat(e[1]))+n.y},De=I.getTransform=function(t,e,i,n){if(t._gsTransform&&i&&!n)return t._gsTransform;var o,a,l,u,c,h,d,f,p,g,m,_,v,y=i?t._gsTransform||new ke:new ke,x=0>y.scaleX,b=2e-5,w=1e5,T=179.99,k=T*N,S=Te?parseFloat(U(t,we,e,!1,"0 0 0").split(" ")[2])||y.zOrigin||0:0,C=parseFloat(s.defaultTransformPerspective)||0;if(xe?o=U(t,be,e,!0):t.currentStyle&&(o=t.currentStyle.filter.match(O),o=o&&4===o.length?[o[0].substr(4),Number(o[2].substr(4)),Number(o[1].substr(4)),o[3].substr(4),y.x||0,y.y||0].join(","):""),o&&"none"!==o&&"matrix(1, 0, 0, 1, 0, 0)"!==o){for(a=(o||"").match(/(?:\-|\b)[\d\-\.e]+\b/gi)||[],l=a.length;--l>-1;)u=Number(a[l]),a[l]=(c=u-(u|=0))?(0|c*w+(0>c?-.5:.5))/w+u:u;
if(16===a.length){var P=a[8],A=a[9],D=a[10],M=a[12],E=a[13],L=a[14];if(y.zOrigin&&(L=-y.zOrigin,M=P*L-a[12],E=A*L-a[13],L=D*L+y.zOrigin-a[14]),!i||n||null==y.rotationX){var j,F,I,z,X,B,H,Y=a[0],q=a[1],W=a[2],Q=a[3],$=a[4],V=a[5],G=a[6],Z=a[7],J=a[11],K=Math.atan2(G,D),te=-k>K||K>k;y.rotationX=K*R,K&&(z=Math.cos(-K),X=Math.sin(-K),j=$*z+P*X,F=V*z+A*X,I=G*z+D*X,P=$*-X+P*z,A=V*-X+A*z,D=G*-X+D*z,J=Z*-X+J*z,$=j,V=F,G=I),K=Math.atan2(P,Y),y.rotationY=K*R,K&&(B=-k>K||K>k,z=Math.cos(-K),X=Math.sin(-K),j=Y*z-P*X,F=q*z-A*X,I=W*z-D*X,A=q*X+A*z,D=W*X+D*z,J=Q*X+J*z,Y=j,q=F,W=I),K=Math.atan2(q,V),y.rotation=K*R,K&&(H=-k>K||K>k,z=Math.cos(-K),X=Math.sin(-K),Y=Y*z+$*X,F=q*z+V*X,V=q*-X+V*z,G=W*-X+G*z,q=F),H&&te?y.rotation=y.rotationX=0:H&&B?y.rotation=y.rotationY=0:B&&te&&(y.rotationY=y.rotationX=0),y.scaleX=(0|Math.sqrt(Y*Y+q*q)*w+.5)/w,y.scaleY=(0|Math.sqrt(V*V+A*A)*w+.5)/w,y.scaleZ=(0|Math.sqrt(G*G+D*D)*w+.5)/w,y.skewX=0,y.perspective=J?1/(0>J?-J:J):0,y.x=M,y.y=E,y.z=L}}else if(!(Te&&!n&&a.length&&y.x===a[4]&&y.y===a[5]&&(y.rotationX||y.rotationY)||void 0!==y.x&&"none"===U(t,"display",e))){var ee=a.length>=6,ie=ee?a[0]:1,ne=a[1]||0,re=a[2]||0,oe=ee?a[3]:1;y.x=a[4]||0,y.y=a[5]||0,h=Math.sqrt(ie*ie+ne*ne),d=Math.sqrt(oe*oe+re*re),f=ie||ne?Math.atan2(ne,ie)*R:y.rotation||0,p=re||oe?Math.atan2(re,oe)*R+f:y.skewX||0,g=h-Math.abs(y.scaleX||0),m=d-Math.abs(y.scaleY||0),Math.abs(p)>90&&270>Math.abs(p)&&(x?(h*=-1,p+=0>=f?180:-180,f+=0>=f?180:-180):(d*=-1,p+=0>=p?180:-180)),_=(f-y.rotation)%180,v=(p-y.skewX)%180,(void 0===y.skewX||g>b||-b>g||m>b||-b>m||_>-T&&T>_&&!1|_*w||v>-T&&T>v&&!1|v*w)&&(y.scaleX=h,y.scaleY=d,y.rotation=f,y.skewX=p),Te&&(y.rotationX=y.rotationY=y.z=0,y.perspective=C,y.scaleZ=1)}y.zOrigin=S;for(l in y)b>y[l]&&y[l]>-b&&(y[l]=0)}else y={x:0,y:0,z:0,scaleX:1,scaleY:1,scaleZ:1,skewX:0,skewY:0,perspective:C,rotation:0,rotationX:0,rotationY:0,zOrigin:0};return i&&(t._gsTransform=y),y.svg=Se&&t instanceof Se&&t.parentNode instanceof Se,y.svg&&(Oe(t,U(t,we,r,!1,"50% 50%")+"",y),ve=s.useSVGTransformAttr||Ae),y.xPercent=y.yPercent=0,y},Me=function(t){var e,i,n=this.data,r=-n.rotation*N,o=r+n.skewX*N,s=1e5,a=(0|Math.cos(r)*n.scaleX*s)/s,l=(0|Math.sin(r)*n.scaleX*s)/s,u=(0|Math.sin(o)*-n.scaleY*s)/s,c=(0|Math.cos(o)*n.scaleY*s)/s,h=this.t.style,d=this.t.currentStyle;if(d){i=l,l=-u,u=-i,e=d.filter,h.filter="";var f,g,m=this.t.offsetWidth,_=this.t.offsetHeight,v="absolute"!==d.position,b="progid:DXImageTransform.Microsoft.Matrix(M11="+a+", M12="+l+", M21="+u+", M22="+c,w=n.x+m*n.xPercent/100,T=n.y+_*n.yPercent/100;if(null!=n.ox&&(f=(n.oxp?.01*m*n.ox:n.ox)-m/2,g=(n.oyp?.01*_*n.oy:n.oy)-_/2,w+=f-(f*a+g*l),T+=g-(f*u+g*c)),v?(f=m/2,g=_/2,b+=", Dx="+(f-(f*a+g*l)+w)+", Dy="+(g-(f*u+g*c)+T)+")"):b+=", sizingMethod='auto expand')",h.filter=-1!==e.indexOf("DXImageTransform.Microsoft.Matrix(")?e.replace(D,b):b+" "+e,(0===t||1===t)&&1===a&&0===l&&0===u&&1===c&&(v&&-1===b.indexOf("Dx=0, Dy=0")||x.test(e)&&100!==parseFloat(RegExp.$1)||-1===e.indexOf("gradient("&&e.indexOf("Alpha"))&&h.removeAttribute("filter")),!v){var k,S,C,P=8>p?1:-1;for(f=n.ieOffsetX||0,g=n.ieOffsetY||0,n.ieOffsetX=Math.round((m-((0>a?-a:a)*m+(0>l?-l:l)*_))/2+w),n.ieOffsetY=Math.round((_-((0>c?-c:c)*_+(0>u?-u:u)*m))/2+T),pe=0;4>pe;pe++)S=K[pe],k=d[S],i=-1!==k.indexOf("px")?parseFloat(k):$(this.t,S,parseFloat(k),k.replace(y,""))||0,C=i!==n[S]?2>pe?-n.ieOffsetX:-n.ieOffsetY:2>pe?f-n.ieOffsetX:g-n.ieOffsetY,h[S]=(n[S]=Math.round(i-C*(0===pe||2===pe?1:P)))+"px"}}},Ne=I.set3DTransformRatio=function(t){var e,i,n,r,o,s,a,l,u,c,h,f,p,g,m,_,v,y,x,b,w,T,k,S=this.data,C=this.t.style,P=S.rotation*N,A=S.scaleX,O=S.scaleY,D=S.scaleZ,M=S.x,R=S.y,E=S.z,L=S.perspective;if(!(1!==t&&0!==t||"auto"!==S.force3D||S.rotationY||S.rotationX||1!==D||L||E))return void Re.call(this,t);if(d){var j=1e-4;j>A&&A>-j&&(A=D=2e-5),j>O&&O>-j&&(O=D=2e-5),!L||S.z||S.rotationX||S.rotationY||(L=0)}if(P||S.skewX)y=Math.cos(P),x=Math.sin(P),e=y,o=x,S.skewX&&(P-=S.skewX*N,y=Math.cos(P),x=Math.sin(P),"simple"===S.skewType&&(b=Math.tan(S.skewX*N),b=Math.sqrt(1+b*b),y*=b,x*=b)),i=-x,s=y;else{if(!(S.rotationY||S.rotationX||1!==D||L||S.svg))return void(C[xe]=(S.xPercent||S.yPercent?"translate("+S.xPercent+"%,"+S.yPercent+"%) translate3d(":"translate3d(")+M+"px,"+R+"px,"+E+"px)"+(1!==A||1!==O?" scale("+A+","+O+")":""));e=s=1,i=o=0}h=1,n=r=a=l=u=c=f=p=g=0,m=L?-1/L:0,_=S.zOrigin,v=1e5,P=S.rotationY*N,P&&(y=Math.cos(P),x=Math.sin(P),u=h*-x,p=m*-x,n=e*x,a=o*x,h*=y,m*=y,e*=y,o*=y),P=S.rotationX*N,P&&(y=Math.cos(P),x=Math.sin(P),b=i*y+n*x,w=s*y+a*x,T=c*y+h*x,k=g*y+m*x,n=i*-x+n*y,a=s*-x+a*y,h=c*-x+h*y,m=g*-x+m*y,i=b,s=w,c=T,g=k),1!==D&&(n*=D,a*=D,h*=D,m*=D),1!==O&&(i*=O,s*=O,c*=O,g*=O),1!==A&&(e*=A,o*=A,u*=A,p*=A),_&&(f-=_,r=n*f,l=a*f,f=h*f+_),S.svg&&(r+=S.xOrigin-(S.xOrigin*e+S.yOrigin*i),l+=S.yOrigin-(S.xOrigin*o+S.yOrigin*s)),r=(b=(r+=M)-(r|=0))?(0|b*v+(0>b?-.5:.5))/v+r:r,l=(b=(l+=R)-(l|=0))?(0|b*v+(0>b?-.5:.5))/v+l:l,f=(b=(f+=E)-(f|=0))?(0|b*v+(0>b?-.5:.5))/v+f:f,C[xe]=(S.xPercent||S.yPercent?"translate("+S.xPercent+"%,"+S.yPercent+"%) matrix3d(":"matrix3d(")+[(0|e*v)/v,(0|o*v)/v,(0|u*v)/v,(0|p*v)/v,(0|i*v)/v,(0|s*v)/v,(0|c*v)/v,(0|g*v)/v,(0|n*v)/v,(0|a*v)/v,(0|h*v)/v,(0|m*v)/v,r,l,f,L?1+-f/L:1].join(",")+")"},Re=I.set2DTransformRatio=function(t){var e,i,n,r,o,s,a,l,u,c,h,d=this.data,f=this.t,p=f.style,g=d.x,m=d.y;return!(d.rotationX||d.rotationY||d.z||d.force3D===!0||"auto"===d.force3D&&1!==t&&0!==t)||d.svg&&ve||!Te?(r=d.scaleX,o=d.scaleY,void(d.rotation||d.skewX||d.svg?(e=d.rotation*N,i=e-d.skewX*N,n=1e5,s=Math.cos(e)*r,a=Math.sin(e)*r,l=Math.sin(i)*-o,u=Math.cos(i)*o,d.svg&&(g+=d.xOrigin-(d.xOrigin*s+d.yOrigin*l),m+=d.yOrigin-(d.xOrigin*a+d.yOrigin*u),h=1e-6,h>g&&g>-h&&(g=0),h>m&&m>-h&&(m=0)),c=(0|s*n)/n+","+(0|a*n)/n+","+(0|l*n)/n+","+(0|u*n)/n+","+g+","+m+")",d.svg&&ve?f.setAttribute("transform","matrix("+c):p[xe]=(d.xPercent||d.yPercent?"translate("+d.xPercent+"%,"+d.yPercent+"%) matrix(":"matrix(")+c):p[xe]=(d.xPercent||d.yPercent?"translate("+d.xPercent+"%,"+d.yPercent+"%) matrix(":"matrix(")+r+",0,0,"+o+","+g+","+m+")")):(this.setRatio=Ne,void Ne.call(this,t))};me("transform,scale,scaleX,scaleY,scaleZ,x,y,z,rotation,rotationX,rotationY,rotationZ,skewX,skewY,shortRotation,shortRotationX,shortRotationY,shortRotationZ,transformOrigin,transformPerspective,directionalRotation,parseTransform,force3D,skewType,xPercent,yPercent",{parser:function(t,e,i,n,o,a,l){if(n._transform)return o;var u,c,h,d,f,p,g,m=n._transform=De(t,r,!0,l.parseTransform),_=t.style,v=1e-6,y=ye.length,x=l,b={};if("string"==typeof x.transform&&xe)h=j.style,h[xe]=x.transform,h.display="block",h.position="absolute",L.body.appendChild(j),u=De(j,null,!1),L.body.removeChild(j);else if("object"==typeof x){if(u={scaleX:ne(null!=x.scaleX?x.scaleX:x.scale,m.scaleX),scaleY:ne(null!=x.scaleY?x.scaleY:x.scale,m.scaleY),scaleZ:ne(x.scaleZ,m.scaleZ),x:ne(x.x,m.x),y:ne(x.y,m.y),z:ne(x.z,m.z),xPercent:ne(x.xPercent,m.xPercent),yPercent:ne(x.yPercent,m.yPercent),perspective:ne(x.transformPerspective,m.perspective)},g=x.directionalRotation,null!=g)if("object"==typeof g)for(h in g)x[h]=g[h];else x.rotation=g;"string"==typeof x.x&&-1!==x.x.indexOf("%")&&(u.x=0,u.xPercent=ne(x.x,m.xPercent)),"string"==typeof x.y&&-1!==x.y.indexOf("%")&&(u.y=0,u.yPercent=ne(x.y,m.yPercent)),u.rotation=re("rotation"in x?x.rotation:"shortRotation"in x?x.shortRotation+"_short":"rotationZ"in x?x.rotationZ:m.rotation,m.rotation,"rotation",b),Te&&(u.rotationX=re("rotationX"in x?x.rotationX:"shortRotationX"in x?x.shortRotationX+"_short":m.rotationX||0,m.rotationX,"rotationX",b),u.rotationY=re("rotationY"in x?x.rotationY:"shortRotationY"in x?x.shortRotationY+"_short":m.rotationY||0,m.rotationY,"rotationY",b)),u.skewX=null==x.skewX?m.skewX:re(x.skewX,m.skewX),u.skewY=null==x.skewY?m.skewY:re(x.skewY,m.skewY),(c=u.skewY-m.skewY)&&(u.skewX+=c,u.rotation+=c)}for(Te&&null!=x.force3D&&(m.force3D=x.force3D,p=!0),m.skewType=x.skewType||m.skewType||s.defaultSkewType,f=m.force3D||m.z||m.rotationX||m.rotationY||u.z||u.rotationX||u.rotationY||u.perspective,f||null==x.scale||(u.scaleZ=1);--y>-1;)i=ye[y],d=u[i]-m[i],(d>v||-v>d||null!=x[i]||null!=E[i])&&(p=!0,o=new de(m,i,m[i],d,o),i in b&&(o.e=b[i]),o.xs0=0,o.plugin=a,n._overwriteProps.push(o.n));return d=x.transformOrigin,d&&m.svg&&(Oe(t,d,u),o=new de(m,"xOrigin",m.xOrigin,u.xOrigin-m.xOrigin,o,-1,"transformOrigin"),o.b=m.xOrigin,o.e=o.xs0=u.xOrigin,o=new de(m,"yOrigin",m.yOrigin,u.yOrigin-m.yOrigin,o,-1,"transformOrigin"),o.b=m.yOrigin,o.e=o.xs0=u.yOrigin,d="0px 0px"),(d||Te&&f&&m.zOrigin)&&(xe?(p=!0,i=we,d=(d||U(t,i,r,!1,"50% 50%"))+"",o=new de(_,i,0,0,o,-1,"transformOrigin"),o.b=_[i],o.plugin=a,Te?(h=m.zOrigin,d=d.split(" "),m.zOrigin=(d.length>2&&(0===h||"0px"!==d[2])?parseFloat(d[2]):h)||0,o.xs0=o.e=d[0]+" "+(d[1]||"50%")+" 0px",o=new de(m,"zOrigin",0,0,o,-1,o.n),o.b=h,o.xs0=o.e=m.zOrigin):o.xs0=o.e=d):ee(d+"",m)),p&&(n._transformType=m.svg&&ve||!f&&3!==this._transformType?2:3),o},prefix:!0}),me("boxShadow",{defaultValue:"0px 0px 0px 0px #999",prefix:!0,color:!0,multi:!0,keyword:"inset"}),me("borderRadius",{defaultValue:"0px",parser:function(t,e,i,o,s){e=this.format(e);var a,l,u,c,h,d,f,p,g,m,_,v,y,x,b,w,T=["borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius"],k=t.style;for(g=parseFloat(t.offsetWidth),m=parseFloat(t.offsetHeight),a=e.split(" "),l=0;T.length>l;l++)this.p.indexOf("border")&&(T[l]=W(T[l])),h=c=U(t,T[l],r,!1,"0px"),-1!==h.indexOf(" ")&&(c=h.split(" "),h=c[0],c=c[1]),d=u=a[l],f=parseFloat(h),v=h.substr((f+"").length),y="="===d.charAt(1),y?(p=parseInt(d.charAt(0)+"1",10),d=d.substr(2),p*=parseFloat(d),_=d.substr((p+"").length-(0>p?1:0))||""):(p=parseFloat(d),_=d.substr((p+"").length)),""===_&&(_=n[i]||v),_!==v&&(x=$(t,"borderLeft",f,v),b=$(t,"borderTop",f,v),"%"===_?(h=100*(x/g)+"%",c=100*(b/m)+"%"):"em"===_?(w=$(t,"borderLeft",1,"em"),h=x/w+"em",c=b/w+"em"):(h=x+"px",c=b+"px"),y&&(d=parseFloat(h)+p+_,u=parseFloat(c)+p+_)),s=fe(k,T[l],h+" "+c,d+" "+u,!1,"0px",s);return s},prefix:!0,formatter:ue("0px 0px 0px 0px",!1,!0)}),me("backgroundPosition",{defaultValue:"0 0",parser:function(t,e,i,n,o,s){var a,l,u,c,h,d,f="background-position",g=r||Q(t,null),m=this.format((g?p?g.getPropertyValue(f+"-x")+" "+g.getPropertyValue(f+"-y"):g.getPropertyValue(f):t.currentStyle.backgroundPositionX+" "+t.currentStyle.backgroundPositionY)||"0 0"),_=this.format(e);if(-1!==m.indexOf("%")!=(-1!==_.indexOf("%"))&&(d=U(t,"backgroundImage").replace(C,""),d&&"none"!==d)){for(a=m.split(" "),l=_.split(" "),F.setAttribute("src",d),u=2;--u>-1;)m=a[u],c=-1!==m.indexOf("%"),c!==(-1!==l[u].indexOf("%"))&&(h=0===u?t.offsetWidth-F.width:t.offsetHeight-F.height,a[u]=c?parseFloat(m)/100*h+"px":100*(parseFloat(m)/h)+"%");m=a.join(" ")}return this.parseComplex(t.style,m,_,o,s)},formatter:ee}),me("backgroundSize",{defaultValue:"0 0",formatter:ee}),me("perspective",{defaultValue:"0px",prefix:!0}),me("perspectiveOrigin",{defaultValue:"50% 50%",prefix:!0}),me("transformStyle",{prefix:!0}),me("backfaceVisibility",{prefix:!0}),me("userSelect",{prefix:!0}),me("margin",{parser:ce("marginTop,marginRight,marginBottom,marginLeft")}),me("padding",{parser:ce("paddingTop,paddingRight,paddingBottom,paddingLeft")}),me("clip",{defaultValue:"rect(0px,0px,0px,0px)",parser:function(t,e,i,n,o,s){var a,l,u;return 9>p?(l=t.currentStyle,u=8>p?" ":",",a="rect("+l.clipTop+u+l.clipRight+u+l.clipBottom+u+l.clipLeft+")",e=this.format(e).split(",").join(u)):(a=this.format(U(t,this.p,r,!1,this.dflt)),e=this.format(e)),this.parseComplex(t.style,a,e,o,s)}}),me("textShadow",{defaultValue:"0px 0px 0px #999",color:!0,multi:!0}),me("autoRound,strictUnits",{parser:function(t,e,i,n,r){return r}}),me("border",{defaultValue:"0px solid #000",parser:function(t,e,i,n,o,s){return this.parseComplex(t.style,this.format(U(t,"borderTopWidth",r,!1,"0px")+" "+U(t,"borderTopStyle",r,!1,"solid")+" "+U(t,"borderTopColor",r,!1,"#000")),this.format(e),o,s)},color:!0,formatter:function(t){var e=t.split(" ");return e[0]+" "+(e[1]||"solid")+" "+(t.match(le)||["#000"])[0]}}),me("borderWidth",{parser:ce("borderTopWidth,borderRightWidth,borderBottomWidth,borderLeftWidth")}),me("float,cssFloat,styleFloat",{parser:function(t,e,i,n,r){var o=t.style,s="cssFloat"in o?"cssFloat":"styleFloat";return new de(o,s,0,0,r,-1,i,!1,0,o[s],e)}});var Ee=function(t){var e,i=this.t,n=i.filter||U(this.data,"filter")||"",r=0|this.s+this.c*t;100===r&&(-1===n.indexOf("atrix(")&&-1===n.indexOf("radient(")&&-1===n.indexOf("oader(")?(i.removeAttribute("filter"),e=!U(this.data,"filter")):(i.filter=n.replace(w,""),e=!0)),e||(this.xn1&&(i.filter=n=n||"alpha(opacity="+r+")"),-1===n.indexOf("pacity")?0===r&&this.xn1||(i.filter=n+" alpha(opacity="+r+")"):i.filter=n.replace(x,"opacity="+r))};me("opacity,alpha,autoAlpha",{defaultValue:"1",parser:function(t,e,i,n,o,s){var a=parseFloat(U(t,"opacity",r,!1,"1")),l=t.style,u="autoAlpha"===i;return"string"==typeof e&&"="===e.charAt(1)&&(e=("-"===e.charAt(0)?-1:1)*parseFloat(e.substr(2))+a),u&&1===a&&"hidden"===U(t,"visibility",r)&&0!==e&&(a=0),X?o=new de(l,"opacity",a,e-a,o):(o=new de(l,"opacity",100*a,100*(e-a),o),o.xn1=u?1:0,l.zoom=1,o.type=2,o.b="alpha(opacity="+o.s+")",o.e="alpha(opacity="+(o.s+o.c)+")",o.data=t,o.plugin=s,o.setRatio=Ee),u&&(o=new de(l,"visibility",0,0,o,-1,null,!1,0,0!==a?"inherit":"hidden",0===e?"hidden":"inherit"),o.xs0="inherit",n._overwriteProps.push(o.n),n._overwriteProps.push(i)),o}});var Le=function(t,e){e&&(t.removeProperty?("ms"===e.substr(0,2)&&(e="M"+e.substr(1)),t.removeProperty(e.replace(k,"-$1").toLowerCase())):t.removeAttribute(e))},je=function(t){if(this.t._gsClassPT=this,1===t||0===t){this.t.setAttribute("class",0===t?this.b:this.e);for(var e=this.data,i=this.t.style;e;)e.v?i[e.p]=e.v:Le(i,e.p),e=e._next;1===t&&this.t._gsClassPT===this&&(this.t._gsClassPT=null)}else this.t.getAttribute("class")!==this.e&&this.t.setAttribute("class",this.e)};me("className",{parser:function(t,e,n,o,s,a,l){var u,c,h,d,f,p=t.getAttribute("class")||"",g=t.style.cssText;if(s=o._classNamePT=new de(t,n,0,0,s,2),s.setRatio=je,s.pr=-11,i=!0,s.b=p,c=G(t,r),h=t._gsClassPT){for(d={},f=h.data;f;)d[f.p]=1,f=f._next;h.setRatio(1)}return t._gsClassPT=s,s.e="="!==e.charAt(1)?e:p.replace(RegExp("\\s*\\b"+e.substr(2)+"\\b"),"")+("+"===e.charAt(0)?" "+e.substr(2):""),o._tween._duration&&(t.setAttribute("class",s.e),u=Z(t,c,G(t),l,d),t.setAttribute("class",p),s.data=u.firstMPT,t.style.cssText=g,s=s.xfirst=o.parse(t,u.difs,s,a)),s}});var Fe=function(t){if((1===t||0===t)&&this.data._totalTime===this.data._totalDuration&&"isFromStart"!==this.data.data){var e,i,n,r,o=this.t.style,s=a.transform.parse;if("all"===this.e)o.cssText="",r=!0;else for(e=this.e.split(" ").join("").split(","),n=e.length;--n>-1;)i=e[n],a[i]&&(a[i].parse===s?r=!0:i="transformOrigin"===i?we:a[i].p),Le(o,i);r&&(Le(o,xe),this.t._gsTransform&&delete this.t._gsTransform)}};for(me("clearProps",{parser:function(t,e,n,r,o){return o=new de(t,n,0,0,o,2),o.setRatio=Fe,o.e=e,o.pr=-10,o.data=r._tween,i=!0,o}}),l="bezier,throwProps,physicsProps,physics2D".split(","),pe=l.length;pe--;)_e(l[pe]);l=s.prototype,l._firstPT=null,l._onInitTween=function(t,e,a){if(!t.nodeType)return!1;this._target=t,this._tween=a,this._vars=e,u=e.autoRound,i=!1,n=e.suffixMap||s.suffixMap,r=Q(t,""),o=this._overwriteProps;var l,d,p,g,m,_,v,y,x,w=t.style;if(c&&""===w.zIndex&&(l=U(t,"zIndex",r),("auto"===l||""===l)&&this._addLazySet(w,"zIndex",0)),"string"==typeof e&&(g=w.cssText,l=G(t,r),w.cssText=g+";"+e,l=Z(t,l,G(t)).difs,!X&&b.test(e)&&(l.opacity=parseFloat(RegExp.$1)),e=l,w.cssText=g),this._firstPT=d=this.parse(t,e,null),this._transformType){for(x=3===this._transformType,xe?h&&(c=!0,""===w.zIndex&&(v=U(t,"zIndex",r),("auto"===v||""===v)&&this._addLazySet(w,"zIndex",0)),f&&this._addLazySet(w,"WebkitBackfaceVisibility",this._vars.WebkitBackfaceVisibility||(x?"visible":"hidden"))):w.zoom=1,p=d;p&&p._next;)p=p._next;y=new de(t,"transform",0,0,null,2),this._linkCSSP(y,null,p),y.setRatio=x&&Te?Ne:xe?Re:Me,y.data=this._transform||De(t,r,!0),o.pop()}if(i){for(;d;){for(_=d._next,p=g;p&&p.pr>d.pr;)p=p._next;(d._prev=p?p._prev:m)?d._prev._next=d:g=d,(d._next=p)?p._prev=d:m=d,d=_}this._firstPT=g}return!0},l.parse=function(t,e,i,o){var s,l,c,h,d,f,p,g,m,_,v=t.style;for(s in e)f=e[s],l=a[s],l?i=l.parse(t,f,s,this,i,o,e):(d=U(t,s,r)+"",m="string"==typeof f,"color"===s||"fill"===s||"stroke"===s||-1!==s.indexOf("Color")||m&&T.test(f)?(m||(f=ae(f),f=(f.length>3?"rgba(":"rgb(")+f.join(",")+")"),i=fe(v,s,d,f,!0,"transparent",i,0,o)):!m||-1===f.indexOf(" ")&&-1===f.indexOf(",")?(c=parseFloat(d),p=c||0===c?d.substr((c+"").length):"",(""===d||"auto"===d)&&("width"===s||"height"===s?(c=te(t,s,r),p="px"):"left"===s||"top"===s?(c=V(t,s,r),p="px"):(c="opacity"!==s?0:1,p="")),_=m&&"="===f.charAt(1),_?(h=parseInt(f.charAt(0)+"1",10),f=f.substr(2),h*=parseFloat(f),g=f.replace(y,"")):(h=parseFloat(f),g=m?f.substr((h+"").length)||"":""),""===g&&(g=s in n?n[s]:p),f=h||0===h?(_?h+c:h)+g:e[s],p!==g&&""!==g&&(h||0===h)&&c&&(c=$(t,s,c,p),"%"===g?(c/=$(t,s,100,"%")/100,e.strictUnits!==!0&&(d=c+"%")):"em"===g?c/=$(t,s,1,"em"):"px"!==g&&(h=$(t,s,h,g),g="px"),_&&(h||0===h)&&(f=h+c+g)),_&&(h+=c),!c&&0!==c||!h&&0!==h?void 0!==v[s]&&(f||"NaN"!=f+""&&null!=f)?(i=new de(v,s,h||c||0,0,i,-1,s,!1,0,d,f),i.xs0="none"!==f||"display"!==s&&-1===s.indexOf("Style")?f:d):H("invalid "+s+" tween value: "+e[s]):(i=new de(v,s,c,h-c,i,0,s,u!==!1&&("px"===g||"zIndex"===s),0,d,f),i.xs0=g)):i=fe(v,s,d,f,!0,null,i,0,o)),o&&i&&!i.plugin&&(i.plugin=o);return i},l.setRatio=function(t){var e,i,n,r=this._firstPT,o=1e-6;if(1!==t||this._tween._time!==this._tween._duration&&0!==this._tween._time)if(t||this._tween._time!==this._tween._duration&&0!==this._tween._time||this._tween._rawPrevTime===-1e-6)for(;r;){if(e=r.c*t+r.s,r.r?e=Math.round(e):o>e&&e>-o&&(e=0),r.type)if(1===r.type)if(n=r.l,2===n)r.t[r.p]=r.xs0+e+r.xs1+r.xn1+r.xs2;else if(3===n)r.t[r.p]=r.xs0+e+r.xs1+r.xn1+r.xs2+r.xn2+r.xs3;else if(4===n)r.t[r.p]=r.xs0+e+r.xs1+r.xn1+r.xs2+r.xn2+r.xs3+r.xn3+r.xs4;else if(5===n)r.t[r.p]=r.xs0+e+r.xs1+r.xn1+r.xs2+r.xn2+r.xs3+r.xn3+r.xs4+r.xn4+r.xs5;else{for(i=r.xs0+e+r.xs1,n=1;r.l>n;n++)i+=r["xn"+n]+r["xs"+(n+1)];r.t[r.p]=i}else-1===r.type?r.t[r.p]=r.xs0:r.setRatio&&r.setRatio(t);else r.t[r.p]=e+r.xs0;r=r._next}else for(;r;)2!==r.type?r.t[r.p]=r.b:r.setRatio(t),r=r._next;else for(;r;)2!==r.type?r.t[r.p]=r.e:r.setRatio(t),r=r._next},l._enableTransforms=function(t){this._transform=this._transform||De(this._target,r,!0),this._transformType=this._transform.svg&&ve||!t&&3!==this._transformType?2:3};var Ie=function(){this.t[this.p]=this.e,this.data._linkCSSP(this,this._next,null,!0)};l._addLazySet=function(t,e,i){var n=this._firstPT=new de(t,e,0,0,this._firstPT,2);n.e=i,n.setRatio=Ie,n.data=this},l._linkCSSP=function(t,e,i,n){return t&&(e&&(e._prev=t),t._next&&(t._next._prev=t._prev),t._prev?t._prev._next=t._next:this._firstPT===t&&(this._firstPT=t._next,n=!0),i?i._next=t:n||null!==this._firstPT||(this._firstPT=t),t._next=e,t._prev=i),t},l._kill=function(e){var i,n,r,o=e;if(e.autoAlpha||e.alpha){o={};for(n in e)o[n]=e[n];o.opacity=1,o.autoAlpha&&(o.visibility=1)}return e.className&&(i=this._classNamePT)&&(r=i.xfirst,r&&r._prev?this._linkCSSP(r._prev,i._next,r._prev._prev):r===this._firstPT&&(this._firstPT=i._next),i._next&&this._linkCSSP(i._next,i._next._next,r._prev),this._classNamePT=null),t.prototype._kill.call(this,o)};var ze=function(t,e,i){var n,r,o,s;if(t.slice)for(r=t.length;--r>-1;)ze(t[r],e,i);else for(n=t.childNodes,r=n.length;--r>-1;)o=n[r],s=o.type,o.style&&(e.push(G(o)),i&&i.push(o)),1!==s&&9!==s&&11!==s||!o.childNodes.length||ze(o,e,i)};return s.cascadeTo=function(t,i,n){var r,o,s,a=e.to(t,i,n),l=[a],u=[],c=[],h=[],d=e._internals.reservedProps;for(t=a._targets||a.target,ze(t,u,h),a.render(i,!0),ze(t,c),a.render(0,!0),a._enabled(!0),r=h.length;--r>-1;)if(o=Z(h[r],u[r],c[r]),o.firstMPT){o=o.difs;for(s in n)d[s]&&(o[s]=n[s]);l.push(e.to(h[r],i,o))}return l},t.activate([s]),s},!0),function(){var t=_gsScope._gsDefine.plugin({propName:"roundProps",priority:-1,API:2,init:function(t,e,i){return this._tween=i,!0}}),e=t.prototype;e._onInitAllProps=function(){for(var t,e,i,n=this._tween,r=n.vars.roundProps instanceof Array?n.vars.roundProps:n.vars.roundProps.split(","),o=r.length,s={},a=n._propLookup.roundProps;--o>-1;)s[r[o]]=1;for(o=r.length;--o>-1;)for(t=r[o],e=n._firstPT;e;)i=e._next,e.pg?e.t._roundProps(s,!0):e.n===t&&(this._add(e.t,t,e.s,e.c),i&&(i._prev=e._prev),e._prev?e._prev._next=i:n._firstPT===e&&(n._firstPT=i),e._next=e._prev=null,n._propLookup[t]=a),e=i;return!1},e._add=function(t,e,i,n){this._addTween(t,e,i,i+n,e,!0),this._overwriteProps.push(e)}}(),_gsScope._gsDefine.plugin({propName:"attr",API:2,version:"0.3.3",init:function(t,e){var i,n,r;if("function"!=typeof t.setAttribute)return!1;this._target=t,this._proxy={},this._start={},this._end={};for(i in e)this._start[i]=this._proxy[i]=n=t.getAttribute(i),r=this._addTween(this._proxy,i,parseFloat(n),e[i],i),this._end[i]=r?r.s+r.c:e[i],this._overwriteProps.push(i);return!0},set:function(t){this._super.setRatio.call(this,t);for(var e,i=this._overwriteProps,n=i.length,r=1===t?this._end:t?this._proxy:this._start;--n>-1;)e=i[n],this._target.setAttribute(e,r[e]+"")}}),_gsScope._gsDefine.plugin({propName:"directionalRotation",version:"0.2.1",API:2,init:function(t,e){"object"!=typeof e&&(e={rotation:e}),this.finals={};var i,n,r,o,s,a,l=e.useRadians===!0?2*Math.PI:360,u=1e-6;for(i in e)"useRadians"!==i&&(a=(e[i]+"").split("_"),n=a[0],r=parseFloat("function"!=typeof t[i]?t[i]:t[i.indexOf("set")||"function"!=typeof t["get"+i.substr(3)]?i:"get"+i.substr(3)]()),o=this.finals[i]="string"==typeof n&&"="===n.charAt(1)?r+parseInt(n.charAt(0)+"1",10)*Number(n.substr(2)):Number(n)||0,s=o-r,a.length&&(n=a.join("_"),-1!==n.indexOf("short")&&(s%=l,s!==s%(l/2)&&(s=0>s?s+l:s-l)),-1!==n.indexOf("_cw")&&0>s?s=(s+9999999999*l)%l-(0|s/l)*l:-1!==n.indexOf("ccw")&&s>0&&(s=(s-9999999999*l)%l-(0|s/l)*l)),(s>u||-u>s)&&(this._addTween(t,i,r,r+s,i),this._overwriteProps.push(i)));return!0},set:function(t){var e;if(1!==t)this._super.setRatio.call(this,t);else for(e=this._firstPT;e;)e.f?e.t[e.p](this.finals[e.p]):e.t[e.p]=this.finals[e.p],e=e._next}})._autoCSS=!0,_gsScope._gsDefine("easing.Back",["easing.Ease"],function(t){var e,i,n,r=_gsScope.GreenSockGlobals||_gsScope,o=r.com.greensock,s=2*Math.PI,a=Math.PI/2,l=o._class,u=function(e,i){var n=l("easing."+e,function(){},!0),r=n.prototype=new t;return r.constructor=n,r.getRatio=i,n},c=t.register||function(){},h=function(t,e,i,n){var r=l("easing."+t,{easeOut:new e,easeIn:new i,easeInOut:new n},!0);return c(r,t),r},d=function(t,e,i){this.t=t,this.v=e,i&&(this.next=i,i.prev=this,this.c=i.v-e,this.gap=i.t-t)},f=function(e,i){var n=l("easing."+e,function(t){this._p1=t||0===t?t:1.70158,this._p2=1.525*this._p1},!0),r=n.prototype=new t;return r.constructor=n,r.getRatio=i,r.config=function(t){return new n(t)},n},p=h("Back",f("BackOut",function(t){return(t-=1)*t*((this._p1+1)*t+this._p1)+1}),f("BackIn",function(t){return t*t*((this._p1+1)*t-this._p1)}),f("BackInOut",function(t){return 1>(t*=2)?.5*t*t*((this._p2+1)*t-this._p2):.5*((t-=2)*t*((this._p2+1)*t+this._p2)+2)})),g=l("easing.SlowMo",function(t,e,i){e=e||0===e?e:.7,null==t?t=.7:t>1&&(t=1),this._p=1!==t?e:0,this._p1=(1-t)/2,this._p2=t,this._p3=this._p1+this._p2,this._calcEnd=i===!0},!0),m=g.prototype=new t;return m.constructor=g,m.getRatio=function(t){var e=t+(.5-t)*this._p;return this._p1>t?this._calcEnd?1-(t=1-t/this._p1)*t:e-(t=1-t/this._p1)*t*t*t*e:t>this._p3?this._calcEnd?1-(t=(t-this._p3)/this._p1)*t:e+(t-e)*(t=(t-this._p3)/this._p1)*t*t*t:this._calcEnd?1:e},g.ease=new g(.7,.7),m.config=g.config=function(t,e,i){return new g(t,e,i)},e=l("easing.SteppedEase",function(t){t=t||1,this._p1=1/t,this._p2=t+1},!0),m=e.prototype=new t,m.constructor=e,m.getRatio=function(t){return 0>t?t=0:t>=1&&(t=.999999999),(this._p2*t>>0)*this._p1},m.config=e.config=function(t){return new e(t)},i=l("easing.RoughEase",function(e){e=e||{};for(var i,n,r,o,s,a,l=e.taper||"none",u=[],c=0,h=0|(e.points||20),f=h,p=e.randomize!==!1,g=e.clamp===!0,m=e.template instanceof t?e.template:null,_="number"==typeof e.strength?.4*e.strength:.4;--f>-1;)i=p?Math.random():1/h*f,n=m?m.getRatio(i):i,"none"===l?r=_:"out"===l?(o=1-i,r=o*o*_):"in"===l?r=i*i*_:.5>i?(o=2*i,r=.5*o*o*_):(o=2*(1-i),r=.5*o*o*_),p?n+=Math.random()*r-.5*r:f%2?n+=.5*r:n-=.5*r,g&&(n>1?n=1:0>n&&(n=0)),u[c++]={x:i,y:n};for(u.sort(function(t,e){return t.x-e.x}),a=new d(1,1,null),f=h;--f>-1;)s=u[f],a=new d(s.x,s.y,a);this._prev=new d(0,0,0!==a.t?a:a.next)},!0),m=i.prototype=new t,m.constructor=i,m.getRatio=function(t){var e=this._prev;if(t>e.t){for(;e.next&&t>=e.t;)e=e.next;e=e.prev}else for(;e.prev&&e.t>=t;)e=e.prev;return this._prev=e,e.v+(t-e.t)/e.gap*e.c},m.config=function(t){return new i(t)},i.ease=new i,h("Bounce",u("BounceOut",function(t){return 1/2.75>t?7.5625*t*t:2/2.75>t?7.5625*(t-=1.5/2.75)*t+.75:2.5/2.75>t?7.5625*(t-=2.25/2.75)*t+.9375:7.5625*(t-=2.625/2.75)*t+.984375}),u("BounceIn",function(t){return 1/2.75>(t=1-t)?1-7.5625*t*t:2/2.75>t?1-(7.5625*(t-=1.5/2.75)*t+.75):2.5/2.75>t?1-(7.5625*(t-=2.25/2.75)*t+.9375):1-(7.5625*(t-=2.625/2.75)*t+.984375)}),u("BounceInOut",function(t){var e=.5>t;return t=e?1-2*t:2*t-1,t=1/2.75>t?7.5625*t*t:2/2.75>t?7.5625*(t-=1.5/2.75)*t+.75:2.5/2.75>t?7.5625*(t-=2.25/2.75)*t+.9375:7.5625*(t-=2.625/2.75)*t+.984375,e?.5*(1-t):.5*t+.5})),h("Circ",u("CircOut",function(t){return Math.sqrt(1-(t-=1)*t)}),u("CircIn",function(t){return-(Math.sqrt(1-t*t)-1)}),u("CircInOut",function(t){return 1>(t*=2)?-.5*(Math.sqrt(1-t*t)-1):.5*(Math.sqrt(1-(t-=2)*t)+1)})),n=function(e,i,n){var r=l("easing."+e,function(t,e){this._p1=t||1,this._p2=e||n,this._p3=this._p2/s*(Math.asin(1/this._p1)||0)},!0),o=r.prototype=new t;return o.constructor=r,o.getRatio=i,o.config=function(t,e){return new r(t,e)},r},h("Elastic",n("ElasticOut",function(t){return this._p1*Math.pow(2,-10*t)*Math.sin((t-this._p3)*s/this._p2)+1},.3),n("ElasticIn",function(t){return-(this._p1*Math.pow(2,10*(t-=1))*Math.sin((t-this._p3)*s/this._p2))},.3),n("ElasticInOut",function(t){return 1>(t*=2)?-.5*this._p1*Math.pow(2,10*(t-=1))*Math.sin((t-this._p3)*s/this._p2):.5*this._p1*Math.pow(2,-10*(t-=1))*Math.sin((t-this._p3)*s/this._p2)+1},.45)),h("Expo",u("ExpoOut",function(t){return 1-Math.pow(2,-10*t)}),u("ExpoIn",function(t){return Math.pow(2,10*(t-1))-.001}),u("ExpoInOut",function(t){return 1>(t*=2)?.5*Math.pow(2,10*(t-1)):.5*(2-Math.pow(2,-10*(t-1)))})),h("Sine",u("SineOut",function(t){return Math.sin(t*a)}),u("SineIn",function(t){return-Math.cos(t*a)+1}),u("SineInOut",function(t){return-.5*(Math.cos(Math.PI*t)-1)})),l("easing.EaseLookup",{find:function(e){return t.map[e]}},!0),c(r.SlowMo,"SlowMo","ease,"),c(i,"RoughEase","ease,"),c(e,"SteppedEase","ease,"),p},!0)}),_gsScope._gsDefine&&_gsScope._gsQueue.pop()(),function(t,e){"use strict";var i=t.GreenSockGlobals=t.GreenSockGlobals||t;if(!i.TweenLite){var n,r,o,s,a,l=function(t){var e,n=t.split("."),r=i;for(e=0;n.length>e;e++)r[n[e]]=r=r[n[e]]||{};return r},u=l("com.greensock"),c=1e-10,h=function(t){var e,i=[],n=t.length;for(e=0;e!==n;i.push(t[e++]));return i},d=function(){},f=function(){var t=Object.prototype.toString,e=t.call([]);return function(i){return null!=i&&(i instanceof Array||"object"==typeof i&&!!i.push&&t.call(i)===e)}}(),p={},g=function(n,r,o,s){this.sc=p[n]?p[n].sc:[],p[n]=this,this.gsClass=null,this.func=o;var a=[];this.check=function(u){for(var c,h,d,f,m=r.length,_=m;--m>-1;)(c=p[r[m]]||new g(r[m],[])).gsClass?(a[m]=c.gsClass,_--):u&&c.sc.push(this);if(0===_&&o)for(h=("com.greensock."+n).split("."),d=h.pop(),f=l(h.join("."))[d]=this.gsClass=o.apply(o,a),s&&(i[d]=f,"function"==typeof define&&define.amd?define((t.GreenSockAMDPath?t.GreenSockAMDPath+"/":"")+n.split(".").pop(),[],function(){return f}):n===e&&"undefined"!=typeof module&&module.exports&&(module.exports=f)),m=0;this.sc.length>m;m++)this.sc[m].check()},this.check(!0)},m=t._gsDefine=function(t,e,i,n){return new g(t,e,i,n)},_=u._class=function(t,e,i){return e=e||function(){},m(t,[],function(){return e},i),e};m.globals=i;var v=[0,0,1,1],y=[],x=_("easing.Ease",function(t,e,i,n){this._func=t,this._type=i||0,this._power=n||0,this._params=e?v.concat(e):v},!0),b=x.map={},w=x.register=function(t,e,i,n){for(var r,o,s,a,l=e.split(","),c=l.length,h=(i||"easeIn,easeOut,easeInOut").split(",");--c>-1;)for(o=l[c],r=n?_("easing."+o,null,!0):u.easing[o]||{},s=h.length;--s>-1;)a=h[s],b[o+"."+a]=b[a+o]=r[a]=t.getRatio?t:t[a]||new t};for(o=x.prototype,o._calcEnd=!1,o.getRatio=function(t){if(this._func)return this._params[0]=t,this._func.apply(null,this._params);var e=this._type,i=this._power,n=1===e?1-t:2===e?t:.5>t?2*t:2*(1-t);return 1===i?n*=n:2===i?n*=n*n:3===i?n*=n*n*n:4===i&&(n*=n*n*n*n),1===e?1-n:2===e?n:.5>t?n/2:1-n/2},n=["Linear","Quad","Cubic","Quart","Quint,Strong"],r=n.length;--r>-1;)o=n[r]+",Power"+r,w(new x(null,null,1,r),o,"easeOut",!0),w(new x(null,null,2,r),o,"easeIn"+(0===r?",easeNone":"")),w(new x(null,null,3,r),o,"easeInOut");b.linear=u.easing.Linear.easeIn,b.swing=u.easing.Quad.easeInOut;var T=_("events.EventDispatcher",function(t){this._listeners={},this._eventTarget=t||this});o=T.prototype,o.addEventListener=function(t,e,i,n,r){r=r||0;var o,l,u=this._listeners[t],c=0;for(null==u&&(this._listeners[t]=u=[]),l=u.length;--l>-1;)o=u[l],o.c===e&&o.s===i?u.splice(l,1):0===c&&r>o.pr&&(c=l+1);u.splice(c,0,{c:e,s:i,up:n,pr:r}),this!==s||a||s.wake()},o.removeEventListener=function(t,e){var i,n=this._listeners[t];if(n)for(i=n.length;--i>-1;)if(n[i].c===e)return void n.splice(i,1)},o.dispatchEvent=function(t){var e,i,n,r=this._listeners[t];if(r)for(e=r.length,i=this._eventTarget;--e>-1;)n=r[e],n&&(n.up?n.c.call(n.s||i,{type:t,target:i}):n.c.call(n.s||i))};var k=t.requestAnimationFrame,S=t.cancelAnimationFrame,C=Date.now||function(){return(new Date).getTime()},P=C();for(n=["ms","moz","webkit","o"],r=n.length;--r>-1&&!k;)k=t[n[r]+"RequestAnimationFrame"],S=t[n[r]+"CancelAnimationFrame"]||t[n[r]+"CancelRequestAnimationFrame"];_("Ticker",function(t,e){var i,n,r,o,l,u=this,h=C(),f=e!==!1&&k,p=500,g=33,m=function(t){var e,s,a=C()-P;a>p&&(h+=a-g),P+=a,u.time=(P-h)/1e3,e=u.time-l,(!i||e>0||t===!0)&&(u.frame++,l+=e+(e>=o?.004:o-e),s=!0),t!==!0&&(r=n(m)),s&&u.dispatchEvent("tick")};T.call(u),u.time=u.frame=0,u.tick=function(){m(!0)},u.lagSmoothing=function(t,e){p=t||1/c,g=Math.min(e,p,0)},u.sleep=function(){null!=r&&(f&&S?S(r):clearTimeout(r),n=d,r=null,u===s&&(a=!1))},u.wake=function(){null!==r?u.sleep():u.frame>10&&(P=C()-p+5),n=0===i?d:f&&k?k:function(t){return setTimeout(t,0|1e3*(l-u.time)+1)},u===s&&(a=!0),m(2)},u.fps=function(t){return arguments.length?(i=t,o=1/(i||60),l=this.time+o,void u.wake()):i},u.useRAF=function(t){return arguments.length?(u.sleep(),f=t,void u.fps(i)):f},u.fps(t),setTimeout(function(){f&&(!r||5>u.frame)&&u.useRAF(!1)},1500)}),o=u.Ticker.prototype=new u.events.EventDispatcher,o.constructor=u.Ticker;var A=_("core.Animation",function(t,e){if(this.vars=e=e||{},this._duration=this._totalDuration=t||0,this._delay=Number(e.delay)||0,this._timeScale=1,this._active=e.immediateRender===!0,this.data=e.data,this._reversed=e.reversed===!0,Y){a||s.wake();var i=this.vars.useFrames?H:Y;i.add(this,i._time),this.vars.paused&&this.paused(!0)}});s=A.ticker=new u.Ticker,o=A.prototype,o._dirty=o._gc=o._initted=o._paused=!1,o._totalTime=o._time=0,o._rawPrevTime=-1,o._next=o._last=o._onUpdate=o._timeline=o.timeline=null,o._paused=!1;var O=function(){a&&C()-P>2e3&&s.wake(),setTimeout(O,2e3)};O(),o.play=function(t,e){return null!=t&&this.seek(t,e),this.reversed(!1).paused(!1)},o.pause=function(t,e){return null!=t&&this.seek(t,e),this.paused(!0)},o.resume=function(t,e){return null!=t&&this.seek(t,e),this.paused(!1)},o.seek=function(t,e){return this.totalTime(Number(t),e!==!1)},o.restart=function(t,e){return this.reversed(!1).paused(!1).totalTime(t?-this._delay:0,e!==!1,!0)},o.reverse=function(t,e){return null!=t&&this.seek(t||this.totalDuration(),e),this.reversed(!0).paused(!1)},o.render=function(){},o.invalidate=function(){return this._time=this._totalTime=0,this._initted=this._gc=!1,this._rawPrevTime=-1,(this._gc||!this.timeline)&&this._enabled(!0),this
},o.isActive=function(){var t,e=this._timeline,i=this._startTime;return!e||!this._gc&&!this._paused&&e.isActive()&&(t=e.rawTime())>=i&&i+this.totalDuration()/this._timeScale>t},o._enabled=function(t,e){return a||s.wake(),this._gc=!t,this._active=this.isActive(),e!==!0&&(t&&!this.timeline?this._timeline.add(this,this._startTime-this._delay):!t&&this.timeline&&this._timeline._remove(this,!0)),!1},o._kill=function(){return this._enabled(!1,!1)},o.kill=function(t,e){return this._kill(t,e),this},o._uncache=function(t){for(var e=t?this:this.timeline;e;)e._dirty=!0,e=e.timeline;return this},o._swapSelfInParams=function(t){for(var e=t.length,i=t.concat();--e>-1;)"{self}"===t[e]&&(i[e]=this);return i},o.eventCallback=function(t,e,i,n){if("on"===(t||"").substr(0,2)){var r=this.vars;if(1===arguments.length)return r[t];null==e?delete r[t]:(r[t]=e,r[t+"Params"]=f(i)&&-1!==i.join("").indexOf("{self}")?this._swapSelfInParams(i):i,r[t+"Scope"]=n),"onUpdate"===t&&(this._onUpdate=e)}return this},o.delay=function(t){return arguments.length?(this._timeline.smoothChildTiming&&this.startTime(this._startTime+t-this._delay),this._delay=t,this):this._delay},o.duration=function(t){return arguments.length?(this._duration=this._totalDuration=t,this._uncache(!0),this._timeline.smoothChildTiming&&this._time>0&&this._time<this._duration&&0!==t&&this.totalTime(this._totalTime*(t/this._duration),!0),this):(this._dirty=!1,this._duration)},o.totalDuration=function(t){return this._dirty=!1,arguments.length?this.duration(t):this._totalDuration},o.time=function(t,e){return arguments.length?(this._dirty&&this.totalDuration(),this.totalTime(t>this._duration?this._duration:t,e)):this._time},o.totalTime=function(t,e,i){if(a||s.wake(),!arguments.length)return this._totalTime;if(this._timeline){if(0>t&&!i&&(t+=this.totalDuration()),this._timeline.smoothChildTiming){this._dirty&&this.totalDuration();var n=this._totalDuration,r=this._timeline;if(t>n&&!i&&(t=n),this._startTime=(this._paused?this._pauseTime:r._time)-(this._reversed?n-t:t)/this._timeScale,r._dirty||this._uncache(!1),r._timeline)for(;r._timeline;)r._timeline._time!==(r._startTime+r._totalTime)/r._timeScale&&r.totalTime(r._totalTime,!0),r=r._timeline}this._gc&&this._enabled(!0,!1),(this._totalTime!==t||0===this._duration)&&(this.render(t,e,!1),E.length&&q())}return this},o.progress=o.totalProgress=function(t,e){return arguments.length?this.totalTime(this.duration()*t,e):this._time/this.duration()},o.startTime=function(t){return arguments.length?(t!==this._startTime&&(this._startTime=t,this.timeline&&this.timeline._sortChildren&&this.timeline.add(this,t-this._delay)),this):this._startTime},o.endTime=function(t){return this._startTime+(0!=t?this.totalDuration():this.duration())/this._timeScale},o.timeScale=function(t){if(!arguments.length)return this._timeScale;if(t=t||c,this._timeline&&this._timeline.smoothChildTiming){var e=this._pauseTime,i=e||0===e?e:this._timeline.totalTime();this._startTime=i-(i-this._startTime)*this._timeScale/t}return this._timeScale=t,this._uncache(!1)},o.reversed=function(t){return arguments.length?(t!=this._reversed&&(this._reversed=t,this.totalTime(this._timeline&&!this._timeline.smoothChildTiming?this.totalDuration()-this._totalTime:this._totalTime,!0)),this):this._reversed},o.paused=function(t){if(!arguments.length)return this._paused;if(t!=this._paused&&this._timeline){a||t||s.wake();var e=this._timeline,i=e.rawTime(),n=i-this._pauseTime;!t&&e.smoothChildTiming&&(this._startTime+=n,this._uncache(!1)),this._pauseTime=t?i:null,this._paused=t,this._active=this.isActive(),!t&&0!==n&&this._initted&&this.duration()&&this.render(e.smoothChildTiming?this._totalTime:(i-this._startTime)/this._timeScale,!0,!0)}return this._gc&&!t&&this._enabled(!0,!1),this};var D=_("core.SimpleTimeline",function(t){A.call(this,0,t),this.autoRemoveChildren=this.smoothChildTiming=!0});o=D.prototype=new A,o.constructor=D,o.kill()._gc=!1,o._first=o._last=o._recent=null,o._sortChildren=!1,o.add=o.insert=function(t,e){var i,n;if(t._startTime=Number(e||0)+t._delay,t._paused&&this!==t._timeline&&(t._pauseTime=t._startTime+(this.rawTime()-t._startTime)/t._timeScale),t.timeline&&t.timeline._remove(t,!0),t.timeline=t._timeline=this,t._gc&&t._enabled(!0,!0),i=this._last,this._sortChildren)for(n=t._startTime;i&&i._startTime>n;)i=i._prev;return i?(t._next=i._next,i._next=t):(t._next=this._first,this._first=t),t._next?t._next._prev=t:this._last=t,t._prev=i,this._recent=t,this._timeline&&this._uncache(!0),this},o._remove=function(t,e){return t.timeline===this&&(e||t._enabled(!1,!0),t._prev?t._prev._next=t._next:this._first===t&&(this._first=t._next),t._next?t._next._prev=t._prev:this._last===t&&(this._last=t._prev),t._next=t._prev=t.timeline=null,t===this._recent&&(this._recent=this._last),this._timeline&&this._uncache(!0)),this},o.render=function(t,e,i){var n,r=this._first;for(this._totalTime=this._time=this._rawPrevTime=t;r;)n=r._next,(r._active||t>=r._startTime&&!r._paused)&&(r._reversed?r.render((r._dirty?r.totalDuration():r._totalDuration)-(t-r._startTime)*r._timeScale,e,i):r.render((t-r._startTime)*r._timeScale,e,i)),r=n},o.rawTime=function(){return a||s.wake(),this._totalTime};var M=_("TweenLite",function(e,i,n){if(A.call(this,i,n),this.render=M.prototype.render,null==e)throw"Cannot tween a null target.";this.target=e="string"!=typeof e?e:M.selector(e)||e;var r,o,s,a=e.jquery||e.length&&e!==t&&e[0]&&(e[0]===t||e[0].nodeType&&e[0].style&&!e.nodeType),l=this.vars.overwrite;if(this._overwrite=l=null==l?B[M.defaultOverwrite]:"number"==typeof l?l>>0:B[l],(a||e instanceof Array||e.push&&f(e))&&"number"!=typeof e[0])for(this._targets=s=h(e),this._propLookup=[],this._siblings=[],r=0;s.length>r;r++)o=s[r],o?"string"!=typeof o?o.length&&o!==t&&o[0]&&(o[0]===t||o[0].nodeType&&o[0].style&&!o.nodeType)?(s.splice(r--,1),this._targets=s=s.concat(h(o))):(this._siblings[r]=W(o,this,!1),1===l&&this._siblings[r].length>1&&U(o,this,null,1,this._siblings[r])):(o=s[r--]=M.selector(o),"string"==typeof o&&s.splice(r+1,1)):s.splice(r--,1);else this._propLookup={},this._siblings=W(e,this,!1),1===l&&this._siblings.length>1&&U(e,this,null,1,this._siblings);(this.vars.immediateRender||0===i&&0===this._delay&&this.vars.immediateRender!==!1)&&(this._time=-c,this.render(-this._delay))},!0),N=function(e){return e&&e.length&&e!==t&&e[0]&&(e[0]===t||e[0].nodeType&&e[0].style&&!e.nodeType)},R=function(t,e){var i,n={};for(i in t)X[i]||i in e&&"transform"!==i&&"x"!==i&&"y"!==i&&"width"!==i&&"height"!==i&&"className"!==i&&"border"!==i||!(!F[i]||F[i]&&F[i]._autoCSS)||(n[i]=t[i],delete t[i]);t.css=n};o=M.prototype=new A,o.constructor=M,o.kill()._gc=!1,o.ratio=0,o._firstPT=o._targets=o._overwrittenProps=o._startAt=null,o._notifyPluginsOfEnabled=o._lazy=!1,M.version="1.14.2",M.defaultEase=o._ease=new x(null,null,1,1),M.defaultOverwrite="auto",M.ticker=s,M.autoSleep=!0,M.lagSmoothing=function(t,e){s.lagSmoothing(t,e)},M.selector=t.$||t.jQuery||function(e){var i=t.$||t.jQuery;return i?(M.selector=i,i(e)):"undefined"==typeof document?e:document.querySelectorAll?document.querySelectorAll(e):document.getElementById("#"===e.charAt(0)?e.substr(1):e)};var E=[],L={},j=M._internals={isArray:f,isSelector:N,lazyTweens:E},F=M._plugins={},I=j.tweenLookup={},z=0,X=j.reservedProps={ease:1,delay:1,overwrite:1,onComplete:1,onCompleteParams:1,onCompleteScope:1,useFrames:1,runBackwards:1,startAt:1,onUpdate:1,onUpdateParams:1,onUpdateScope:1,onStart:1,onStartParams:1,onStartScope:1,onReverseComplete:1,onReverseCompleteParams:1,onReverseCompleteScope:1,onRepeat:1,onRepeatParams:1,onRepeatScope:1,easeParams:1,yoyo:1,immediateRender:1,repeat:1,repeatDelay:1,data:1,paused:1,reversed:1,autoCSS:1,lazy:1,onOverwrite:1},B={none:0,all:1,auto:2,concurrent:3,allOnStart:4,preexisting:5,"true":1,"false":0},H=A._rootFramesTimeline=new D,Y=A._rootTimeline=new D,q=j.lazyRender=function(){var t,e=E.length;for(L={};--e>-1;)t=E[e],t&&t._lazy!==!1&&(t.render(t._lazy[0],t._lazy[1],!0),t._lazy=!1);E.length=0};Y._startTime=s.time,H._startTime=s.frame,Y._active=H._active=!0,setTimeout(q,1),A._updateRoot=M.render=function(){var t,e,i;if(E.length&&q(),Y.render((s.time-Y._startTime)*Y._timeScale,!1,!1),H.render((s.frame-H._startTime)*H._timeScale,!1,!1),E.length&&q(),!(s.frame%120)){for(i in I){for(e=I[i].tweens,t=e.length;--t>-1;)e[t]._gc&&e.splice(t,1);0===e.length&&delete I[i]}if(i=Y._first,(!i||i._paused)&&M.autoSleep&&!H._first&&1===s._listeners.tick.length){for(;i&&i._paused;)i=i._next;i||s.sleep()}}},s.addEventListener("tick",A._updateRoot);var W=function(t,e,i){var n,r,o=t._gsTweenID;if(I[o||(t._gsTweenID=o="t"+z++)]||(I[o]={target:t,tweens:[]}),e&&(n=I[o].tweens,n[r=n.length]=e,i))for(;--r>-1;)n[r]===e&&n.splice(r,1);return I[o].tweens},Q=function(t,e,i,n){var r,o,s=t.vars.onOverwrite;return s&&(r=s(t,e,i,n)),s=M.onOverwrite,s&&(o=s(t,e,i,n)),r!==!1&&o!==!1},U=function(t,e,i,n,r){var o,s,a,l;if(1===n||n>=4){for(l=r.length,o=0;l>o;o++)if((a=r[o])!==e)a._gc||Q(a,e)&&a._enabled(!1,!1)&&(s=!0);else if(5===n)break;return s}var u,h=e._startTime+c,d=[],f=0,p=0===e._duration;for(o=r.length;--o>-1;)(a=r[o])===e||a._gc||a._paused||(a._timeline!==e._timeline?(u=u||$(e,0,p),0===$(a,u,p)&&(d[f++]=a)):h>=a._startTime&&a._startTime+a.totalDuration()/a._timeScale>h&&((p||!a._initted)&&2e-10>=h-a._startTime||(d[f++]=a)));for(o=f;--o>-1;)if(a=d[o],2===n&&a._kill(i,t,e)&&(s=!0),2!==n||!a._firstPT&&a._initted){if(2!==n&&!Q(a,e))continue;a._enabled(!1,!1)&&(s=!0)}return s},$=function(t,e,i){for(var n=t._timeline,r=n._timeScale,o=t._startTime;n._timeline;){if(o+=n._startTime,r*=n._timeScale,n._paused)return-100;n=n._timeline}return o/=r,o>e?o-e:i&&o===e||!t._initted&&2*c>o-e?c:(o+=t.totalDuration()/t._timeScale/r)>e+c?0:o-e-c};o._init=function(){var t,e,i,n,r,o=this.vars,s=this._overwrittenProps,a=this._duration,l=!!o.immediateRender,u=o.ease;if(o.startAt){this._startAt&&(this._startAt.render(-1,!0),this._startAt.kill()),r={};for(n in o.startAt)r[n]=o.startAt[n];if(r.overwrite=!1,r.immediateRender=!0,r.lazy=l&&o.lazy!==!1,r.startAt=r.delay=null,this._startAt=M.to(this.target,0,r),l)if(this._time>0)this._startAt=null;else if(0!==a)return}else if(o.runBackwards&&0!==a)if(this._startAt)this._startAt.render(-1,!0),this._startAt.kill(),this._startAt=null;else{0!==this._time&&(l=!1),i={};for(n in o)X[n]&&"autoCSS"!==n||(i[n]=o[n]);if(i.overwrite=0,i.data="isFromStart",i.lazy=l&&o.lazy!==!1,i.immediateRender=l,this._startAt=M.to(this.target,0,i),l){if(0===this._time)return}else this._startAt._init(),this._startAt._enabled(!1),this.vars.immediateRender&&(this._startAt=null)}if(this._ease=u=u?u instanceof x?u:"function"==typeof u?new x(u,o.easeParams):b[u]||M.defaultEase:M.defaultEase,o.easeParams instanceof Array&&u.config&&(this._ease=u.config.apply(u,o.easeParams)),this._easeType=this._ease._type,this._easePower=this._ease._power,this._firstPT=null,this._targets)for(t=this._targets.length;--t>-1;)this._initProps(this._targets[t],this._propLookup[t]={},this._siblings[t],s?s[t]:null)&&(e=!0);else e=this._initProps(this.target,this._propLookup,this._siblings,s);if(e&&M._onPluginEvent("_onInitAllProps",this),s&&(this._firstPT||"function"!=typeof this.target&&this._enabled(!1,!1)),o.runBackwards)for(i=this._firstPT;i;)i.s+=i.c,i.c=-i.c,i=i._next;this._onUpdate=o.onUpdate,this._initted=!0},o._initProps=function(e,i,n,r){var o,s,a,l,u,c;if(null==e)return!1;L[e._gsTweenID]&&q(),this.vars.css||e.style&&e!==t&&e.nodeType&&F.css&&this.vars.autoCSS!==!1&&R(this.vars,e);for(o in this.vars){if(c=this.vars[o],X[o])c&&(c instanceof Array||c.push&&f(c))&&-1!==c.join("").indexOf("{self}")&&(this.vars[o]=c=this._swapSelfInParams(c,this));else if(F[o]&&(l=new F[o])._onInitTween(e,this.vars[o],this)){for(this._firstPT=u={_next:this._firstPT,t:l,p:"setRatio",s:0,c:1,f:!0,n:o,pg:!0,pr:l._priority},s=l._overwriteProps.length;--s>-1;)i[l._overwriteProps[s]]=this._firstPT;(l._priority||l._onInitAllProps)&&(a=!0),(l._onDisable||l._onEnable)&&(this._notifyPluginsOfEnabled=!0)}else this._firstPT=i[o]=u={_next:this._firstPT,t:e,p:o,f:"function"==typeof e[o],n:o,pg:!1,pr:0},u.s=u.f?e[o.indexOf("set")||"function"!=typeof e["get"+o.substr(3)]?o:"get"+o.substr(3)]():parseFloat(e[o]),u.c="string"==typeof c&&"="===c.charAt(1)?parseInt(c.charAt(0)+"1",10)*Number(c.substr(2)):Number(c)-u.s||0;u&&u._next&&(u._next._prev=u)}return r&&this._kill(r,e)?this._initProps(e,i,n,r):this._overwrite>1&&this._firstPT&&n.length>1&&U(e,this,i,this._overwrite,n)?(this._kill(i,e),this._initProps(e,i,n,r)):(this._firstPT&&(this.vars.lazy!==!1&&this._duration||this.vars.lazy&&!this._duration)&&(L[e._gsTweenID]=!0),a)},o.render=function(t,e,i){var n,r,o,s,a=this._time,l=this._duration,u=this._rawPrevTime;if(t>=l)this._totalTime=this._time=l,this.ratio=this._ease._calcEnd?this._ease.getRatio(1):1,this._reversed||(n=!0,r="onComplete"),0===l&&(this._initted||!this.vars.lazy||i)&&(this._startTime===this._timeline._duration&&(t=0),(0===t||0>u||u===c)&&u!==t&&(i=!0,u>c&&(r="onReverseComplete")),this._rawPrevTime=s=!e||t||u===t?t:c);else if(1e-7>t)this._totalTime=this._time=0,this.ratio=this._ease._calcEnd?this._ease.getRatio(0):0,(0!==a||0===l&&u>0&&u!==c)&&(r="onReverseComplete",n=this._reversed),0>t&&(this._active=!1,0===l&&(this._initted||!this.vars.lazy||i)&&(u>=0&&(i=!0),this._rawPrevTime=s=!e||t||u===t?t:c)),this._initted||(i=!0);else if(this._totalTime=this._time=t,this._easeType){var h=t/l,d=this._easeType,f=this._easePower;(1===d||3===d&&h>=.5)&&(h=1-h),3===d&&(h*=2),1===f?h*=h:2===f?h*=h*h:3===f?h*=h*h*h:4===f&&(h*=h*h*h*h),this.ratio=1===d?1-h:2===d?h:.5>t/l?h/2:1-h/2}else this.ratio=this._ease.getRatio(t/l);if(this._time!==a||i){if(!this._initted){if(this._init(),!this._initted||this._gc)return;if(!i&&this._firstPT&&(this.vars.lazy!==!1&&this._duration||this.vars.lazy&&!this._duration))return this._time=this._totalTime=a,this._rawPrevTime=u,E.push(this),void(this._lazy=[t,e]);this._time&&!n?this.ratio=this._ease.getRatio(this._time/l):n&&this._ease._calcEnd&&(this.ratio=this._ease.getRatio(0===this._time?0:1))}for(this._lazy!==!1&&(this._lazy=!1),this._active||!this._paused&&this._time!==a&&t>=0&&(this._active=!0),0===a&&(this._startAt&&(t>=0?this._startAt.render(t,e,i):r||(r="_dummyGS")),this.vars.onStart&&(0!==this._time||0===l)&&(e||this.vars.onStart.apply(this.vars.onStartScope||this,this.vars.onStartParams||y))),o=this._firstPT;o;)o.f?o.t[o.p](o.c*this.ratio+o.s):o.t[o.p]=o.c*this.ratio+o.s,o=o._next;this._onUpdate&&(0>t&&this._startAt&&t!==-1e-4&&this._startAt.render(t,e,i),e||(this._time!==a||n)&&this._onUpdate.apply(this.vars.onUpdateScope||this,this.vars.onUpdateParams||y)),r&&(!this._gc||i)&&(0>t&&this._startAt&&!this._onUpdate&&t!==-1e-4&&this._startAt.render(t,e,i),n&&(this._timeline.autoRemoveChildren&&this._enabled(!1,!1),this._active=!1),!e&&this.vars[r]&&this.vars[r].apply(this.vars[r+"Scope"]||this,this.vars[r+"Params"]||y),0===l&&this._rawPrevTime===c&&s!==c&&(this._rawPrevTime=0))}},o._kill=function(t,e,i){if("all"===t&&(t=null),null==t&&(null==e||e===this.target))return this._lazy=!1,this._enabled(!1,!1);e="string"!=typeof e?e||this._targets||this.target:M.selector(e)||e;var n,r,o,s,a,l,u,c,h;if((f(e)||N(e))&&"number"!=typeof e[0])for(n=e.length;--n>-1;)this._kill(t,e[n])&&(l=!0);else{if(this._targets){for(n=this._targets.length;--n>-1;)if(e===this._targets[n]){a=this._propLookup[n]||{},this._overwrittenProps=this._overwrittenProps||[],r=this._overwrittenProps[n]=t?this._overwrittenProps[n]||{}:"all";break}}else{if(e!==this.target)return!1;a=this._propLookup,r=this._overwrittenProps=t?this._overwrittenProps||{}:"all"}if(a){if(u=t||a,c=t!==r&&"all"!==r&&t!==a&&("object"!=typeof t||!t._tempKill),i&&(M.onOverwrite||this.vars.onOverwrite)){for(o in u)a[o]&&(h||(h=[]),h.push(o));if(!Q(this,i,e,h))return!1}for(o in u)(s=a[o])&&(s.pg&&s.t._kill(u)&&(l=!0),s.pg&&0!==s.t._overwriteProps.length||(s._prev?s._prev._next=s._next:s===this._firstPT&&(this._firstPT=s._next),s._next&&(s._next._prev=s._prev),s._next=s._prev=null),delete a[o]),c&&(r[o]=1);!this._firstPT&&this._initted&&this._enabled(!1,!1)}}return l},o.invalidate=function(){return this._notifyPluginsOfEnabled&&M._onPluginEvent("_onDisable",this),this._firstPT=this._overwrittenProps=this._startAt=this._onUpdate=null,this._notifyPluginsOfEnabled=this._active=this._lazy=!1,this._propLookup=this._targets?{}:[],A.prototype.invalidate.call(this),this.vars.immediateRender&&(this._time=-c,this.render(-this._delay)),this},o._enabled=function(t,e){if(a||s.wake(),t&&this._gc){var i,n=this._targets;if(n)for(i=n.length;--i>-1;)this._siblings[i]=W(n[i],this,!0);else this._siblings=W(this.target,this,!0)}return A.prototype._enabled.call(this,t,e),this._notifyPluginsOfEnabled&&this._firstPT?M._onPluginEvent(t?"_onEnable":"_onDisable",this):!1},M.to=function(t,e,i){return new M(t,e,i)},M.from=function(t,e,i){return i.runBackwards=!0,i.immediateRender=0!=i.immediateRender,new M(t,e,i)},M.fromTo=function(t,e,i,n){return n.startAt=i,n.immediateRender=0!=n.immediateRender&&0!=i.immediateRender,new M(t,e,n)},M.delayedCall=function(t,e,i,n,r){return new M(e,0,{delay:t,onComplete:e,onCompleteParams:i,onCompleteScope:n,onReverseComplete:e,onReverseCompleteParams:i,onReverseCompleteScope:n,immediateRender:!1,useFrames:r,overwrite:0})},M.set=function(t,e){return new M(t,0,e)},M.getTweensOf=function(t,e){if(null==t)return[];t="string"!=typeof t?t:M.selector(t)||t;var i,n,r,o;if((f(t)||N(t))&&"number"!=typeof t[0]){for(i=t.length,n=[];--i>-1;)n=n.concat(M.getTweensOf(t[i],e));for(i=n.length;--i>-1;)for(o=n[i],r=i;--r>-1;)o===n[r]&&n.splice(i,1)}else for(n=W(t).concat(),i=n.length;--i>-1;)(n[i]._gc||e&&!n[i].isActive())&&n.splice(i,1);return n},M.killTweensOf=M.killDelayedCallsTo=function(t,e,i){"object"==typeof e&&(i=e,e=!1);for(var n=M.getTweensOf(t,e),r=n.length;--r>-1;)n[r]._kill(i,t)};var V=_("plugins.TweenPlugin",function(t,e){this._overwriteProps=(t||"").split(","),this._propName=this._overwriteProps[0],this._priority=e||0,this._super=V.prototype},!0);if(o=V.prototype,V.version="1.10.1",V.API=2,o._firstPT=null,o._addTween=function(t,e,i,n,r,o){var s,a;return null!=n&&(s="number"==typeof n||"="!==n.charAt(1)?Number(n)-i:parseInt(n.charAt(0)+"1",10)*Number(n.substr(2)))?(this._firstPT=a={_next:this._firstPT,t:t,p:e,s:i,c:s,f:"function"==typeof t[e],n:r||e,r:o},a._next&&(a._next._prev=a),a):void 0},o.setRatio=function(t){for(var e,i=this._firstPT,n=1e-6;i;)e=i.c*t+i.s,i.r?e=Math.round(e):n>e&&e>-n&&(e=0),i.f?i.t[i.p](e):i.t[i.p]=e,i=i._next},o._kill=function(t){var e,i=this._overwriteProps,n=this._firstPT;if(null!=t[this._propName])this._overwriteProps=[];else for(e=i.length;--e>-1;)null!=t[i[e]]&&i.splice(e,1);for(;n;)null!=t[n.n]&&(n._next&&(n._next._prev=n._prev),n._prev?(n._prev._next=n._next,n._prev=null):this._firstPT===n&&(this._firstPT=n._next)),n=n._next;return!1},o._roundProps=function(t,e){for(var i=this._firstPT;i;)(t[this._propName]||null!=i.n&&t[i.n.split(this._propName+"_").join("")])&&(i.r=e),i=i._next},M._onPluginEvent=function(t,e){var i,n,r,o,s,a=e._firstPT;if("_onInitAllProps"===t){for(;a;){for(s=a._next,n=r;n&&n.pr>a.pr;)n=n._next;(a._prev=n?n._prev:o)?a._prev._next=a:r=a,(a._next=n)?n._prev=a:o=a,a=s}a=e._firstPT=r}for(;a;)a.pg&&"function"==typeof a.t[t]&&a.t[t]()&&(i=!0),a=a._next;return i},V.activate=function(t){for(var e=t.length;--e>-1;)t[e].API===V.API&&(F[(new t[e])._propName]=t[e]);return!0},m.plugin=function(t){if(!(t&&t.propName&&t.init&&t.API))throw"illegal plugin definition.";var e,i=t.propName,n=t.priority||0,r=t.overwriteProps,o={init:"_onInitTween",set:"setRatio",kill:"_kill",round:"_roundProps",initAll:"_onInitAllProps"},s=_("plugins."+i.charAt(0).toUpperCase()+i.substr(1)+"Plugin",function(){V.call(this,i,n),this._overwriteProps=r||[]},t.global===!0),a=s.prototype=new V(i);a.constructor=s,s.API=t.API;for(e in o)"function"==typeof t[e]&&(a[o[e]]=t[e]);return s.version=t.version,V.activate([s]),s},n=t._gsQueue){for(r=0;n.length>r;r++)n[r]();for(o in p)p[o].func||t.console.log("GSAP encountered missing dependency: com.greensock."+o)}a=!1}}("undefined"!=typeof module&&module.exports&&"undefined"!=typeof global?global:this||window,"TweenMax");var _gsScope="undefined"!=typeof module&&module.exports&&"undefined"!=typeof global?global:this||window;(_gsScope._gsQueue||(_gsScope._gsQueue=[])).push(function(){"use strict";_gsScope._gsDefine("TimelineMax",["TimelineLite","TweenLite","easing.Ease"],function(t,e,i){var n=function(e){t.call(this,e),this._repeat=this.vars.repeat||0,this._repeatDelay=this.vars.repeatDelay||0,this._cycle=0,this._yoyo=this.vars.yoyo===!0,this._dirty=!0},r=1e-10,o=[],s=e._internals,a=s.lazyTweens,l=s.lazyRender,u=new i(null,null,1,0),c=n.prototype=new t;return c.constructor=n,c.kill()._gc=!1,n.version="1.14.2",c.invalidate=function(){return this._yoyo=this.vars.yoyo===!0,this._repeat=this.vars.repeat||0,this._repeatDelay=this.vars.repeatDelay||0,this._uncache(!0),t.prototype.invalidate.call(this)},c.addCallback=function(t,i,n,r){return this.add(e.delayedCall(0,t,n,r),i)},c.removeCallback=function(t,e){if(t)if(null==e)this._kill(null,t);else for(var i=this.getTweensOf(t,!1),n=i.length,r=this._parseTimeOrLabel(e);--n>-1;)i[n]._startTime===r&&i[n]._enabled(!1,!1);return this},c.tweenTo=function(t,i){i=i||{};var n,r,s,a={ease:u,overwrite:i.delay?2:1,useFrames:this.usesFrames(),immediateRender:!1};for(r in i)a[r]=i[r];return a.time=this._parseTimeOrLabel(t),n=Math.abs(Number(a.time)-this._time)/this._timeScale||.001,s=new e(this,n,a),a.onStart=function(){s.target.paused(!0),s.vars.time!==s.target.time()&&n===s.duration()&&s.duration(Math.abs(s.vars.time-s.target.time())/s.target._timeScale),i.onStart&&i.onStart.apply(i.onStartScope||s,i.onStartParams||o)},s},c.tweenFromTo=function(t,e,i){i=i||{},t=this._parseTimeOrLabel(t),i.startAt={onComplete:this.seek,onCompleteParams:[t],onCompleteScope:this},i.immediateRender=i.immediateRender!==!1;var n=this.tweenTo(e,i);return n.duration(Math.abs(n.vars.time-t)/this._timeScale||.001)},c.render=function(t,e,i){this._gc&&this._enabled(!0,!1);var n,s,u,c,h,d,f=this._dirty?this.totalDuration():this._totalDuration,p=this._duration,g=this._time,m=this._totalTime,_=this._startTime,v=this._timeScale,y=this._rawPrevTime,x=this._paused,b=this._cycle;if(t>=f?(this._locked||(this._totalTime=f,this._cycle=this._repeat),this._reversed||this._hasPausedChild()||(s=!0,c="onComplete",0===this._duration&&(0===t||0>y||y===r)&&y!==t&&this._first&&(h=!0,y>r&&(c="onReverseComplete"))),this._rawPrevTime=this._duration||!e||t||this._rawPrevTime===t?t:r,this._yoyo&&0!==(1&this._cycle)?this._time=t=0:(this._time=p,t=p+1e-4)):1e-7>t?(this._locked||(this._totalTime=this._cycle=0),this._time=0,(0!==g||0===p&&y!==r&&(y>0||0>t&&y>=0)&&!this._locked)&&(c="onReverseComplete",s=this._reversed),0>t?(this._active=!1,y>=0&&this._first&&(h=!0),this._rawPrevTime=t):(this._rawPrevTime=p||!e||t||this._rawPrevTime===t?t:r,t=0,this._initted||(h=!0))):(0===p&&0>y&&(h=!0),this._time=this._rawPrevTime=t,this._locked||(this._totalTime=t,0!==this._repeat&&(d=p+this._repeatDelay,this._cycle=this._totalTime/d>>0,0!==this._cycle&&this._cycle===this._totalTime/d&&this._cycle--,this._time=this._totalTime-this._cycle*d,this._yoyo&&0!==(1&this._cycle)&&(this._time=p-this._time),this._time>p?(this._time=p,t=p+1e-4):0>this._time?this._time=t=0:t=this._time))),this._cycle!==b&&!this._locked){var w=this._yoyo&&0!==(1&b),T=w===(this._yoyo&&0!==(1&this._cycle)),k=this._totalTime,S=this._cycle,C=this._rawPrevTime,P=this._time;if(this._totalTime=b*p,b>this._cycle?w=!w:this._totalTime+=p,this._time=g,this._rawPrevTime=0===p?y-1e-4:y,this._cycle=b,this._locked=!0,g=w?0:p,this.render(g,e,0===p),e||this._gc||this.vars.onRepeat&&this.vars.onRepeat.apply(this.vars.onRepeatScope||this,this.vars.onRepeatParams||o),T&&(g=w?p+1e-4:-1e-4,this.render(g,!0,!1)),this._locked=!1,this._paused&&!x)return;this._time=P,this._totalTime=k,this._cycle=S,this._rawPrevTime=C}if(!(this._time!==g&&this._first||i||h))return void(m!==this._totalTime&&this._onUpdate&&(e||this._onUpdate.apply(this.vars.onUpdateScope||this,this.vars.onUpdateParams||o)));if(this._initted||(this._initted=!0),this._active||!this._paused&&this._totalTime!==m&&t>0&&(this._active=!0),0===m&&this.vars.onStart&&0!==this._totalTime&&(e||this.vars.onStart.apply(this.vars.onStartScope||this,this.vars.onStartParams||o)),this._time>=g)for(n=this._first;n&&(u=n._next,!this._paused||x);)(n._active||n._startTime<=this._time&&!n._paused&&!n._gc)&&(n._reversed?n.render((n._dirty?n.totalDuration():n._totalDuration)-(t-n._startTime)*n._timeScale,e,i):n.render((t-n._startTime)*n._timeScale,e,i)),n=u;else for(n=this._last;n&&(u=n._prev,!this._paused||x);)(n._active||g>=n._startTime&&!n._paused&&!n._gc)&&(n._reversed?n.render((n._dirty?n.totalDuration():n._totalDuration)-(t-n._startTime)*n._timeScale,e,i):n.render((t-n._startTime)*n._timeScale,e,i)),n=u;this._onUpdate&&(e||(a.length&&l(),this._onUpdate.apply(this.vars.onUpdateScope||this,this.vars.onUpdateParams||o))),c&&(this._locked||this._gc||(_===this._startTime||v!==this._timeScale)&&(0===this._time||f>=this.totalDuration())&&(s&&(a.length&&l(),this._timeline.autoRemoveChildren&&this._enabled(!1,!1),this._active=!1),!e&&this.vars[c]&&this.vars[c].apply(this.vars[c+"Scope"]||this,this.vars[c+"Params"]||o)))},c.getActive=function(t,e,i){null==t&&(t=!0),null==e&&(e=!0),null==i&&(i=!1);var n,r,o=[],s=this.getChildren(t,e,i),a=0,l=s.length;for(n=0;l>n;n++)r=s[n],r.isActive()&&(o[a++]=r);return o},c.getLabelAfter=function(t){t||0!==t&&(t=this._time);var e,i=this.getLabelsArray(),n=i.length;for(e=0;n>e;e++)if(i[e].time>t)return i[e].name;return null},c.getLabelBefore=function(t){null==t&&(t=this._time);for(var e=this.getLabelsArray(),i=e.length;--i>-1;)if(t>e[i].time)return e[i].name;return null},c.getLabelsArray=function(){var t,e=[],i=0;for(t in this._labels)e[i++]={time:this._labels[t],name:t};return e.sort(function(t,e){return t.time-e.time}),e},c.progress=function(t,e){return arguments.length?this.totalTime(this.duration()*(this._yoyo&&0!==(1&this._cycle)?1-t:t)+this._cycle*(this._duration+this._repeatDelay),e):this._time/this.duration()},c.totalProgress=function(t,e){return arguments.length?this.totalTime(this.totalDuration()*t,e):this._totalTime/this.totalDuration()},c.totalDuration=function(e){return arguments.length?-1===this._repeat?this:this.duration((e-this._repeat*this._repeatDelay)/(this._repeat+1)):(this._dirty&&(t.prototype.totalDuration.call(this),this._totalDuration=-1===this._repeat?999999999999:this._duration*(this._repeat+1)+this._repeatDelay*this._repeat),this._totalDuration)},c.time=function(t,e){return arguments.length?(this._dirty&&this.totalDuration(),t>this._duration&&(t=this._duration),this._yoyo&&0!==(1&this._cycle)?t=this._duration-t+this._cycle*(this._duration+this._repeatDelay):0!==this._repeat&&(t+=this._cycle*(this._duration+this._repeatDelay)),this.totalTime(t,e)):this._time},c.repeat=function(t){return arguments.length?(this._repeat=t,this._uncache(!0)):this._repeat},c.repeatDelay=function(t){return arguments.length?(this._repeatDelay=t,this._uncache(!0)):this._repeatDelay},c.yoyo=function(t){return arguments.length?(this._yoyo=t,this):this._yoyo},c.currentLabel=function(t){return arguments.length?this.seek(t,!0):this.getLabelBefore(this._time+1e-8)},n},!0),_gsScope._gsDefine("TimelineLite",["core.Animation","core.SimpleTimeline","TweenLite"],function(t,e,i){var n=function(t){e.call(this,t),this._labels={},this.autoRemoveChildren=this.vars.autoRemoveChildren===!0,this.smoothChildTiming=this.vars.smoothChildTiming===!0,this._sortChildren=!0,this._onUpdate=this.vars.onUpdate;var i,n,r=this.vars;for(n in r)i=r[n],a(i)&&-1!==i.join("").indexOf("{self}")&&(r[n]=this._swapSelfInParams(i));a(r.tweens)&&this.add(r.tweens,0,r.align,r.stagger)},r=1e-10,o=i._internals,s=o.isSelector,a=o.isArray,l=o.lazyTweens,u=o.lazyRender,c=[],h=_gsScope._gsDefine.globals,d=function(t){var e,i={};for(e in t)i[e]=t[e];return i},f=function(t,e,i,n){var r=t._timeline._totalTime;(e||!this._forcingPlayhead)&&(t._timeline.pause(t._startTime),e&&e.apply(n||t._timeline,i||c),this._forcingPlayhead&&t._timeline.seek(r))},p=function(t){var e,i=[],n=t.length;for(e=0;e!==n;i.push(t[e++]));return i},g=n.prototype=new e;return n.version="1.14.2",g.constructor=n,g.kill()._gc=g._forcingPlayhead=!1,g.to=function(t,e,n,r){var o=n.repeat&&h.TweenMax||i;return e?this.add(new o(t,e,n),r):this.set(t,n,r)},g.from=function(t,e,n,r){return this.add((n.repeat&&h.TweenMax||i).from(t,e,n),r)},g.fromTo=function(t,e,n,r,o){var s=r.repeat&&h.TweenMax||i;return e?this.add(s.fromTo(t,e,n,r),o):this.set(t,r,o)},g.staggerTo=function(t,e,r,o,a,l,u,c){var h,f=new n({onComplete:l,onCompleteParams:u,onCompleteScope:c,smoothChildTiming:this.smoothChildTiming});for("string"==typeof t&&(t=i.selector(t)||t),s(t)&&(t=p(t)),o=o||0,0>o&&(t=p(t),t.reverse(),o*=-1),h=0;t.length>h;h++)r.startAt&&(r.startAt=d(r.startAt)),f.to(t[h],e,d(r),h*o);return this.add(f,a)},g.staggerFrom=function(t,e,i,n,r,o,s,a){return i.immediateRender=0!=i.immediateRender,i.runBackwards=!0,this.staggerTo(t,e,i,n,r,o,s,a)},g.staggerFromTo=function(t,e,i,n,r,o,s,a,l){return n.startAt=i,n.immediateRender=0!=n.immediateRender&&0!=i.immediateRender,this.staggerTo(t,e,n,r,o,s,a,l)},g.call=function(t,e,n,r){return this.add(i.delayedCall(0,t,e,n),r)},g.set=function(t,e,n){return n=this._parseTimeOrLabel(n,0,!0),null==e.immediateRender&&(e.immediateRender=n===this._time&&!this._paused),this.add(new i(t,0,e),n)},n.exportRoot=function(t,e){t=t||{},null==t.smoothChildTiming&&(t.smoothChildTiming=!0);var r,o,s=new n(t),a=s._timeline;for(null==e&&(e=!0),a._remove(s,!0),s._startTime=0,s._rawPrevTime=s._time=s._totalTime=a._time,r=a._first;r;)o=r._next,e&&r instanceof i&&r.target===r.vars.onComplete||s.add(r,r._startTime-r._delay),r=o;return a.add(s,0),s},g.add=function(r,o,s,l){var u,c,h,d,f,p;if("number"!=typeof o&&(o=this._parseTimeOrLabel(o,0,!0,r)),!(r instanceof t)){if(r instanceof Array||r&&r.push&&a(r)){for(s=s||"normal",l=l||0,u=o,c=r.length,h=0;c>h;h++)a(d=r[h])&&(d=new n({tweens:d})),this.add(d,u),"string"!=typeof d&&"function"!=typeof d&&("sequence"===s?u=d._startTime+d.totalDuration()/d._timeScale:"start"===s&&(d._startTime-=d.delay())),u+=l;return this._uncache(!0)}if("string"==typeof r)return this.addLabel(r,o);if("function"!=typeof r)throw"Cannot add "+r+" into the timeline; it is not a tween, timeline, function, or string.";r=i.delayedCall(0,r)}if(e.prototype.add.call(this,r,o),(this._gc||this._time===this._duration)&&!this._paused&&this._duration<this.duration())for(f=this,p=f.rawTime()>r._startTime;f._timeline;)p&&f._timeline.smoothChildTiming?f.totalTime(f._totalTime,!0):f._gc&&f._enabled(!0,!1),f=f._timeline;return this},g.remove=function(e){if(e instanceof t)return this._remove(e,!1);if(e instanceof Array||e&&e.push&&a(e)){for(var i=e.length;--i>-1;)this.remove(e[i]);return this}return"string"==typeof e?this.removeLabel(e):this.kill(null,e)},g._remove=function(t,i){e.prototype._remove.call(this,t,i);var n=this._last;return n?this._time>n._startTime+n._totalDuration/n._timeScale&&(this._time=this.duration(),this._totalTime=this._totalDuration):this._time=this._totalTime=this._duration=this._totalDuration=0,this},g.append=function(t,e){return this.add(t,this._parseTimeOrLabel(null,e,!0,t))},g.insert=g.insertMultiple=function(t,e,i,n){return this.add(t,e||0,i,n)},g.appendMultiple=function(t,e,i,n){return this.add(t,this._parseTimeOrLabel(null,e,!0,t),i,n)},g.addLabel=function(t,e){return this._labels[t]=this._parseTimeOrLabel(e),this},g.addPause=function(t,e,i,n){return this.call(f,["{self}",e,i,n],this,t)},g.removeLabel=function(t){return delete this._labels[t],this},g.getLabelTime=function(t){return null!=this._labels[t]?this._labels[t]:-1},g._parseTimeOrLabel=function(e,i,n,r){var o;if(r instanceof t&&r.timeline===this)this.remove(r);else if(r&&(r instanceof Array||r.push&&a(r)))for(o=r.length;--o>-1;)r[o]instanceof t&&r[o].timeline===this&&this.remove(r[o]);
if("string"==typeof i)return this._parseTimeOrLabel(i,n&&"number"==typeof e&&null==this._labels[i]?e-this.duration():0,n);if(i=i||0,"string"!=typeof e||!isNaN(e)&&null==this._labels[e])null==e&&(e=this.duration());else{if(o=e.indexOf("="),-1===o)return null==this._labels[e]?n?this._labels[e]=this.duration()+i:i:this._labels[e]+i;i=parseInt(e.charAt(o-1)+"1",10)*Number(e.substr(o+1)),e=o>1?this._parseTimeOrLabel(e.substr(0,o-1),0,n):this.duration()}return Number(e)+i},g.seek=function(t,e){return this.totalTime("number"==typeof t?t:this._parseTimeOrLabel(t),e!==!1)},g.stop=function(){return this.paused(!0)},g.gotoAndPlay=function(t,e){return this.play(t,e)},g.gotoAndStop=function(t,e){return this.pause(t,e)},g.render=function(t,e,i){this._gc&&this._enabled(!0,!1);var n,o,s,a,h,d=this._dirty?this.totalDuration():this._totalDuration,f=this._time,p=this._startTime,g=this._timeScale,m=this._paused;if(t>=d?(this._totalTime=this._time=d,this._reversed||this._hasPausedChild()||(o=!0,a="onComplete",0===this._duration&&(0===t||0>this._rawPrevTime||this._rawPrevTime===r)&&this._rawPrevTime!==t&&this._first&&(h=!0,this._rawPrevTime>r&&(a="onReverseComplete"))),this._rawPrevTime=this._duration||!e||t||this._rawPrevTime===t?t:r,t=d+1e-4):1e-7>t?(this._totalTime=this._time=0,(0!==f||0===this._duration&&this._rawPrevTime!==r&&(this._rawPrevTime>0||0>t&&this._rawPrevTime>=0))&&(a="onReverseComplete",o=this._reversed),0>t?(this._active=!1,this._rawPrevTime>=0&&this._first&&(h=!0),this._rawPrevTime=t):(this._rawPrevTime=this._duration||!e||t||this._rawPrevTime===t?t:r,t=0,this._initted||(h=!0))):this._totalTime=this._time=this._rawPrevTime=t,this._time!==f&&this._first||i||h){if(this._initted||(this._initted=!0),this._active||!this._paused&&this._time!==f&&t>0&&(this._active=!0),0===f&&this.vars.onStart&&0!==this._time&&(e||this.vars.onStart.apply(this.vars.onStartScope||this,this.vars.onStartParams||c)),this._time>=f)for(n=this._first;n&&(s=n._next,!this._paused||m);)(n._active||n._startTime<=this._time&&!n._paused&&!n._gc)&&(n._reversed?n.render((n._dirty?n.totalDuration():n._totalDuration)-(t-n._startTime)*n._timeScale,e,i):n.render((t-n._startTime)*n._timeScale,e,i)),n=s;else for(n=this._last;n&&(s=n._prev,!this._paused||m);)(n._active||f>=n._startTime&&!n._paused&&!n._gc)&&(n._reversed?n.render((n._dirty?n.totalDuration():n._totalDuration)-(t-n._startTime)*n._timeScale,e,i):n.render((t-n._startTime)*n._timeScale,e,i)),n=s;this._onUpdate&&(e||(l.length&&u(),this._onUpdate.apply(this.vars.onUpdateScope||this,this.vars.onUpdateParams||c))),a&&(this._gc||(p===this._startTime||g!==this._timeScale)&&(0===this._time||d>=this.totalDuration())&&(o&&(l.length&&u(),this._timeline.autoRemoveChildren&&this._enabled(!1,!1),this._active=!1),!e&&this.vars[a]&&this.vars[a].apply(this.vars[a+"Scope"]||this,this.vars[a+"Params"]||c)))}},g._hasPausedChild=function(){for(var t=this._first;t;){if(t._paused||t instanceof n&&t._hasPausedChild())return!0;t=t._next}return!1},g.getChildren=function(t,e,n,r){r=r||-9999999999;for(var o=[],s=this._first,a=0;s;)r>s._startTime||(s instanceof i?e!==!1&&(o[a++]=s):(n!==!1&&(o[a++]=s),t!==!1&&(o=o.concat(s.getChildren(!0,e,n)),a=o.length))),s=s._next;return o},g.getTweensOf=function(t,e){var n,r,o=this._gc,s=[],a=0;for(o&&this._enabled(!0,!0),n=i.getTweensOf(t),r=n.length;--r>-1;)(n[r].timeline===this||e&&this._contains(n[r]))&&(s[a++]=n[r]);return o&&this._enabled(!1,!0),s},g.recent=function(){return this._recent},g._contains=function(t){for(var e=t.timeline;e;){if(e===this)return!0;e=e.timeline}return!1},g.shiftChildren=function(t,e,i){i=i||0;for(var n,r=this._first,o=this._labels;r;)r._startTime>=i&&(r._startTime+=t),r=r._next;if(e)for(n in o)o[n]>=i&&(o[n]+=t);return this._uncache(!0)},g._kill=function(t,e){if(!t&&!e)return this._enabled(!1,!1);for(var i=e?this.getTweensOf(e):this.getChildren(!0,!0,!1),n=i.length,r=!1;--n>-1;)i[n]._kill(t,e)&&(r=!0);return r},g.clear=function(t){var e=this.getChildren(!1,!0,!0),i=e.length;for(this._time=this._totalTime=0;--i>-1;)e[i]._enabled(!1,!1);return t!==!1&&(this._labels={}),this._uncache(!0)},g.invalidate=function(){for(var e=this._first;e;)e.invalidate(),e=e._next;return t.prototype.invalidate.call(this)},g._enabled=function(t,i){if(t===this._gc)for(var n=this._first;n;)n._enabled(t,!0),n=n._next;return e.prototype._enabled.call(this,t,i)},g.totalTime=function(){this._forcingPlayhead=!0;var e=t.prototype.totalTime.apply(this,arguments);return this._forcingPlayhead=!1,e},g.duration=function(t){return arguments.length?(0!==this.duration()&&0!==t&&this.timeScale(this._duration/t),this):(this._dirty&&this.totalDuration(),this._duration)},g.totalDuration=function(t){if(!arguments.length){if(this._dirty){for(var e,i,n=0,r=this._last,o=999999999999;r;)e=r._prev,r._dirty&&r.totalDuration(),r._startTime>o&&this._sortChildren&&!r._paused?this.add(r,r._startTime-r._delay):o=r._startTime,0>r._startTime&&!r._paused&&(n-=r._startTime,this._timeline.smoothChildTiming&&(this._startTime+=r._startTime/this._timeScale),this.shiftChildren(-r._startTime,!1,-9999999999),o=0),i=r._startTime+r._totalDuration/r._timeScale,i>n&&(n=i),r=e;this._duration=this._totalDuration=n,this._dirty=!1}return this._totalDuration}return 0!==this.totalDuration()&&0!==t&&this.timeScale(this._totalDuration/t),this},g.usesFrames=function(){for(var e=this._timeline;e._timeline;)e=e._timeline;return e===t._rootFramesTimeline},g.rawTime=function(){return this._paused?this._totalTime:(this._timeline.rawTime()-this._startTime)*this._timeScale},n},!0)}),_gsScope._gsDefine&&_gsScope._gsQueue.pop()(),function(t){"use strict";var e=function(){return(_gsScope.GreenSockGlobals||_gsScope)[t]};"function"==typeof define&&define.amd?define(["TweenLite"],e):"undefined"!=typeof module&&module.exports&&(require("./TweenLite.js"),module.exports=e())}("TimelineMax");var _gsScope="undefined"!=typeof module&&module.exports&&"undefined"!=typeof global?global:this||window;(_gsScope._gsQueue||(_gsScope._gsQueue=[])).push(function(){"use strict";_gsScope._gsDefine("plugins.CSSPlugin",["plugins.TweenPlugin","TweenLite"],function(t,e){var i,n,r,o,s=function(){t.call(this,"css"),this._overwriteProps.length=0,this.setRatio=s.prototype.setRatio},a={},l=s.prototype=new t("css");l.constructor=s,s.version="1.14.2",s.API=2,s.defaultTransformPerspective=0,s.defaultSkewType="compensated",l="px",s.suffixMap={top:l,right:l,bottom:l,left:l,width:l,height:l,fontSize:l,padding:l,margin:l,perspective:l,lineHeight:""};var u,c,h,d,f,p,g=/(?:\d|\-\d|\.\d|\-\.\d)+/g,m=/(?:\d|\-\d|\.\d|\-\.\d|\+=\d|\-=\d|\+=.\d|\-=\.\d)+/g,_=/(?:\+=|\-=|\-|\b)[\d\-\.]+[a-zA-Z0-9]*(?:%|\b)/gi,v=/(?![+-]?\d*\.?\d+|e[+-]\d+)[^0-9]/g,y=/(?:\d|\-|\+|=|#|\.)*/g,x=/opacity *= *([^)]*)/i,b=/opacity:([^;]*)/i,w=/alpha\(opacity *=.+?\)/i,T=/^(rgb|hsl)/,k=/([A-Z])/g,S=/-([a-z])/gi,C=/(^(?:url\(\"|url\())|(?:(\"\))$|\)$)/gi,P=function(t,e){return e.toUpperCase()},A=/(?:Left|Right|Width)/i,O=/(M11|M12|M21|M22)=[\d\-\.e]+/gi,D=/progid\:DXImageTransform\.Microsoft\.Matrix\(.+?\)/i,M=/,(?=[^\)]*(?:\(|$))/gi,N=Math.PI/180,R=180/Math.PI,E={},L=document,j=L.createElement("div"),F=L.createElement("img"),I=s._internals={_specialProps:a},z=navigator.userAgent,X=function(){var t,e=z.indexOf("Android"),i=L.createElement("div");return h=-1!==z.indexOf("Safari")&&-1===z.indexOf("Chrome")&&(-1===e||Number(z.substr(e+8,1))>3),f=h&&6>Number(z.substr(z.indexOf("Version/")+8,1)),d=-1!==z.indexOf("Firefox"),(/MSIE ([0-9]{1,}[\.0-9]{0,})/.exec(z)||/Trident\/.*rv:([0-9]{1,}[\.0-9]{0,})/.exec(z))&&(p=parseFloat(RegExp.$1)),i.innerHTML="<a style='top:1px;opacity:.55;'>a</a>",t=i.getElementsByTagName("a")[0],t?/^0.55/.test(t.style.opacity):!1}(),B=function(t){return x.test("string"==typeof t?t:(t.currentStyle?t.currentStyle.filter:t.style.filter)||"")?parseFloat(RegExp.$1)/100:1},H=function(t){window.console&&console.log(t)},Y="",q="",W=function(t,e){e=e||j;var i,n,r=e.style;if(void 0!==r[t])return t;for(t=t.charAt(0).toUpperCase()+t.substr(1),i=["O","Moz","ms","Ms","Webkit"],n=5;--n>-1&&void 0===r[i[n]+t];);return n>=0?(q=3===n?"ms":i[n],Y="-"+q.toLowerCase()+"-",q+t):null},Q=L.defaultView?L.defaultView.getComputedStyle:function(){},U=s.getStyle=function(t,e,i,n,r){var o;return X||"opacity"!==e?(!n&&t.style[e]?o=t.style[e]:(i=i||Q(t))?o=i[e]||i.getPropertyValue(e)||i.getPropertyValue(e.replace(k,"-$1").toLowerCase()):t.currentStyle&&(o=t.currentStyle[e]),null==r||o&&"none"!==o&&"auto"!==o&&"auto auto"!==o?o:r):B(t)},$=I.convertToPixels=function(t,i,n,r,o){if("px"===r||!r)return n;if("auto"===r||!n)return 0;var a,l,u,c=A.test(i),h=t,d=j.style,f=0>n;if(f&&(n=-n),"%"===r&&-1!==i.indexOf("border"))a=n/100*(c?t.clientWidth:t.clientHeight);else{if(d.cssText="border:0 solid red;position:"+U(t,"position")+";line-height:0;","%"!==r&&h.appendChild)d[c?"borderLeftWidth":"borderTopWidth"]=n+r;else{if(h=t.parentNode||L.body,l=h._gsCache,u=e.ticker.frame,l&&c&&l.time===u)return l.width*n/100;d[c?"width":"height"]=n+r}h.appendChild(j),a=parseFloat(j[c?"offsetWidth":"offsetHeight"]),h.removeChild(j),c&&"%"===r&&s.cacheWidths!==!1&&(l=h._gsCache=h._gsCache||{},l.time=u,l.width=100*(a/n)),0!==a||o||(a=$(t,i,n,r,!0))}return f?-a:a},V=I.calculateOffset=function(t,e,i){if("absolute"!==U(t,"position",i))return 0;var n="left"===e?"Left":"Top",r=U(t,"margin"+n,i);return t["offset"+n]-($(t,e,parseFloat(r),r.replace(y,""))||0)},G=function(t,e){var i,n,r={};if(e=e||Q(t,null))if(i=e.length)for(;--i>-1;)r[e[i].replace(S,P)]=e.getPropertyValue(e[i]);else for(i in e)r[i]=e[i];else if(e=t.currentStyle||t.style)for(i in e)"string"==typeof i&&void 0===r[i]&&(r[i.replace(S,P)]=e[i]);return X||(r.opacity=B(t)),n=De(t,e,!1),r.rotation=n.rotation,r.skewX=n.skewX,r.scaleX=n.scaleX,r.scaleY=n.scaleY,r.x=n.x,r.y=n.y,Te&&(r.z=n.z,r.rotationX=n.rotationX,r.rotationY=n.rotationY,r.scaleZ=n.scaleZ),r.filters&&delete r.filters,r},Z=function(t,e,i,n,r){var o,s,a,l={},u=t.style;for(s in i)"cssText"!==s&&"length"!==s&&isNaN(s)&&(e[s]!==(o=i[s])||r&&r[s])&&-1===s.indexOf("Origin")&&("number"==typeof o||"string"==typeof o)&&(l[s]="auto"!==o||"left"!==s&&"top"!==s?""!==o&&"auto"!==o&&"none"!==o||"string"!=typeof e[s]||""===e[s].replace(v,"")?o:0:V(t,s),void 0!==u[s]&&(a=new he(u,s,u[s],a)));if(n)for(s in n)"className"!==s&&(l[s]=n[s]);return{difs:l,firstMPT:a}},J={width:["Left","Right"],height:["Top","Bottom"]},K=["marginLeft","marginRight","marginTop","marginBottom"],te=function(t,e,i){var n=parseFloat("width"===e?t.offsetWidth:t.offsetHeight),r=J[e],o=r.length;for(i=i||Q(t,null);--o>-1;)n-=parseFloat(U(t,"padding"+r[o],i,!0))||0,n-=parseFloat(U(t,"border"+r[o]+"Width",i,!0))||0;return n},ee=function(t,e){(null==t||""===t||"auto"===t||"auto auto"===t)&&(t="0 0");var i=t.split(" "),n=-1!==t.indexOf("left")?"0%":-1!==t.indexOf("right")?"100%":i[0],r=-1!==t.indexOf("top")?"0%":-1!==t.indexOf("bottom")?"100%":i[1];return null==r?r="0":"center"===r&&(r="50%"),("center"===n||isNaN(parseFloat(n))&&-1===(n+"").indexOf("="))&&(n="50%"),e&&(e.oxp=-1!==n.indexOf("%"),e.oyp=-1!==r.indexOf("%"),e.oxr="="===n.charAt(1),e.oyr="="===r.charAt(1),e.ox=parseFloat(n.replace(v,"")),e.oy=parseFloat(r.replace(v,""))),n+" "+r+(i.length>2?" "+i[2]:"")},ie=function(t,e){return"string"==typeof t&&"="===t.charAt(1)?parseInt(t.charAt(0)+"1",10)*parseFloat(t.substr(2)):parseFloat(t)-parseFloat(e)},ne=function(t,e){return null==t?e:"string"==typeof t&&"="===t.charAt(1)?parseInt(t.charAt(0)+"1",10)*parseFloat(t.substr(2))+e:parseFloat(t)},re=function(t,e,i,n){var r,o,s,a,l=1e-6;return null==t?a=e:"number"==typeof t?a=t:(r=360,o=t.split("_"),s=Number(o[0].replace(v,""))*(-1===t.indexOf("rad")?1:R)-("="===t.charAt(1)?0:e),o.length&&(n&&(n[i]=e+s),-1!==t.indexOf("short")&&(s%=r,s!==s%(r/2)&&(s=0>s?s+r:s-r)),-1!==t.indexOf("_cw")&&0>s?s=(s+9999999999*r)%r-(0|s/r)*r:-1!==t.indexOf("ccw")&&s>0&&(s=(s-9999999999*r)%r-(0|s/r)*r)),a=e+s),l>a&&a>-l&&(a=0),a},oe={aqua:[0,255,255],lime:[0,255,0],silver:[192,192,192],black:[0,0,0],maroon:[128,0,0],teal:[0,128,128],blue:[0,0,255],navy:[0,0,128],white:[255,255,255],fuchsia:[255,0,255],olive:[128,128,0],yellow:[255,255,0],orange:[255,165,0],gray:[128,128,128],purple:[128,0,128],green:[0,128,0],red:[255,0,0],pink:[255,192,203],cyan:[0,255,255],transparent:[255,255,255,0]},se=function(t,e,i){return t=0>t?t+1:t>1?t-1:t,0|255*(1>6*t?e+6*(i-e)*t:.5>t?i:2>3*t?e+6*(i-e)*(2/3-t):e)+.5},ae=s.parseColor=function(t){var e,i,n,r,o,s;return t&&""!==t?"number"==typeof t?[t>>16,255&t>>8,255&t]:(","===t.charAt(t.length-1)&&(t=t.substr(0,t.length-1)),oe[t]?oe[t]:"#"===t.charAt(0)?(4===t.length&&(e=t.charAt(1),i=t.charAt(2),n=t.charAt(3),t="#"+e+e+i+i+n+n),t=parseInt(t.substr(1),16),[t>>16,255&t>>8,255&t]):"hsl"===t.substr(0,3)?(t=t.match(g),r=Number(t[0])%360/360,o=Number(t[1])/100,s=Number(t[2])/100,i=.5>=s?s*(o+1):s+o-s*o,e=2*s-i,t.length>3&&(t[3]=Number(t[3])),t[0]=se(r+1/3,e,i),t[1]=se(r,e,i),t[2]=se(r-1/3,e,i),t):(t=t.match(g)||oe.transparent,t[0]=Number(t[0]),t[1]=Number(t[1]),t[2]=Number(t[2]),t.length>3&&(t[3]=Number(t[3])),t)):oe.black},le="(?:\\b(?:(?:rgb|rgba|hsl|hsla)\\(.+?\\))|\\B#.+?\\b";for(l in oe)le+="|"+l+"\\b";le=RegExp(le+")","gi");var ue=function(t,e,i,n){if(null==t)return function(t){return t};var r,o=e?(t.match(le)||[""])[0]:"",s=t.split(o).join("").match(_)||[],a=t.substr(0,t.indexOf(s[0])),l=")"===t.charAt(t.length-1)?")":"",u=-1!==t.indexOf(" ")?" ":",",c=s.length,h=c>0?s[0].replace(g,""):"";return c?r=e?function(t){var e,d,f,p;if("number"==typeof t)t+=h;else if(n&&M.test(t)){for(p=t.replace(M,"|").split("|"),f=0;p.length>f;f++)p[f]=r(p[f]);return p.join(",")}if(e=(t.match(le)||[o])[0],d=t.split(e).join("").match(_)||[],f=d.length,c>f--)for(;c>++f;)d[f]=i?d[0|(f-1)/2]:s[f];return a+d.join(u)+u+e+l+(-1!==t.indexOf("inset")?" inset":"")}:function(t){var e,o,d;if("number"==typeof t)t+=h;else if(n&&M.test(t)){for(o=t.replace(M,"|").split("|"),d=0;o.length>d;d++)o[d]=r(o[d]);return o.join(",")}if(e=t.match(_)||[],d=e.length,c>d--)for(;c>++d;)e[d]=i?e[0|(d-1)/2]:s[d];return a+e.join(u)+l}:function(t){return t}},ce=function(t){return t=t.split(","),function(e,i,n,r,o,s,a){var l,u=(i+"").split(" ");for(a={},l=0;4>l;l++)a[t[l]]=u[l]=u[l]||u[(l-1)/2>>0];return r.parse(e,a,o,s)}},he=(I._setPluginRatio=function(t){this.plugin.setRatio(t);for(var e,i,n,r,o=this.data,s=o.proxy,a=o.firstMPT,l=1e-6;a;)e=s[a.v],a.r?e=Math.round(e):l>e&&e>-l&&(e=0),a.t[a.p]=e,a=a._next;if(o.autoRotate&&(o.autoRotate.rotation=s.rotation),1===t)for(a=o.firstMPT;a;){if(i=a.t,i.type){if(1===i.type){for(r=i.xs0+i.s+i.xs1,n=1;i.l>n;n++)r+=i["xn"+n]+i["xs"+(n+1)];i.e=r}}else i.e=i.s+i.xs0;a=a._next}},function(t,e,i,n,r){this.t=t,this.p=e,this.v=i,this.r=r,n&&(n._prev=this,this._next=n)}),de=(I._parseToProxy=function(t,e,i,n,r,o){var s,a,l,u,c,h=n,d={},f={},p=i._transform,g=E;for(i._transform=null,E=e,n=c=i.parse(t,e,n,r),E=g,o&&(i._transform=p,h&&(h._prev=null,h._prev&&(h._prev._next=null)));n&&n!==h;){if(1>=n.type&&(a=n.p,f[a]=n.s+n.c,d[a]=n.s,o||(u=new he(n,"s",a,u,n.r),n.c=0),1===n.type))for(s=n.l;--s>0;)l="xn"+s,a=n.p+"_"+l,f[a]=n.data[l],d[a]=n[l],o||(u=new he(n,l,a,u,n.rxp[l]));n=n._next}return{proxy:d,end:f,firstMPT:u,pt:c}},I.CSSPropTween=function(t,e,n,r,s,a,l,u,c,h,d){this.t=t,this.p=e,this.s=n,this.c=r,this.n=l||e,t instanceof de||o.push(this.n),this.r=u,this.type=a||0,c&&(this.pr=c,i=!0),this.b=void 0===h?n:h,this.e=void 0===d?n+r:d,s&&(this._next=s,s._prev=this)}),fe=s.parseComplex=function(t,e,i,n,r,o,s,a,l,c){i=i||o||"",s=new de(t,e,0,0,s,c?2:1,null,!1,a,i,n),n+="";var h,d,f,p,_,v,y,x,b,w,k,S,C=i.split(", ").join(",").split(" "),P=n.split(", ").join(",").split(" "),A=C.length,O=u!==!1;for((-1!==n.indexOf(",")||-1!==i.indexOf(","))&&(C=C.join(" ").replace(M,", ").split(" "),P=P.join(" ").replace(M,", ").split(" "),A=C.length),A!==P.length&&(C=(o||"").split(" "),A=C.length),s.plugin=l,s.setRatio=c,h=0;A>h;h++)if(p=C[h],_=P[h],x=parseFloat(p),x||0===x)s.appendXtra("",x,ie(_,x),_.replace(m,""),O&&-1!==_.indexOf("px"),!0);else if(r&&("#"===p.charAt(0)||oe[p]||T.test(p)))S=","===_.charAt(_.length-1)?"),":")",p=ae(p),_=ae(_),b=p.length+_.length>6,b&&!X&&0===_[3]?(s["xs"+s.l]+=s.l?" transparent":"transparent",s.e=s.e.split(P[h]).join("transparent")):(X||(b=!1),s.appendXtra(b?"rgba(":"rgb(",p[0],_[0]-p[0],",",!0,!0).appendXtra("",p[1],_[1]-p[1],",",!0).appendXtra("",p[2],_[2]-p[2],b?",":S,!0),b&&(p=4>p.length?1:p[3],s.appendXtra("",p,(4>_.length?1:_[3])-p,S,!1)));else if(v=p.match(g)){if(y=_.match(m),!y||y.length!==v.length)return s;for(f=0,d=0;v.length>d;d++)k=v[d],w=p.indexOf(k,f),s.appendXtra(p.substr(f,w-f),Number(k),ie(y[d],k),"",O&&"px"===p.substr(w+k.length,2),0===d),f=w+k.length;s["xs"+s.l]+=p.substr(f)}else s["xs"+s.l]+=s.l?" "+p:p;if(-1!==n.indexOf("=")&&s.data){for(S=s.xs0+s.data.s,h=1;s.l>h;h++)S+=s["xs"+h]+s.data["xn"+h];s.e=S+s["xs"+h]}return s.l||(s.type=-1,s.xs0=s.e),s.xfirst||s},pe=9;for(l=de.prototype,l.l=l.pr=0;--pe>0;)l["xn"+pe]=0,l["xs"+pe]="";l.xs0="",l._next=l._prev=l.xfirst=l.data=l.plugin=l.setRatio=l.rxp=null,l.appendXtra=function(t,e,i,n,r,o){var s=this,a=s.l;return s["xs"+a]+=o&&a?" "+t:t||"",i||0===a||s.plugin?(s.l++,s.type=s.setRatio?2:1,s["xs"+s.l]=n||"",a>0?(s.data["xn"+a]=e+i,s.rxp["xn"+a]=r,s["xn"+a]=e,s.plugin||(s.xfirst=new de(s,"xn"+a,e,i,s.xfirst||s,0,s.n,r,s.pr),s.xfirst.xs0=0),s):(s.data={s:e+i},s.rxp={},s.s=e,s.c=i,s.r=r,s)):(s["xs"+a]+=e+(n||""),s)};var ge=function(t,e){e=e||{},this.p=e.prefix?W(t)||t:t,a[t]=a[this.p]=this,this.format=e.formatter||ue(e.defaultValue,e.color,e.collapsible,e.multi),e.parser&&(this.parse=e.parser),this.clrs=e.color,this.multi=e.multi,this.keyword=e.keyword,this.dflt=e.defaultValue,this.pr=e.priority||0},me=I._registerComplexSpecialProp=function(t,e,i){"object"!=typeof e&&(e={parser:i});var n,r,o=t.split(","),s=e.defaultValue;for(i=i||[s],n=0;o.length>n;n++)e.prefix=0===n&&e.prefix,e.defaultValue=i[n]||s,r=new ge(o[n],e)},_e=function(t){if(!a[t]){var e=t.charAt(0).toUpperCase()+t.substr(1)+"Plugin";me(t,{parser:function(t,i,n,r,o,s,l){var u=(_gsScope.GreenSockGlobals||_gsScope).com.greensock.plugins[e];return u?(u._cssRegister(),a[n].parse(t,i,n,r,o,s,l)):(H("Error: "+e+" js file not loaded."),o)}})}};l=ge.prototype,l.parseComplex=function(t,e,i,n,r,o){var s,a,l,u,c,h,d=this.keyword;if(this.multi&&(M.test(i)||M.test(e)?(a=e.replace(M,"|").split("|"),l=i.replace(M,"|").split("|")):d&&(a=[e],l=[i])),l){for(u=l.length>a.length?l.length:a.length,s=0;u>s;s++)e=a[s]=a[s]||this.dflt,i=l[s]=l[s]||this.dflt,d&&(c=e.indexOf(d),h=i.indexOf(d),c!==h&&(i=-1===h?l:a,i[s]+=" "+d));e=a.join(", "),i=l.join(", ")}return fe(t,this.p,e,i,this.clrs,this.dflt,n,this.pr,r,o)},l.parse=function(t,e,i,n,o,s){return this.parseComplex(t.style,this.format(U(t,this.p,r,!1,this.dflt)),this.format(e),o,s)},s.registerSpecialProp=function(t,e,i){me(t,{parser:function(t,n,r,o,s,a){var l=new de(t,r,0,0,s,2,r,!1,i);return l.plugin=a,l.setRatio=e(t,n,o._tween,r),l},priority:i})};var ve,ye="scaleX,scaleY,scaleZ,x,y,z,skewX,skewY,rotation,rotationX,rotationY,perspective,xPercent,yPercent".split(","),xe=W("transform"),be=Y+"transform",we=W("transformOrigin"),Te=null!==W("perspective"),ke=I.Transform=function(){this.skewY=0},Se=window.SVGElement,Ce=function(t,e,i){var n,r=L.createElementNS("http://www.w3.org/2000/svg",t),o=/([a-z])([A-Z])/g;for(n in i)r.setAttributeNS(null,n.replace(o,"$1-$2").toLowerCase(),i[n]);return e.appendChild(r),r},Pe=document.documentElement,Ae=function(){var t,e,i,n=p||/Android/i.test(z)&&!window.chrome;return L.createElementNS&&!n&&(t=Ce("svg",Pe),e=Ce("rect",t,{width:100,height:50,x:100}),i=e.getBoundingClientRect().left,e.style[we]="50% 50%",e.style[xe]="scale(0.5,0.5)",n=i===e.getBoundingClientRect().left,Pe.removeChild(t)),n}(),Oe=function(t,e,i){var n=t.getBBox();e=ee(e).split(" "),i.xOrigin=(-1!==e[0].indexOf("%")?parseFloat(e[0])/100*n.width:parseFloat(e[0]))+n.x,i.yOrigin=(-1!==e[1].indexOf("%")?parseFloat(e[1])/100*n.height:parseFloat(e[1]))+n.y},De=I.getTransform=function(t,e,i,n){if(t._gsTransform&&i&&!n)return t._gsTransform;var o,a,l,u,c,h,d,f,p,g,m,_,v,y=i?t._gsTransform||new ke:new ke,x=0>y.scaleX,b=2e-5,w=1e5,T=179.99,k=T*N,S=Te?parseFloat(U(t,we,e,!1,"0 0 0").split(" ")[2])||y.zOrigin||0:0,C=parseFloat(s.defaultTransformPerspective)||0;if(xe?o=U(t,be,e,!0):t.currentStyle&&(o=t.currentStyle.filter.match(O),o=o&&4===o.length?[o[0].substr(4),Number(o[2].substr(4)),Number(o[1].substr(4)),o[3].substr(4),y.x||0,y.y||0].join(","):""),o&&"none"!==o&&"matrix(1, 0, 0, 1, 0, 0)"!==o){for(a=(o||"").match(/(?:\-|\b)[\d\-\.e]+\b/gi)||[],l=a.length;--l>-1;)u=Number(a[l]),a[l]=(c=u-(u|=0))?(0|c*w+(0>c?-.5:.5))/w+u:u;if(16===a.length){var P=a[8],A=a[9],D=a[10],M=a[12],E=a[13],L=a[14];if(y.zOrigin&&(L=-y.zOrigin,M=P*L-a[12],E=A*L-a[13],L=D*L+y.zOrigin-a[14]),!i||n||null==y.rotationX){var j,F,I,z,X,B,H,Y=a[0],q=a[1],W=a[2],Q=a[3],$=a[4],V=a[5],G=a[6],Z=a[7],J=a[11],K=Math.atan2(G,D),te=-k>K||K>k;y.rotationX=K*R,K&&(z=Math.cos(-K),X=Math.sin(-K),j=$*z+P*X,F=V*z+A*X,I=G*z+D*X,P=$*-X+P*z,A=V*-X+A*z,D=G*-X+D*z,J=Z*-X+J*z,$=j,V=F,G=I),K=Math.atan2(P,Y),y.rotationY=K*R,K&&(B=-k>K||K>k,z=Math.cos(-K),X=Math.sin(-K),j=Y*z-P*X,F=q*z-A*X,I=W*z-D*X,A=q*X+A*z,D=W*X+D*z,J=Q*X+J*z,Y=j,q=F,W=I),K=Math.atan2(q,V),y.rotation=K*R,K&&(H=-k>K||K>k,z=Math.cos(-K),X=Math.sin(-K),Y=Y*z+$*X,F=q*z+V*X,V=q*-X+V*z,G=W*-X+G*z,q=F),H&&te?y.rotation=y.rotationX=0:H&&B?y.rotation=y.rotationY=0:B&&te&&(y.rotationY=y.rotationX=0),y.scaleX=(0|Math.sqrt(Y*Y+q*q)*w+.5)/w,y.scaleY=(0|Math.sqrt(V*V+A*A)*w+.5)/w,y.scaleZ=(0|Math.sqrt(G*G+D*D)*w+.5)/w,y.skewX=0,y.perspective=J?1/(0>J?-J:J):0,y.x=M,y.y=E,y.z=L}}else if(!(Te&&!n&&a.length&&y.x===a[4]&&y.y===a[5]&&(y.rotationX||y.rotationY)||void 0!==y.x&&"none"===U(t,"display",e))){var ee=a.length>=6,ie=ee?a[0]:1,ne=a[1]||0,re=a[2]||0,oe=ee?a[3]:1;y.x=a[4]||0,y.y=a[5]||0,h=Math.sqrt(ie*ie+ne*ne),d=Math.sqrt(oe*oe+re*re),f=ie||ne?Math.atan2(ne,ie)*R:y.rotation||0,p=re||oe?Math.atan2(re,oe)*R+f:y.skewX||0,g=h-Math.abs(y.scaleX||0),m=d-Math.abs(y.scaleY||0),Math.abs(p)>90&&270>Math.abs(p)&&(x?(h*=-1,p+=0>=f?180:-180,f+=0>=f?180:-180):(d*=-1,p+=0>=p?180:-180)),_=(f-y.rotation)%180,v=(p-y.skewX)%180,(void 0===y.skewX||g>b||-b>g||m>b||-b>m||_>-T&&T>_&&!1|_*w||v>-T&&T>v&&!1|v*w)&&(y.scaleX=h,y.scaleY=d,y.rotation=f,y.skewX=p),Te&&(y.rotationX=y.rotationY=y.z=0,y.perspective=C,y.scaleZ=1)}y.zOrigin=S;for(l in y)b>y[l]&&y[l]>-b&&(y[l]=0)}else y={x:0,y:0,z:0,scaleX:1,scaleY:1,scaleZ:1,skewX:0,skewY:0,perspective:C,rotation:0,rotationX:0,rotationY:0,zOrigin:0};return i&&(t._gsTransform=y),y.svg=Se&&t instanceof Se&&t.parentNode instanceof Se,y.svg&&(Oe(t,U(t,we,r,!1,"50% 50%")+"",y),ve=s.useSVGTransformAttr||Ae),y.xPercent=y.yPercent=0,y},Me=function(t){var e,i,n=this.data,r=-n.rotation*N,o=r+n.skewX*N,s=1e5,a=(0|Math.cos(r)*n.scaleX*s)/s,l=(0|Math.sin(r)*n.scaleX*s)/s,u=(0|Math.sin(o)*-n.scaleY*s)/s,c=(0|Math.cos(o)*n.scaleY*s)/s,h=this.t.style,d=this.t.currentStyle;if(d){i=l,l=-u,u=-i,e=d.filter,h.filter="";var f,g,m=this.t.offsetWidth,_=this.t.offsetHeight,v="absolute"!==d.position,b="progid:DXImageTransform.Microsoft.Matrix(M11="+a+", M12="+l+", M21="+u+", M22="+c,w=n.x+m*n.xPercent/100,T=n.y+_*n.yPercent/100;if(null!=n.ox&&(f=(n.oxp?.01*m*n.ox:n.ox)-m/2,g=(n.oyp?.01*_*n.oy:n.oy)-_/2,w+=f-(f*a+g*l),T+=g-(f*u+g*c)),v?(f=m/2,g=_/2,b+=", Dx="+(f-(f*a+g*l)+w)+", Dy="+(g-(f*u+g*c)+T)+")"):b+=", sizingMethod='auto expand')",h.filter=-1!==e.indexOf("DXImageTransform.Microsoft.Matrix(")?e.replace(D,b):b+" "+e,(0===t||1===t)&&1===a&&0===l&&0===u&&1===c&&(v&&-1===b.indexOf("Dx=0, Dy=0")||x.test(e)&&100!==parseFloat(RegExp.$1)||-1===e.indexOf("gradient("&&e.indexOf("Alpha"))&&h.removeAttribute("filter")),!v){var k,S,C,P=8>p?1:-1;for(f=n.ieOffsetX||0,g=n.ieOffsetY||0,n.ieOffsetX=Math.round((m-((0>a?-a:a)*m+(0>l?-l:l)*_))/2+w),n.ieOffsetY=Math.round((_-((0>c?-c:c)*_+(0>u?-u:u)*m))/2+T),pe=0;4>pe;pe++)S=K[pe],k=d[S],i=-1!==k.indexOf("px")?parseFloat(k):$(this.t,S,parseFloat(k),k.replace(y,""))||0,C=i!==n[S]?2>pe?-n.ieOffsetX:-n.ieOffsetY:2>pe?f-n.ieOffsetX:g-n.ieOffsetY,h[S]=(n[S]=Math.round(i-C*(0===pe||2===pe?1:P)))+"px"}}},Ne=I.set3DTransformRatio=function(t){var e,i,n,r,o,s,a,l,u,c,h,f,p,g,m,_,v,y,x,b,w,T,k,S=this.data,C=this.t.style,P=S.rotation*N,A=S.scaleX,O=S.scaleY,D=S.scaleZ,M=S.x,R=S.y,E=S.z,L=S.perspective;if(!(1!==t&&0!==t||"auto"!==S.force3D||S.rotationY||S.rotationX||1!==D||L||E))return void Re.call(this,t);if(d){var j=1e-4;j>A&&A>-j&&(A=D=2e-5),j>O&&O>-j&&(O=D=2e-5),!L||S.z||S.rotationX||S.rotationY||(L=0)}if(P||S.skewX)y=Math.cos(P),x=Math.sin(P),e=y,o=x,S.skewX&&(P-=S.skewX*N,y=Math.cos(P),x=Math.sin(P),"simple"===S.skewType&&(b=Math.tan(S.skewX*N),b=Math.sqrt(1+b*b),y*=b,x*=b)),i=-x,s=y;else{if(!(S.rotationY||S.rotationX||1!==D||L||S.svg))return void(C[xe]=(S.xPercent||S.yPercent?"translate("+S.xPercent+"%,"+S.yPercent+"%) translate3d(":"translate3d(")+M+"px,"+R+"px,"+E+"px)"+(1!==A||1!==O?" scale("+A+","+O+")":""));e=s=1,i=o=0}h=1,n=r=a=l=u=c=f=p=g=0,m=L?-1/L:0,_=S.zOrigin,v=1e5,P=S.rotationY*N,P&&(y=Math.cos(P),x=Math.sin(P),u=h*-x,p=m*-x,n=e*x,a=o*x,h*=y,m*=y,e*=y,o*=y),P=S.rotationX*N,P&&(y=Math.cos(P),x=Math.sin(P),b=i*y+n*x,w=s*y+a*x,T=c*y+h*x,k=g*y+m*x,n=i*-x+n*y,a=s*-x+a*y,h=c*-x+h*y,m=g*-x+m*y,i=b,s=w,c=T,g=k),1!==D&&(n*=D,a*=D,h*=D,m*=D),1!==O&&(i*=O,s*=O,c*=O,g*=O),1!==A&&(e*=A,o*=A,u*=A,p*=A),_&&(f-=_,r=n*f,l=a*f,f=h*f+_),S.svg&&(r+=S.xOrigin-(S.xOrigin*e+S.yOrigin*i),l+=S.yOrigin-(S.xOrigin*o+S.yOrigin*s)),r=(b=(r+=M)-(r|=0))?(0|b*v+(0>b?-.5:.5))/v+r:r,l=(b=(l+=R)-(l|=0))?(0|b*v+(0>b?-.5:.5))/v+l:l,f=(b=(f+=E)-(f|=0))?(0|b*v+(0>b?-.5:.5))/v+f:f,C[xe]=(S.xPercent||S.yPercent?"translate("+S.xPercent+"%,"+S.yPercent+"%) matrix3d(":"matrix3d(")+[(0|e*v)/v,(0|o*v)/v,(0|u*v)/v,(0|p*v)/v,(0|i*v)/v,(0|s*v)/v,(0|c*v)/v,(0|g*v)/v,(0|n*v)/v,(0|a*v)/v,(0|h*v)/v,(0|m*v)/v,r,l,f,L?1+-f/L:1].join(",")+")"},Re=I.set2DTransformRatio=function(t){var e,i,n,r,o,s,a,l,u,c,h,d=this.data,f=this.t,p=f.style,g=d.x,m=d.y;return!(d.rotationX||d.rotationY||d.z||d.force3D===!0||"auto"===d.force3D&&1!==t&&0!==t)||d.svg&&ve||!Te?(r=d.scaleX,o=d.scaleY,void(d.rotation||d.skewX||d.svg?(e=d.rotation*N,i=e-d.skewX*N,n=1e5,s=Math.cos(e)*r,a=Math.sin(e)*r,l=Math.sin(i)*-o,u=Math.cos(i)*o,d.svg&&(g+=d.xOrigin-(d.xOrigin*s+d.yOrigin*l),m+=d.yOrigin-(d.xOrigin*a+d.yOrigin*u),h=1e-6,h>g&&g>-h&&(g=0),h>m&&m>-h&&(m=0)),c=(0|s*n)/n+","+(0|a*n)/n+","+(0|l*n)/n+","+(0|u*n)/n+","+g+","+m+")",d.svg&&ve?f.setAttribute("transform","matrix("+c):p[xe]=(d.xPercent||d.yPercent?"translate("+d.xPercent+"%,"+d.yPercent+"%) matrix(":"matrix(")+c):p[xe]=(d.xPercent||d.yPercent?"translate("+d.xPercent+"%,"+d.yPercent+"%) matrix(":"matrix(")+r+",0,0,"+o+","+g+","+m+")")):(this.setRatio=Ne,void Ne.call(this,t))};me("transform,scale,scaleX,scaleY,scaleZ,x,y,z,rotation,rotationX,rotationY,rotationZ,skewX,skewY,shortRotation,shortRotationX,shortRotationY,shortRotationZ,transformOrigin,transformPerspective,directionalRotation,parseTransform,force3D,skewType,xPercent,yPercent",{parser:function(t,e,i,n,o,a,l){if(n._transform)return o;var u,c,h,d,f,p,g,m=n._transform=De(t,r,!0,l.parseTransform),_=t.style,v=1e-6,y=ye.length,x=l,b={};if("string"==typeof x.transform&&xe)h=j.style,h[xe]=x.transform,h.display="block",h.position="absolute",L.body.appendChild(j),u=De(j,null,!1),L.body.removeChild(j);else if("object"==typeof x){if(u={scaleX:ne(null!=x.scaleX?x.scaleX:x.scale,m.scaleX),scaleY:ne(null!=x.scaleY?x.scaleY:x.scale,m.scaleY),scaleZ:ne(x.scaleZ,m.scaleZ),x:ne(x.x,m.x),y:ne(x.y,m.y),z:ne(x.z,m.z),xPercent:ne(x.xPercent,m.xPercent),yPercent:ne(x.yPercent,m.yPercent),perspective:ne(x.transformPerspective,m.perspective)},g=x.directionalRotation,null!=g)if("object"==typeof g)for(h in g)x[h]=g[h];else x.rotation=g;"string"==typeof x.x&&-1!==x.x.indexOf("%")&&(u.x=0,u.xPercent=ne(x.x,m.xPercent)),"string"==typeof x.y&&-1!==x.y.indexOf("%")&&(u.y=0,u.yPercent=ne(x.y,m.yPercent)),u.rotation=re("rotation"in x?x.rotation:"shortRotation"in x?x.shortRotation+"_short":"rotationZ"in x?x.rotationZ:m.rotation,m.rotation,"rotation",b),Te&&(u.rotationX=re("rotationX"in x?x.rotationX:"shortRotationX"in x?x.shortRotationX+"_short":m.rotationX||0,m.rotationX,"rotationX",b),u.rotationY=re("rotationY"in x?x.rotationY:"shortRotationY"in x?x.shortRotationY+"_short":m.rotationY||0,m.rotationY,"rotationY",b)),u.skewX=null==x.skewX?m.skewX:re(x.skewX,m.skewX),u.skewY=null==x.skewY?m.skewY:re(x.skewY,m.skewY),(c=u.skewY-m.skewY)&&(u.skewX+=c,u.rotation+=c)}for(Te&&null!=x.force3D&&(m.force3D=x.force3D,p=!0),m.skewType=x.skewType||m.skewType||s.defaultSkewType,f=m.force3D||m.z||m.rotationX||m.rotationY||u.z||u.rotationX||u.rotationY||u.perspective,f||null==x.scale||(u.scaleZ=1);--y>-1;)i=ye[y],d=u[i]-m[i],(d>v||-v>d||null!=x[i]||null!=E[i])&&(p=!0,o=new de(m,i,m[i],d,o),i in b&&(o.e=b[i]),o.xs0=0,o.plugin=a,n._overwriteProps.push(o.n));return d=x.transformOrigin,d&&m.svg&&(Oe(t,d,u),o=new de(m,"xOrigin",m.xOrigin,u.xOrigin-m.xOrigin,o,-1,"transformOrigin"),o.b=m.xOrigin,o.e=o.xs0=u.xOrigin,o=new de(m,"yOrigin",m.yOrigin,u.yOrigin-m.yOrigin,o,-1,"transformOrigin"),o.b=m.yOrigin,o.e=o.xs0=u.yOrigin,d="0px 0px"),(d||Te&&f&&m.zOrigin)&&(xe?(p=!0,i=we,d=(d||U(t,i,r,!1,"50% 50%"))+"",o=new de(_,i,0,0,o,-1,"transformOrigin"),o.b=_[i],o.plugin=a,Te?(h=m.zOrigin,d=d.split(" "),m.zOrigin=(d.length>2&&(0===h||"0px"!==d[2])?parseFloat(d[2]):h)||0,o.xs0=o.e=d[0]+" "+(d[1]||"50%")+" 0px",o=new de(m,"zOrigin",0,0,o,-1,o.n),o.b=h,o.xs0=o.e=m.zOrigin):o.xs0=o.e=d):ee(d+"",m)),p&&(n._transformType=m.svg&&ve||!f&&3!==this._transformType?2:3),o},prefix:!0}),me("boxShadow",{defaultValue:"0px 0px 0px 0px #999",prefix:!0,color:!0,multi:!0,keyword:"inset"}),me("borderRadius",{defaultValue:"0px",parser:function(t,e,i,o,s){e=this.format(e);var a,l,u,c,h,d,f,p,g,m,_,v,y,x,b,w,T=["borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius"],k=t.style;for(g=parseFloat(t.offsetWidth),m=parseFloat(t.offsetHeight),a=e.split(" "),l=0;T.length>l;l++)this.p.indexOf("border")&&(T[l]=W(T[l])),h=c=U(t,T[l],r,!1,"0px"),-1!==h.indexOf(" ")&&(c=h.split(" "),h=c[0],c=c[1]),d=u=a[l],f=parseFloat(h),v=h.substr((f+"").length),y="="===d.charAt(1),y?(p=parseInt(d.charAt(0)+"1",10),d=d.substr(2),p*=parseFloat(d),_=d.substr((p+"").length-(0>p?1:0))||""):(p=parseFloat(d),_=d.substr((p+"").length)),""===_&&(_=n[i]||v),_!==v&&(x=$(t,"borderLeft",f,v),b=$(t,"borderTop",f,v),"%"===_?(h=100*(x/g)+"%",c=100*(b/m)+"%"):"em"===_?(w=$(t,"borderLeft",1,"em"),h=x/w+"em",c=b/w+"em"):(h=x+"px",c=b+"px"),y&&(d=parseFloat(h)+p+_,u=parseFloat(c)+p+_)),s=fe(k,T[l],h+" "+c,d+" "+u,!1,"0px",s);return s},prefix:!0,formatter:ue("0px 0px 0px 0px",!1,!0)}),me("backgroundPosition",{defaultValue:"0 0",parser:function(t,e,i,n,o,s){var a,l,u,c,h,d,f="background-position",g=r||Q(t,null),m=this.format((g?p?g.getPropertyValue(f+"-x")+" "+g.getPropertyValue(f+"-y"):g.getPropertyValue(f):t.currentStyle.backgroundPositionX+" "+t.currentStyle.backgroundPositionY)||"0 0"),_=this.format(e);if(-1!==m.indexOf("%")!=(-1!==_.indexOf("%"))&&(d=U(t,"backgroundImage").replace(C,""),d&&"none"!==d)){for(a=m.split(" "),l=_.split(" "),F.setAttribute("src",d),u=2;--u>-1;)m=a[u],c=-1!==m.indexOf("%"),c!==(-1!==l[u].indexOf("%"))&&(h=0===u?t.offsetWidth-F.width:t.offsetHeight-F.height,a[u]=c?parseFloat(m)/100*h+"px":100*(parseFloat(m)/h)+"%");m=a.join(" ")}return this.parseComplex(t.style,m,_,o,s)},formatter:ee}),me("backgroundSize",{defaultValue:"0 0",formatter:ee}),me("perspective",{defaultValue:"0px",prefix:!0}),me("perspectiveOrigin",{defaultValue:"50% 50%",prefix:!0}),me("transformStyle",{prefix:!0}),me("backfaceVisibility",{prefix:!0}),me("userSelect",{prefix:!0}),me("margin",{parser:ce("marginTop,marginRight,marginBottom,marginLeft")}),me("padding",{parser:ce("paddingTop,paddingRight,paddingBottom,paddingLeft")}),me("clip",{defaultValue:"rect(0px,0px,0px,0px)",parser:function(t,e,i,n,o,s){var a,l,u;return 9>p?(l=t.currentStyle,u=8>p?" ":",",a="rect("+l.clipTop+u+l.clipRight+u+l.clipBottom+u+l.clipLeft+")",e=this.format(e).split(",").join(u)):(a=this.format(U(t,this.p,r,!1,this.dflt)),e=this.format(e)),this.parseComplex(t.style,a,e,o,s)
}}),me("textShadow",{defaultValue:"0px 0px 0px #999",color:!0,multi:!0}),me("autoRound,strictUnits",{parser:function(t,e,i,n,r){return r}}),me("border",{defaultValue:"0px solid #000",parser:function(t,e,i,n,o,s){return this.parseComplex(t.style,this.format(U(t,"borderTopWidth",r,!1,"0px")+" "+U(t,"borderTopStyle",r,!1,"solid")+" "+U(t,"borderTopColor",r,!1,"#000")),this.format(e),o,s)},color:!0,formatter:function(t){var e=t.split(" ");return e[0]+" "+(e[1]||"solid")+" "+(t.match(le)||["#000"])[0]}}),me("borderWidth",{parser:ce("borderTopWidth,borderRightWidth,borderBottomWidth,borderLeftWidth")}),me("float,cssFloat,styleFloat",{parser:function(t,e,i,n,r){var o=t.style,s="cssFloat"in o?"cssFloat":"styleFloat";return new de(o,s,0,0,r,-1,i,!1,0,o[s],e)}});var Ee=function(t){var e,i=this.t,n=i.filter||U(this.data,"filter")||"",r=0|this.s+this.c*t;100===r&&(-1===n.indexOf("atrix(")&&-1===n.indexOf("radient(")&&-1===n.indexOf("oader(")?(i.removeAttribute("filter"),e=!U(this.data,"filter")):(i.filter=n.replace(w,""),e=!0)),e||(this.xn1&&(i.filter=n=n||"alpha(opacity="+r+")"),-1===n.indexOf("pacity")?0===r&&this.xn1||(i.filter=n+" alpha(opacity="+r+")"):i.filter=n.replace(x,"opacity="+r))};me("opacity,alpha,autoAlpha",{defaultValue:"1",parser:function(t,e,i,n,o,s){var a=parseFloat(U(t,"opacity",r,!1,"1")),l=t.style,u="autoAlpha"===i;return"string"==typeof e&&"="===e.charAt(1)&&(e=("-"===e.charAt(0)?-1:1)*parseFloat(e.substr(2))+a),u&&1===a&&"hidden"===U(t,"visibility",r)&&0!==e&&(a=0),X?o=new de(l,"opacity",a,e-a,o):(o=new de(l,"opacity",100*a,100*(e-a),o),o.xn1=u?1:0,l.zoom=1,o.type=2,o.b="alpha(opacity="+o.s+")",o.e="alpha(opacity="+(o.s+o.c)+")",o.data=t,o.plugin=s,o.setRatio=Ee),u&&(o=new de(l,"visibility",0,0,o,-1,null,!1,0,0!==a?"inherit":"hidden",0===e?"hidden":"inherit"),o.xs0="inherit",n._overwriteProps.push(o.n),n._overwriteProps.push(i)),o}});var Le=function(t,e){e&&(t.removeProperty?("ms"===e.substr(0,2)&&(e="M"+e.substr(1)),t.removeProperty(e.replace(k,"-$1").toLowerCase())):t.removeAttribute(e))},je=function(t){if(this.t._gsClassPT=this,1===t||0===t){this.t.setAttribute("class",0===t?this.b:this.e);for(var e=this.data,i=this.t.style;e;)e.v?i[e.p]=e.v:Le(i,e.p),e=e._next;1===t&&this.t._gsClassPT===this&&(this.t._gsClassPT=null)}else this.t.getAttribute("class")!==this.e&&this.t.setAttribute("class",this.e)};me("className",{parser:function(t,e,n,o,s,a,l){var u,c,h,d,f,p=t.getAttribute("class")||"",g=t.style.cssText;if(s=o._classNamePT=new de(t,n,0,0,s,2),s.setRatio=je,s.pr=-11,i=!0,s.b=p,c=G(t,r),h=t._gsClassPT){for(d={},f=h.data;f;)d[f.p]=1,f=f._next;h.setRatio(1)}return t._gsClassPT=s,s.e="="!==e.charAt(1)?e:p.replace(RegExp("\\s*\\b"+e.substr(2)+"\\b"),"")+("+"===e.charAt(0)?" "+e.substr(2):""),o._tween._duration&&(t.setAttribute("class",s.e),u=Z(t,c,G(t),l,d),t.setAttribute("class",p),s.data=u.firstMPT,t.style.cssText=g,s=s.xfirst=o.parse(t,u.difs,s,a)),s}});var Fe=function(t){if((1===t||0===t)&&this.data._totalTime===this.data._totalDuration&&"isFromStart"!==this.data.data){var e,i,n,r,o=this.t.style,s=a.transform.parse;if("all"===this.e)o.cssText="",r=!0;else for(e=this.e.split(" ").join("").split(","),n=e.length;--n>-1;)i=e[n],a[i]&&(a[i].parse===s?r=!0:i="transformOrigin"===i?we:a[i].p),Le(o,i);r&&(Le(o,xe),this.t._gsTransform&&delete this.t._gsTransform)}};for(me("clearProps",{parser:function(t,e,n,r,o){return o=new de(t,n,0,0,o,2),o.setRatio=Fe,o.e=e,o.pr=-10,o.data=r._tween,i=!0,o}}),l="bezier,throwProps,physicsProps,physics2D".split(","),pe=l.length;pe--;)_e(l[pe]);l=s.prototype,l._firstPT=null,l._onInitTween=function(t,e,a){if(!t.nodeType)return!1;this._target=t,this._tween=a,this._vars=e,u=e.autoRound,i=!1,n=e.suffixMap||s.suffixMap,r=Q(t,""),o=this._overwriteProps;var l,d,p,g,m,_,v,y,x,w=t.style;if(c&&""===w.zIndex&&(l=U(t,"zIndex",r),("auto"===l||""===l)&&this._addLazySet(w,"zIndex",0)),"string"==typeof e&&(g=w.cssText,l=G(t,r),w.cssText=g+";"+e,l=Z(t,l,G(t)).difs,!X&&b.test(e)&&(l.opacity=parseFloat(RegExp.$1)),e=l,w.cssText=g),this._firstPT=d=this.parse(t,e,null),this._transformType){for(x=3===this._transformType,xe?h&&(c=!0,""===w.zIndex&&(v=U(t,"zIndex",r),("auto"===v||""===v)&&this._addLazySet(w,"zIndex",0)),f&&this._addLazySet(w,"WebkitBackfaceVisibility",this._vars.WebkitBackfaceVisibility||(x?"visible":"hidden"))):w.zoom=1,p=d;p&&p._next;)p=p._next;y=new de(t,"transform",0,0,null,2),this._linkCSSP(y,null,p),y.setRatio=x&&Te?Ne:xe?Re:Me,y.data=this._transform||De(t,r,!0),o.pop()}if(i){for(;d;){for(_=d._next,p=g;p&&p.pr>d.pr;)p=p._next;(d._prev=p?p._prev:m)?d._prev._next=d:g=d,(d._next=p)?p._prev=d:m=d,d=_}this._firstPT=g}return!0},l.parse=function(t,e,i,o){var s,l,c,h,d,f,p,g,m,_,v=t.style;for(s in e)f=e[s],l=a[s],l?i=l.parse(t,f,s,this,i,o,e):(d=U(t,s,r)+"",m="string"==typeof f,"color"===s||"fill"===s||"stroke"===s||-1!==s.indexOf("Color")||m&&T.test(f)?(m||(f=ae(f),f=(f.length>3?"rgba(":"rgb(")+f.join(",")+")"),i=fe(v,s,d,f,!0,"transparent",i,0,o)):!m||-1===f.indexOf(" ")&&-1===f.indexOf(",")?(c=parseFloat(d),p=c||0===c?d.substr((c+"").length):"",(""===d||"auto"===d)&&("width"===s||"height"===s?(c=te(t,s,r),p="px"):"left"===s||"top"===s?(c=V(t,s,r),p="px"):(c="opacity"!==s?0:1,p="")),_=m&&"="===f.charAt(1),_?(h=parseInt(f.charAt(0)+"1",10),f=f.substr(2),h*=parseFloat(f),g=f.replace(y,"")):(h=parseFloat(f),g=m?f.substr((h+"").length)||"":""),""===g&&(g=s in n?n[s]:p),f=h||0===h?(_?h+c:h)+g:e[s],p!==g&&""!==g&&(h||0===h)&&c&&(c=$(t,s,c,p),"%"===g?(c/=$(t,s,100,"%")/100,e.strictUnits!==!0&&(d=c+"%")):"em"===g?c/=$(t,s,1,"em"):"px"!==g&&(h=$(t,s,h,g),g="px"),_&&(h||0===h)&&(f=h+c+g)),_&&(h+=c),!c&&0!==c||!h&&0!==h?void 0!==v[s]&&(f||"NaN"!=f+""&&null!=f)?(i=new de(v,s,h||c||0,0,i,-1,s,!1,0,d,f),i.xs0="none"!==f||"display"!==s&&-1===s.indexOf("Style")?f:d):H("invalid "+s+" tween value: "+e[s]):(i=new de(v,s,c,h-c,i,0,s,u!==!1&&("px"===g||"zIndex"===s),0,d,f),i.xs0=g)):i=fe(v,s,d,f,!0,null,i,0,o)),o&&i&&!i.plugin&&(i.plugin=o);return i},l.setRatio=function(t){var e,i,n,r=this._firstPT,o=1e-6;if(1!==t||this._tween._time!==this._tween._duration&&0!==this._tween._time)if(t||this._tween._time!==this._tween._duration&&0!==this._tween._time||this._tween._rawPrevTime===-1e-6)for(;r;){if(e=r.c*t+r.s,r.r?e=Math.round(e):o>e&&e>-o&&(e=0),r.type)if(1===r.type)if(n=r.l,2===n)r.t[r.p]=r.xs0+e+r.xs1+r.xn1+r.xs2;else if(3===n)r.t[r.p]=r.xs0+e+r.xs1+r.xn1+r.xs2+r.xn2+r.xs3;else if(4===n)r.t[r.p]=r.xs0+e+r.xs1+r.xn1+r.xs2+r.xn2+r.xs3+r.xn3+r.xs4;else if(5===n)r.t[r.p]=r.xs0+e+r.xs1+r.xn1+r.xs2+r.xn2+r.xs3+r.xn3+r.xs4+r.xn4+r.xs5;else{for(i=r.xs0+e+r.xs1,n=1;r.l>n;n++)i+=r["xn"+n]+r["xs"+(n+1)];r.t[r.p]=i}else-1===r.type?r.t[r.p]=r.xs0:r.setRatio&&r.setRatio(t);else r.t[r.p]=e+r.xs0;r=r._next}else for(;r;)2!==r.type?r.t[r.p]=r.b:r.setRatio(t),r=r._next;else for(;r;)2!==r.type?r.t[r.p]=r.e:r.setRatio(t),r=r._next},l._enableTransforms=function(t){this._transform=this._transform||De(this._target,r,!0),this._transformType=this._transform.svg&&ve||!t&&3!==this._transformType?2:3};var Ie=function(){this.t[this.p]=this.e,this.data._linkCSSP(this,this._next,null,!0)};l._addLazySet=function(t,e,i){var n=this._firstPT=new de(t,e,0,0,this._firstPT,2);n.e=i,n.setRatio=Ie,n.data=this},l._linkCSSP=function(t,e,i,n){return t&&(e&&(e._prev=t),t._next&&(t._next._prev=t._prev),t._prev?t._prev._next=t._next:this._firstPT===t&&(this._firstPT=t._next,n=!0),i?i._next=t:n||null!==this._firstPT||(this._firstPT=t),t._next=e,t._prev=i),t},l._kill=function(e){var i,n,r,o=e;if(e.autoAlpha||e.alpha){o={};for(n in e)o[n]=e[n];o.opacity=1,o.autoAlpha&&(o.visibility=1)}return e.className&&(i=this._classNamePT)&&(r=i.xfirst,r&&r._prev?this._linkCSSP(r._prev,i._next,r._prev._prev):r===this._firstPT&&(this._firstPT=i._next),i._next&&this._linkCSSP(i._next,i._next._next,r._prev),this._classNamePT=null),t.prototype._kill.call(this,o)};var ze=function(t,e,i){var n,r,o,s;if(t.slice)for(r=t.length;--r>-1;)ze(t[r],e,i);else for(n=t.childNodes,r=n.length;--r>-1;)o=n[r],s=o.type,o.style&&(e.push(G(o)),i&&i.push(o)),1!==s&&9!==s&&11!==s||!o.childNodes.length||ze(o,e,i)};return s.cascadeTo=function(t,i,n){var r,o,s,a=e.to(t,i,n),l=[a],u=[],c=[],h=[],d=e._internals.reservedProps;for(t=a._targets||a.target,ze(t,u,h),a.render(i,!0),ze(t,c),a.render(0,!0),a._enabled(!0),r=h.length;--r>-1;)if(o=Z(h[r],u[r],c[r]),o.firstMPT){o=o.difs;for(s in n)d[s]&&(o[s]=n[s]);l.push(e.to(h[r],i,o))}return l},t.activate([s]),s},!0)}),_gsScope._gsDefine&&_gsScope._gsQueue.pop()(),function(t){"use strict";var e=function(){return(_gsScope.GreenSockGlobals||_gsScope)[t]};"function"==typeof define&&define.amd?define(["TweenLite"],e):"undefined"!=typeof module&&module.exports&&(require("../TweenLite.js"),module.exports=e())}("CSSPlugin"),(window._gsQueue||(window._gsQueue=[])).push(function(){"use strict";window._gsDefine("utils.Draggable",["events.EventDispatcher","TweenLite"],function(t,e){var i,n,r,o,s,a={css:{}},l={css:{}},u={css:{}},c={css:{}},h={},d=document,f=d.documentElement||{},p=[],g=function(){return!1},m=180/Math.PI,_=999999999999999,v=Date.now||function(){return(new Date).getTime()},y=d.all&&!d.addEventListener,x=[],b={},w=0,T=/^(?:a|input|textarea|button|select)$/i,k=0,S=0,C=function(){for(var t=x.length;--t>-1;)x[t]()},P=function(t){x.push(t),1===x.length&&e.ticker.addEventListener("tick",C,this,!1,1)},A=function(t){for(var i=x.length;--i>-1;)x[i]===t&&x.splice(i,1);e.to(O,0,{overwrite:"all",delay:15,onComplete:O})},O=function(){x.length||e.ticker.removeEventListener("tick",C)},D=function(t,e){var i;for(i in e)void 0===t[i]&&(t[i]=e[i]);return t},M=function(){return null!=window.pageYOffset?window.pageYOffset:null!=d.scrollTop?d.scrollTop:f.scrollTop||d.body.scrollTop||0},N=function(){return null!=window.pageXOffset?window.pageXOffset:null!=d.scrollLeft?d.scrollLeft:f.scrollLeft||d.body.scrollLeft||0},R=function(t,e){return t=t||window.event,h.pageX=t.clientX+d.body.scrollLeft+f.scrollLeft,h.pageY=t.clientY+d.body.scrollTop+f.scrollTop,e&&(t.returnValue=!1),h},E=function(t){return t?("string"==typeof t&&(t=e.selector(t)),t.length&&t!==window&&t[0]&&t[0].style&&!t.nodeType&&(t=t[0]),t===window||t.nodeType&&t.style?t:null):t},L=function(t,e){var n,r,o,s=t.style;if(void 0===s[e]){for(o=["O","Moz","ms","Ms","Webkit"],r=5,n=e.charAt(0).toUpperCase()+e.substr(1);--r>-1&&void 0===s[o[r]+n];);if(0>r)return"";i=3===r?"ms":o[r],e=i+n}return e},j=function(t,e,i){var n=t.style;void 0===n[e]&&(e=L(t,e)),null==i?n.removeProperty?n.removeProperty(e.replace(/([A-Z])/g,"-$1").toLowerCase()):n.removeAttribute(e):void 0!==n[e]&&(n[e]=i)},F=d.defaultView?d.defaultView.getComputedStyle:g,I=/(?:Left|Right|Width)/i,z=/(?:\d|\-|\+|=|#|\.)*/g,X=function(t,e,i,n,r){if("px"===n||!n)return i;if("auto"===n||!i)return 0;var o,s=I.test(e),a=t,l=W.style,u=0>i;return u&&(i=-i),"%"===n&&-1!==e.indexOf("border")?o=i/100*(s?t.clientWidth:t.clientHeight):(l.cssText="border:0 solid red;position:"+H(t,"position",!0)+";line-height:0;","%"!==n&&a.appendChild?l[s?"borderLeftWidth":"borderTopWidth"]=i+n:(a=t.parentNode||d.body,l[s?"width":"height"]=i+n),a.appendChild(W),o=parseFloat(W[s?"offsetWidth":"offsetHeight"]),a.removeChild(W),0!==o||r||(o=X(t,e,i,n,!0))),u?-o:o},B=function(t,e){if("absolute"!==H(t,"position",!0))return 0;var i="left"===e?"Left":"Top",n=H(t,"margin"+i,!0);return t["offset"+i]-(X(t,e,parseFloat(n),n.replace(z,""))||0)},H=function(t,e,i){var n,r=(t._gsTransform||{})[e];return r||0===r?r:(t.style[e]?r=t.style[e]:(n=F(t))?(r=n.getPropertyValue(e.replace(/([A-Z])/g,"-$1").toLowerCase()),r=r||n.length?r:n[e]):t.currentStyle&&(r=t.currentStyle[e]),"auto"!==r||"top"!==e&&"left"!==e||(r=B(t,e)),i?r:parseFloat(r)||0)},Y=function(t,e,i){var n=t.vars,r=n[i],o=t._listeners[e];"function"==typeof r&&r.apply(n[i+"Scope"]||t,n[i+"Params"]||[t.pointerEvent]),o&&t.dispatchEvent(e)},q=function(t,e){var i,n,r,o=E(t);return o?oe(o,e):void 0!==t.left?(r=te(e),{left:t.left-r.x,top:t.top-r.y,width:t.width,height:t.height}):(n=t.min||t.minX||t.minRotation||0,i=t.min||t.minY||0,{left:n,top:i,width:(t.max||t.maxX||t.maxRotation||0)-n,height:(t.max||t.maxY||0)-i})},W=d.createElement("div"),Q=""!==L(W,"perspective"),U=L(W,"transformOrigin").replace(/^ms/g,"Ms").replace(/([A-Z])/g,"-$1").toLowerCase(),$=L(W,"transform"),V=$.replace(/^ms/g,"Ms").replace(/([A-Z])/g,"-$1").toLowerCase(),G={},Z={},J=function(){if(!y){var t="http://www.w3.org/2000/svg",e=d.createElementNS(t,"svg"),i=d.createElementNS(t,"rect");return i.setAttributeNS(null,"width","10"),i.setAttributeNS(null,"height","10"),e.appendChild(i),e}}(),K=function(t){if(!t.getBoundingClientRect||!t.parentNode)return{offsetTop:0,offsetLeft:0,offsetParent:f};for(var e,i,n,r=t,o=t.style.cssText;!r.offsetParent&&r.parentNode;)r=r.parentNode;return t.parentNode.insertBefore(J,t),t.parentNode.removeChild(t),J.style.cssText=o,J.style[$]="none",J.setAttribute("class",t.getAttribute("class")),e=J.getBoundingClientRect(),n=r.offsetParent,n?(n===d.body&&f&&(n=f),i=n.getBoundingClientRect()):i={top:-M(),left:-N()},J.parentNode.insertBefore(t,J),t.parentNode.removeChild(J),{offsetLeft:e.left-i.left,offsetTop:e.top-i.top,offsetParent:r.offsetParent||f}},te=function(t,e){if(e=e||{},!t||t===f||!t.parentNode)return{x:0,y:0};var i=F(t),n=U&&i?i.getPropertyValue(U):"50% 50%",r=n.split(" "),o=-1!==n.indexOf("left")?"0%":-1!==n.indexOf("right")?"100%":r[0],s=-1!==n.indexOf("top")?"0%":-1!==n.indexOf("bottom")?"100%":r[1];return("center"===s||null==s)&&(s="50%"),("center"===o||isNaN(parseFloat(o)))&&(o="50%"),e.x=-1!==o.indexOf("%")?t.offsetWidth*parseFloat(o)/100:parseFloat(o),e.y=-1!==s.indexOf("%")?t.offsetHeight*parseFloat(s)/100:parseFloat(s),e},ee=function(t,e,i){var n,r,s,a,l,u;return t!==window&&t&&t.parentNode?(n=F(t),r=n?n.getPropertyValue(V):t.currentStyle?t.currentStyle[$]:"1,0,0,1,0,0",r=(r+"").match(/(?:\-|\b)[\d\-\.e]+\b/g)||[1,0,0,1,0,0],r.length>6&&(r=[r[0],r[1],r[4],r[5],r[12],r[13]]),e&&(s=t.parentNode,u=void 0===t.offsetLeft&&"svg"===t.nodeName.toLowerCase()?K(t):t,a=u.offsetParent,l=s===f||s===d.body,r[4]=Number(r[4])+e.x+(u.offsetLeft||0)-i.x-(l?0:s.scrollLeft)+(a?parseInt(H(a,"borderLeftWidth"),10)||0:0),r[5]=Number(r[5])+e.y+(u.offsetTop||0)-i.y-(l?0:s.scrollTop)+(a?parseInt(H(a,"borderTopWidth"),10)||0:0),a||"fixed"!==H(t,"position",n)||(r[4]+=N(),r[5]+=M()),void 0===o&&d.body&&$&&(o=function(){var t,e,i=d.createElement("div"),n=d.createElement("div");return n.style.position="absolute",d.body.appendChild(i),i.appendChild(n),t=n.offsetParent,i.style[$]="rotate(1deg)",e=n.offsetParent===t,d.body.removeChild(i),e}()),!s||s.offsetParent!==a||o&&"100100"!==ee(s).join("")||(r[4]-=s.offsetLeft||0,r[5]-=s.offsetTop||0)),r):[1,0,0,1,0,0]},ie=function(t,e){for(var i,n,r,o,s,a,l,u,c=te(t,G),h=te(t.parentNode,Z),d=ee(t,c,h);(t=t.parentNode)&&t.parentNode&&t!==f;)c=h,h=te(t.parentNode,c===G?Z:G),l=ee(t,c,h),i=d[0],n=d[1],r=d[2],o=d[3],s=d[4],a=d[5],d[0]=i*l[0]+n*l[2],d[1]=i*l[1]+n*l[3],d[2]=r*l[0]+o*l[2],d[3]=r*l[1]+o*l[3],d[4]=s*l[0]+a*l[2]+l[4],d[5]=s*l[1]+a*l[3]+l[5];return e&&(i=d[0],n=d[1],r=d[2],o=d[3],s=d[4],a=d[5],u=i*o-n*r,d[0]=o/u,d[1]=-n/u,d[2]=-r/u,d[3]=i/u,d[4]=(r*a-o*s)/u,d[5]=-(i*a-n*s)/u),d},ne=function(t,e,i){var n=ie(t),r=e.x,o=e.y;return i=i===!0?e:i||{},i.x=r*n[0]+o*n[2]+n[4],i.y=r*n[1]+o*n[3]+n[5],i},re=function(t,e,i){var n=t.x*e[0]+t.y*e[2]+e[4],r=t.x*e[1]+t.y*e[3]+e[5];return t.x=n*i[0]+r*i[2]+i[4],t.y=n*i[1]+r*i[3]+i[5],t},oe=function(t,e){var i,n,r,o,s,a,l,u,c,h,p;return t===window?(o=M(),n=N(),r=n+(f.clientWidth||t.innerWidth||d.body.clientWidth||0),s=o+((t.innerHeight||0)-20<f.clientHeight?f.clientHeight:t.innerHeight||d.body.clientHeight||0)):(i=te(t),n=-i.x,r=n+t.offsetWidth,o=-i.y,s=o+t.offsetHeight),t===e?{left:n,top:o,width:r-n,height:s-o}:(a=ie(t),l=ie(e,!0),u=re({x:n,y:o},a,l),c=re({x:r,y:o},a,l),h=re({x:r,y:s},a,l),p=re({x:n,y:s},a,l),n=Math.min(u.x,c.x,h.x,p.x),o=Math.min(u.y,c.y,h.y,p.y),{left:n,top:o,width:Math.max(u.x,c.x,h.x,p.x)-n,height:Math.max(u.y,c.y,h.y,p.y)-o})},se=function(t){return t.length&&t[0]&&(t[0].nodeType&&t[0].style&&!t.nodeType||t[0].length&&t[0][0])?!0:!1},ae=function(t){var e,i,n,r=[],o=t.length;for(e=0;o>e;e++)if(i=t[e],se(i))for(n=i.length,n=0;n<i.length;n++)r.push(i[n]);else r.push(i);return r},le="ontouchstart"in f&&"orientation"in window,ue=function(t){for(var e=t.split(","),i=(void 0!==W.onpointerdown?"pointerdown,pointermove,pointerup,pointercancel":void 0!==W.onmspointerdown?"MSPointerDown,MSPointerMove,MSPointerUp,MSPointerCancel":t).split(","),n={},r=7;--r>-1;)n[e[r]]=i[r],n[i[r]]=e[r];return n}("touchstart,touchmove,touchend,touchcancel"),ce=function(t,e,i){t.addEventListener?t.addEventListener(ue[e]||e,i,!1):t.attachEvent&&t.attachEvent("on"+e,i)},he=function(t,e,i){t.removeEventListener?t.removeEventListener(ue[e]||e,i):t.detachEvent&&t.detachEvent("on"+e,i)},de=function(t){n=t.touches&&k<t.touches.length,he(t.target,"touchend",de)},fe=function(t){n=t.touches&&k<t.touches.length,ce(t.target,"touchend",de)},pe=function(t,e,i,n,r,o){var s,a,l,u={};if(e)if(1!==r&&e instanceof Array)for(u.end=s=[],l=e.length,a=0;l>a;a++)s[a]=e[a]*r;else u.end="function"==typeof e?function(i){return e.call(t,i)*r}:e;return(i||0===i)&&(u.max=i),(n||0===n)&&(u.min=n),o&&(u.velocity=0),u},ge=function(t){var e;return t&&t.getAttribute&&"BODY"!==t.nodeName?"true"===(e=t.getAttribute("data-clickable"))||"false"!==e&&(t.onclick||T.test(t.nodeName+""))?!0:ge(t.parentNode):!1},me=function(){var t,e=d.createElement("div"),i=d.createElement("div"),n=i.style,r=d.body||W;return n.display="inline-block",n.position="relative",e.style.cssText=i.innerHTML="width:90px; height:40px; padding:10px; overflow:auto; visibility: hidden",e.appendChild(i),r.appendChild(e),s=i.offsetHeight+18>e.scrollHeight,n.width="100%",$||(n.paddingRight="500px",t=e.scrollLeft=e.scrollWidth-e.clientWidth,n.left="-90px",t=t!==e.scrollLeft),r.removeChild(e),t}(),_e=function(t,i){t=E(t),i=i||{};var n,r,o,a,l,u,c=d.createElement("div"),h=c.style,f=t.firstChild,p=0,g=0,m=t.scrollTop,_=t.scrollLeft,v=t.scrollWidth,x=t.scrollHeight,b=0,w=0,T=0;Q&&i.force3D!==!1?(l="translate3d(",u="px,0px)"):$&&(l="translate(",u="px)"),this.scrollTop=function(t,e){return arguments.length?void this.top(-t,e):-this.top()},this.scrollLeft=function(t,e){return arguments.length?void this.left(-t,e):-this.left()},this.left=function(n,r){if(!arguments.length)return-(t.scrollLeft+g);var o=t.scrollLeft-_,s=g;return(o>2||-2>o)&&!r?(_=t.scrollLeft,e.killTweensOf(this,!0,{left:1,scrollLeft:1}),this.left(-_),void(i.onKill&&i.onKill())):(n=-n,0>n?(g=n-.5|0,n=0):n>w?(g=n-w|0,n=w):g=0,(g||s)&&(l?this._suspendTransforms||(h[$]=l+-g+"px,"+-p+u):h.left=-g+"px",me&&g+b>=0&&(h.paddingRight=g+b+"px")),t.scrollLeft=0|n,void(_=t.scrollLeft))},this.top=function(n,r){if(!arguments.length)return-(t.scrollTop+p);var o=t.scrollTop-m,s=p;return(o>2||-2>o)&&!r?(m=t.scrollTop,e.killTweensOf(this,!0,{top:1,scrollTop:1}),this.top(-m),void(i.onKill&&i.onKill())):(n=-n,0>n?(p=n-.5|0,n=0):n>T?(p=n-T|0,n=T):p=0,(p||s)&&(l?this._suspendTransforms||(h[$]=l+-g+"px,"+-p+u):h.top=-p+"px"),t.scrollTop=0|n,void(m=t.scrollTop))},this.maxScrollTop=function(){return T},this.maxScrollLeft=function(){return w},this.disable=function(){for(f=c.firstChild;f;)a=f.nextSibling,t.appendChild(f),f=a;t===c.parentNode&&t.removeChild(c)},this.enable=function(){if(f=t.firstChild,f!==c){for(;f;)a=f.nextSibling,c.appendChild(f),f=a;t.appendChild(c),this.calibrate()}},this.calibrate=function(e){var i,a,l=t.clientWidth===n;m=t.scrollTop,_=t.scrollLeft,(!l||t.clientHeight!==r||c.offsetHeight!==o||v!==t.scrollWidth||x!==t.scrollHeight||e)&&((p||g)&&(i=this.left(),a=this.top(),this.left(-t.scrollLeft),this.top(-t.scrollTop)),(!l||e)&&(h.display="block",h.width="auto",h.paddingRight="0px",b=Math.max(0,t.scrollWidth-t.clientWidth),b&&(b+=H(t,"paddingLeft")+(s?H(t,"paddingRight"):0))),h.display="inline-block",h.position="relative",h.overflow="visible",h.width="100%",h.paddingRight=b+"px",s&&(h.paddingBottom=H(t,"paddingBottom",!0)),y&&(h.zoom="1"),n=t.clientWidth,r=t.clientHeight,v=t.scrollWidth,x=t.scrollHeight,w=t.scrollWidth-n,T=t.scrollHeight-r,o=c.offsetHeight,(i||a)&&(this.left(i),this.top(a)))},this.content=c,this.element=t,this._suspendTransforms=!1,this.enable()},ve=function(i,o){t.call(this,i),i=E(i),r||(r=(window.GreenSockGlobals||window).com.greensock.plugins.ThrowPropsPlugin),this.vars=o=o||{},this.target=i,this.x=this.y=this.rotation=0,this.dragResistance=parseFloat(o.dragResistance)||0,this.edgeResistance=isNaN(o.edgeResistance)?1:parseFloat(o.edgeResistance)||0,this.lockAxis=o.lockAxis;var s,h,f,x,T,C,O,M,N,L,F,I,z,X,B,W,Q,U,$,V,G,Z,J,K,te,ee,re=(o.type||(y?"top,left":"x,y")).toLowerCase(),oe=-1!==re.indexOf("x")||-1!==re.indexOf("y"),se=-1!==re.indexOf("rotation"),ae=oe?"x":"left",de=oe?"y":"top",me=-1!==re.indexOf("x")||-1!==re.indexOf("left")||"scroll"===re,ye=-1!==re.indexOf("y")||-1!==re.indexOf("top")||"scroll"===re,xe=this,be=E(o.trigger||o.handle||i),we={},Te=0,ke=function(t){if(U){var n=xe.x,r=xe.y,o=1e-6;o>n&&n>-o&&(n=0),o>r&&r>-o&&(r=0),se?(X.rotation=xe.rotation=xe.x,e.set(i,z)):h?(ye&&h.top(r),me&&h.left(n)):oe?(ye&&(X.y=r),me&&(X.x=n),e.set(i,z)):(ye&&(i.style.top=r+"px"),me&&(i.style.left=n+"px")),M&&!t&&Y(xe,"drag","onDrag")}U=!1},Se=function(t,n){var r;oe?(i._gsTransform||e.set(i,{x:"+=0"}),xe.y=i._gsTransform.y,xe.x=i._gsTransform.x):se?(i._gsTransform||e.set(i,{x:"+=0"}),xe.x=xe.rotation=i._gsTransform.rotation):h?(xe.y=h.top(),xe.x=h.left()):(xe.y=parseInt(i.style.top,10)||0,xe.x=parseInt(i.style.left,10)||0),!V&&!G||n||(V&&(r=V(xe.x),r!==xe.x&&(xe.x=r,se&&(xe.rotation=r),U=!0)),G&&(r=G(xe.y),r!==xe.y&&(xe.y=r,U=!0)),U&&ke(!0)),o.onThrowUpdate&&!t&&o.onThrowUpdate.apply(o.onThrowUpdateScope||xe,o.onThrowUpdateParams||p)},Ce=function(){var t,e,n,r;O=!1,h?(h.calibrate(),xe.minX=L=-h.maxScrollLeft(),xe.minY=I=-h.maxScrollTop(),xe.maxX=N=xe.maxY=F=0,O=!0):o.bounds&&(t=q(o.bounds,i.parentNode),se?(xe.minX=L=t.left,xe.maxX=N=t.left+t.width,xe.minY=I=xe.maxY=F=0):void 0!==o.bounds.maxX||void 0!==o.bounds.maxY?(t=o.bounds,xe.minX=L=t.minX,xe.minY=I=t.minY,xe.maxX=N=t.maxX,xe.maxY=F=t.maxY):(e=q(i,i.parentNode),xe.minX=L=H(i,ae)+t.left-e.left,xe.minY=I=H(i,de)+t.top-e.top,xe.maxX=N=L+(t.width-e.width),xe.maxY=F=I+(t.height-e.height)),L>N&&(xe.minX=N,xe.maxX=N=L,L=xe.minX),I>F&&(xe.minY=F,xe.maxY=F=I,I=xe.minY),se&&(xe.minRotation=L,xe.maxRotation=N),O=!0),o.liveSnap&&(n=o.liveSnap===!0?o.snap||{}:o.liveSnap,r=n instanceof Array||"function"==typeof n,se?(V=Me(r?n:n.rotation,L,N,1),G=null):(me&&(V=Me(r?n:n.x||n.left||n.scrollLeft,L,N,h?-1:1)),ye&&(G=Me(r?n:n.y||n.top||n.scrollTop,I,F,h?-1:1))))},Pe=function(t,e){var n,s,a;t&&r?(t===!0&&(n=o.snap||{},s=n instanceof Array||"function"==typeof n,t={resistance:(o.throwResistance||o.resistance||1e3)/(se?10:1)},se?t.rotation=pe(xe,s?n:n.rotation,N,L,1,e):(me&&(t[ae]=pe(xe,s?n:n.x||n.left||n.scrollLeft,N,L,h?-1:1,e||xe.lockAxis&&"x"===K)),ye&&(t[de]=pe(xe,s?n:n.y||n.top||n.scrollTop,F,I,h?-1:1,e||xe.lockAxis&&"y"===K)))),xe.tween=a=r.to(h||i,{throwProps:t,ease:o.ease||Power3.easeOut,onComplete:o.onThrowComplete,onCompleteParams:o.onThrowCompleteParams,onCompleteScope:o.onThrowCompleteScope||xe,onUpdate:o.fastMode?o.onThrowUpdate:Se,onUpdateParams:o.fastMode?o.onThrowUpdateParams:null,onUpdateScope:o.onThrowUpdateScope||xe},isNaN(o.maxDuration)?2:o.maxDuration,isNaN(o.minDuration)?.5:o.minDuration,isNaN(o.overshootTolerance)?1-xe.edgeResistance+.2:o.overshootTolerance),o.fastMode||(h&&(h._suspendTransforms=!0),a.render(a.duration(),!0,!0),Se(!0,!0),xe.endX=xe.x,xe.endY=xe.y,se&&(xe.endRotation=xe.x),a.play(0),Se(!0,!0),h&&(h._suspendTransforms=!1))):O&&xe.applyBounds()},Ae=function(){te=ie(i.parentNode,!0),te[1]||te[2]||1!=te[0]||1!=te[3]||0!=te[4]||0!=te[5]||(te=null)},Oe=function(){var t=1-xe.edgeResistance;Ae(),h?(Ce(),C=h.top(),T=h.left()):(De()?(Se(!0,!0),Ce()):xe.applyBounds(),se?(Q=ne(i,{x:0,y:0}),Se(!0,!0),T=xe.x,C=xe.y=Math.atan2(Q.y-x,f-Q.x)*m):(C=H(i,de),T=H(i,ae))),O&&t&&(T>N?T=N+(T-N)/t:L>T&&(T=L-(L-T)/t),se||(C>F?C=F+(C-F)/t:I>C&&(C=I-(I-C)/t)))},De=function(){return xe.tween&&xe.tween.isActive()},Me=function(t,e,i,n){return"function"==typeof t?function(r){var o=xe.isPressed?1-xe.edgeResistance:1;return t.call(xe,r>i?i+(r-i)*o:e>r?e+(r-e)*o:r)*n}:t instanceof Array?function(n){for(var r,o,s=t.length,a=0,l=_;--s>-1;)r=t[s],o=r-n,0>o&&(o=-o),l>o&&r>=e&&i>=r&&(a=s,l=o);return t[a]}:isNaN(t)?function(t){return t}:function(){return t*n}},Ne=function(t){var n;if(s&&!xe.isPressed&&t){if(ee=De(),xe.pointerEvent=t,ue[t.type]?(J=-1!==t.type.indexOf("touch")?be:d,ce(J,"touchend",Ee),ce(J,"touchmove",Re),ce(J,"touchcancel",Ee),ce(d,"touchstart",fe)):(J=null,ce(d,"mousemove",Re),ce(d,"mouseup",Ee)),Z=ge(t.target)&&!o.dragClickables)return void ce(t.target,"change",Ee);y?t=R(t,!0):!h||t.touches&&t.touches.length>k+1||(t.preventDefault(),t.preventManipulation&&t.preventManipulation()),t.changedTouches?(t=B=t.changedTouches[0],W=t.identifier):t.pointerId?W=t.pointerId:B=null,k++,P(ke),xe.tween&&xe.tween.kill(),e.killTweensOf(h||i,!0,we),h&&e.killTweensOf(i,!0,{scrollTo:1}),x=xe.pointerY=t.pageY,f=xe.pointerX=t.pageX,Oe(),te&&(n=f*te[0]+x*te[2]+te[4],x=f*te[1]+x*te[3]+te[5],f=n),xe.tween=K=null,se||h||o.zIndexBoost===!1||(i.style.zIndex=ve.zIndex++),xe.isPressed=!0,M=!(!o.onDrag&&!xe._listeners.drag),se||j(be,"cursor",o.cursor||"move"),Y(xe,"press","onPress")}},Re=function(t){if(s&&!n&&xe.isPressed){y?t=R(t,!0):(t.preventDefault(),t.preventManipulation&&t.preventManipulation()),xe.pointerEvent=t;var e,i,r,o,a,l,u,c,h,d=t.changedTouches,p=1-xe.dragResistance,g=1-xe.edgeResistance;if(d){if(t=d[0],t!==B&&t.identifier!==W){for(a=d.length;--a>-1&&(t=d[a]).identifier!==W;);if(0>a)return}}else if(t.pointerId&&W&&t.pointerId!==W)return;u=xe.pointerX=t.pageX,c=xe.pointerY=t.pageY,se?(o=Math.atan2(Q.y-t.pageY,t.pageX-Q.x)*m,l=xe.y-o,xe.y=o,l>180?C-=360:-180>l&&(C+=360),r=T+(C-o)*p):(te&&(h=u*te[0]+c*te[2]+te[4],c=u*te[1]+c*te[3]+te[5],u=h),i=c-x,e=u-f,2>i&&i>-2&&(i=0),2>e&&e>-2&&(e=0),xe.lockAxis&&(e||i)&&("y"===K||!K&&Math.abs(e)>Math.abs(i)&&me?(i=0,K="y"):ye&&(e=0,K="x")),r=T+e*p,o=C+i*p),V||G?(V&&(r=V(r)),G&&(o=G(o))):O&&(r>N?r=N+(r-N)*g:L>r&&(r=L+(r-L)*g),se||(o>F?o=F+(o-F)*g:I>o&&(o=I+(o-I)*g))),(xe.x!==r||xe.y!==o&&!se)&&(xe.x=xe.endX=r,se?xe.endRotation=r:xe.y=xe.endY=o,U=!0,xe.isDragging||(xe.isDragging=!0,Y(xe,"dragstart","onDragStart")))}},Ee=function(t,e){if(!(!s||t&&W&&!e&&t.pointerId&&t.pointerId!==W)){xe.isPressed=!1;var i,n,r=t,a=xe.isDragging;if(J?(he(J,"touchend",Ee),he(J,"touchmove",Re),he(J,"touchcancel",Ee),he(d,"touchstart",fe)):(he(d,"mouseup",Ee),he(d,"mousemove",Re)),U=!1,Z)return t&&he(t.target,"change",Ee),Y(xe,"release","onRelease"),Y(xe,"click","onClick"),void(Z=!1);if(A(ke),se||j(be,"cursor",o.cursor||"move"),a&&(Te=S=v(),xe.isDragging=!1),k--,t){if(y&&(t=R(t,!1)),i=t.changedTouches,i&&(t=i[0],t!==B&&t.identifier!==W)){for(n=i.length;--n>-1&&(t=i[n]).identifier!==W;);if(0>n)return}xe.pointerEvent=r,xe.pointerX=t.pageX,xe.pointerY=t.pageY}return r&&!a?(ee&&o.snap&&Pe(o.throwProps),Y(xe,"release","onRelease"),Y(xe,"click","onClick")):(Pe(o.throwProps),y||!r||!o.dragClickables&&ge(r.target)||!a||(r.preventDefault(),r.preventManipulation&&r.preventManipulation()),Y(xe,"release","onRelease")),a&&Y(xe,"dragend","onDragEnd"),!0}},Le=function(t){(xe.isPressed||v()-Te<20)&&(t.preventDefault?t.preventDefault():t.returnValue=!1,t.preventManipulation&&t.preventManipulation())};$=ve.get(this.target),$&&$.kill(),this.startDrag=function(t){Ne(t),xe.isDragging||(xe.isDragging=!0,Y(xe,"dragstart","onDragStart"))},this.drag=Re,this.endDrag=function(t){Ee(t,!0)},this.timeSinceDrag=function(){return xe.isDragging?0:(v()-Te)/1e3},this.hitTest=function(t,e){return ve.hitTest(xe.target,t,e)},this.applyBounds=function(t){var e,i;return t&&o.bounds!==t?(o.bounds=t,xe.update(!0)):(Se(!0),Ce(),O&&(e=xe.x,i=xe.y,O&&(e>N?e=N:L>e&&(e=L),i>F?i=F:I>i&&(i=I)),(xe.x!==e||xe.y!==i)&&(xe.x=xe.endX=e,se?xe.endRotation=e:xe.y=xe.endY=i,U=!0,ke())),xe)},this.update=function(t){var e=xe.x,i=xe.y;return Ae(),t?xe.applyBounds():Se(!0),xe.isPressed&&(Math.abs(e-xe.x)>.01||Math.abs(i-xe.y)>.01&&!se)&&Oe(),xe},this.enable=function(t){var n;return"soft"!==t&&(ce(be,"mousedown",Ne),ce(be,"touchstart",Ne),ce(be,"click",Le),se||j(be,"cursor",o.cursor||"move"),be.ondragstart=be.onselectstart=g,j(be,"userSelect","none"),j(be,"touchCallout","none"),j(be,"touchAction","none")),s=!0,r&&"soft"!==t&&r.track(h||i,oe?"x,y":se?"rotation":"top,left"),h&&h.enable(),i._gsDragID=n="d"+w++,b[n]=this,h&&(h.element._gsDragID=n),e.set(i,{x:"+=0"}),this.update(),xe},this.disable=function(t){var e=this.isDragging;return se||j(be,"cursor",null),"soft"!==t&&(be.ondragstart=be.onselectstart=null,j(be,"userSelect","text"),j(be,"touchCallout","default"),j(be,"MSTouchAction","auto"),he(be,"mousedown",Ne),he(be,"touchstart",Ne),he(be,"click",Le),J&&(he(J,"touchcancel",Ee),he(J,"touchend",Ee),he(J,"touchmove",Re)),he(d,"mouseup",Ee),he(d,"mousemove",Re)),s=!1,r&&"soft"!==t&&r.untrack(h||i,oe?"x,y":se?"rotation":"top,left"),h&&h.disable(),A(ke),this.isDragging=this.isPressed=Z=!1,e&&Y(this,"dragend","onDragEnd"),xe},this.enabled=function(t,e){return arguments.length?t?this.enable(e):this.disable(e):s},this.kill=function(){return e.killTweensOf(h||i,!0,we),xe.disable(),delete b[i._gsDragID],xe},-1!==re.indexOf("scroll")&&(h=this.scrollProxy=new _e(i,D({onKill:function(){xe.isPressed&&Ee(null)}},o)),i.style.overflowY=ye&&!le?"auto":"hidden",i.style.overflowX=me&&!le?"auto":"hidden",i=h.content),o.force3D!==!1&&e.set(i,{force3D:!0}),se?we.rotation=1:(me&&(we[ae]=1),ye&&(we[de]=1)),se?(z=c,X=z.css,z.overwrite=!1):oe&&(z=me&&ye?a:me?l:u,X=z.css,z.overwrite=!1),this.enable()},ye=ve.prototype=new t;ye.constructor=ve,ye.pointerX=ye.pointerY=0,ye.isDragging=ye.isPressed=!1,ve.version="0.10.4",ve.zIndex=1e3,ce(d,"touchcancel",function(){}),ce(d,"contextmenu",function(){var t;for(t in b)b[t].isPressed&&b[t].endDrag()}),ve.create=function(t,i){"string"==typeof t&&(t=e.selector(t));for(var n=se(t)?ae(t):[t],r=n.length;--r>-1;)n[r]=new ve(n[r],i);return n},ve.get=function(t){return b[(E(t)||{})._gsDragID]},ve.timeSinceDrag=function(){return(v()-S)/1e3};var xe=function(t,e){var i=t.pageX!==e?{left:t.pageX,top:t.pageY,right:t.pageX+1,bottom:t.pageY+1}:t.nodeType||t.left===e||t.top===e?E(t).getBoundingClientRect():t;return i.right===e&&i.width!==e?(i.right=i.left+i.width,i.bottom=i.top+i.height):i.width===e&&(i={width:i.right-i.left,height:i.bottom-i.top,right:i.right,left:i.left,bottom:i.bottom,top:i.top}),i};return ve.parseRect=function(t,e){var i=t.pageX!==e?{left:t.pageX,top:t.pageY,right:t.pageX+1,bottom:t.pageY+1}:t.nodeType||t.left===e||t.top===e?E(t).getBoundingClientRect():t;return i.right===e&&i.width!==e?(i.right=i.left+i.width,i.bottom=i.top+i.height):i.width===e&&(i={width:i.right-i.left,height:i.bottom-i.top,right:i.right,left:i.left,bottom:i.bottom,top:i.top}),i},ve.hitTest=function(t,e,i){if(t===e)return!1;var n,r,o,s=xe(t),a=xe(e),l=a.left>s.right||a.right<s.left||a.top>s.bottom||a.bottom<s.top;return l||!i?!l:(o=-1!==(i+"").indexOf("%"),i=parseFloat(i)||0,n={left:Math.max(s.left,a.left),top:Math.max(s.top,a.top)},n.width=Math.min(s.right,a.right)-n.left,n.height=Math.min(s.bottom,a.bottom)-n.top,n.width<0||n.height<0?!1:o?(i*=.01,r=n.width*n.height,r>=s.width*s.height*i||r>=a.width*a.height*i):n.width>i&&n.height>i)},ve},!0)}),window._gsDefine&&window._gsQueue.pop()(),function(){function t(i,n){if(i=i?i:"",n=n||{},i instanceof t)return i;if(!(this instanceof t))return new t(i,n);var r=e(i);this._originalInput=i,this._r=r.r,this._g=r.g,this._b=r.b,this._a=r.a,this._roundA=z(100*this._a)/100,this._format=n.format||r.format,this._gradientType=n.gradientType,this._r<1&&(this._r=z(this._r)),this._g<1&&(this._g=z(this._g)),this._b<1&&(this._b=z(this._b)),this._ok=r.ok,this._tc_id=F++}function e(t){var e={r:0,g:0,b:0},n=1,o=!1,a=!1;return"string"==typeof t&&(t=R(t)),"object"==typeof t&&(t.hasOwnProperty("r")&&t.hasOwnProperty("g")&&t.hasOwnProperty("b")?(e=i(t.r,t.g,t.b),o=!0,a="%"===String(t.r).substr(-1)?"prgb":"rgb"):t.hasOwnProperty("h")&&t.hasOwnProperty("s")&&t.hasOwnProperty("v")?(t.s=D(t.s),t.v=D(t.v),e=s(t.h,t.s,t.v),o=!0,a="hsv"):t.hasOwnProperty("h")&&t.hasOwnProperty("s")&&t.hasOwnProperty("l")&&(t.s=D(t.s),t.l=D(t.l),e=r(t.h,t.s,t.l),o=!0,a="hsl"),t.hasOwnProperty("a")&&(n=t.a)),n=T(n),{ok:o,format:t.format||a,r:X(255,B(e.r,0)),g:X(255,B(e.g,0)),b:X(255,B(e.b,0)),a:n}
}function i(t,e,i){return{r:255*k(t,255),g:255*k(e,255),b:255*k(i,255)}}function n(t,e,i){t=k(t,255),e=k(e,255),i=k(i,255);var n,r,o=B(t,e,i),s=X(t,e,i),a=(o+s)/2;if(o==s)n=r=0;else{var l=o-s;switch(r=a>.5?l/(2-o-s):l/(o+s),o){case t:n=(e-i)/l+(i>e?6:0);break;case e:n=(i-t)/l+2;break;case i:n=(t-e)/l+4}n/=6}return{h:n,s:r,l:a}}function r(t,e,i){function n(t,e,i){return 0>i&&(i+=1),i>1&&(i-=1),1/6>i?t+6*(e-t)*i:.5>i?e:2/3>i?t+(e-t)*(2/3-i)*6:t}var r,o,s;if(t=k(t,360),e=k(e,100),i=k(i,100),0===e)r=o=s=i;else{var a=.5>i?i*(1+e):i+e-i*e,l=2*i-a;r=n(l,a,t+1/3),o=n(l,a,t),s=n(l,a,t-1/3)}return{r:255*r,g:255*o,b:255*s}}function o(t,e,i){t=k(t,255),e=k(e,255),i=k(i,255);var n,r,o=B(t,e,i),s=X(t,e,i),a=o,l=o-s;if(r=0===o?0:l/o,o==s)n=0;else{switch(o){case t:n=(e-i)/l+(i>e?6:0);break;case e:n=(i-t)/l+2;break;case i:n=(t-e)/l+4}n/=6}return{h:n,s:r,v:a}}function s(t,e,i){t=6*k(t,360),e=k(e,100),i=k(i,100);var n=I.floor(t),r=t-n,o=i*(1-e),s=i*(1-r*e),a=i*(1-(1-r)*e),l=n%6,u=[i,s,o,o,a,i][l],c=[a,i,i,s,o,o][l],h=[o,o,a,i,i,s][l];return{r:255*u,g:255*c,b:255*h}}function a(t,e,i,n){var r=[O(z(t).toString(16)),O(z(e).toString(16)),O(z(i).toString(16))];return n&&r[0].charAt(0)==r[0].charAt(1)&&r[1].charAt(0)==r[1].charAt(1)&&r[2].charAt(0)==r[2].charAt(1)?r[0].charAt(0)+r[1].charAt(0)+r[2].charAt(0):r.join("")}function l(t,e,i,n){var r=[O(M(n)),O(z(t).toString(16)),O(z(e).toString(16)),O(z(i).toString(16))];return r.join("")}function u(e,i){i=0===i?0:i||10;var n=t(e).toHsl();return n.s-=i/100,n.s=S(n.s),t(n)}function c(e,i){i=0===i?0:i||10;var n=t(e).toHsl();return n.s+=i/100,n.s=S(n.s),t(n)}function h(e){return t(e).desaturate(100)}function d(e,i){i=0===i?0:i||10;var n=t(e).toHsl();return n.l+=i/100,n.l=S(n.l),t(n)}function f(e,i){i=0===i?0:i||10;var n=t(e).toRgb();return n.r=B(0,X(255,n.r-z(255*-(i/100)))),n.g=B(0,X(255,n.g-z(255*-(i/100)))),n.b=B(0,X(255,n.b-z(255*-(i/100)))),t(n)}function p(e,i){i=0===i?0:i||10;var n=t(e).toHsl();return n.l-=i/100,n.l=S(n.l),t(n)}function g(e,i){var n=t(e).toHsl(),r=(z(n.h)+i)%360;return n.h=0>r?360+r:r,t(n)}function m(e){var i=t(e).toHsl();return i.h=(i.h+180)%360,t(i)}function _(e){var i=t(e).toHsl(),n=i.h;return[t(e),t({h:(n+120)%360,s:i.s,l:i.l}),t({h:(n+240)%360,s:i.s,l:i.l})]}function v(e){var i=t(e).toHsl(),n=i.h;return[t(e),t({h:(n+90)%360,s:i.s,l:i.l}),t({h:(n+180)%360,s:i.s,l:i.l}),t({h:(n+270)%360,s:i.s,l:i.l})]}function y(e){var i=t(e).toHsl(),n=i.h;return[t(e),t({h:(n+72)%360,s:i.s,l:i.l}),t({h:(n+216)%360,s:i.s,l:i.l})]}function x(e,i,n){i=i||6,n=n||30;var r=t(e).toHsl(),o=360/n,s=[t(e)];for(r.h=(r.h-(o*i>>1)+720)%360;--i;)r.h=(r.h+o)%360,s.push(t(r));return s}function b(e,i){i=i||6;for(var n=t(e).toHsv(),r=n.h,o=n.s,s=n.v,a=[],l=1/i;i--;)a.push(t({h:r,s:o,v:s})),s=(s+l)%1;return a}function w(t){var e={};for(var i in t)t.hasOwnProperty(i)&&(e[t[i]]=i);return e}function T(t){return t=parseFloat(t),(isNaN(t)||0>t||t>1)&&(t=1),t}function k(t,e){P(t)&&(t="100%");var i=A(t);return t=X(e,B(0,parseFloat(t))),i&&(t=parseInt(t*e,10)/100),I.abs(t-e)<1e-6?1:t%e/parseFloat(e)}function S(t){return X(1,B(0,t))}function C(t){return parseInt(t,16)}function P(t){return"string"==typeof t&&-1!=t.indexOf(".")&&1===parseFloat(t)}function A(t){return"string"==typeof t&&-1!=t.indexOf("%")}function O(t){return 1==t.length?"0"+t:""+t}function D(t){return 1>=t&&(t=100*t+"%"),t}function M(t){return Math.round(255*parseFloat(t)).toString(16)}function N(t){return C(t)/255}function R(t){t=t.replace(L,"").replace(j,"").toLowerCase();var e=!1;if(Y[t])t=Y[t],e=!0;else if("transparent"==t)return{r:0,g:0,b:0,a:0,format:"name"};var i;return(i=W.rgb.exec(t))?{r:i[1],g:i[2],b:i[3]}:(i=W.rgba.exec(t))?{r:i[1],g:i[2],b:i[3],a:i[4]}:(i=W.hsl.exec(t))?{h:i[1],s:i[2],l:i[3]}:(i=W.hsla.exec(t))?{h:i[1],s:i[2],l:i[3],a:i[4]}:(i=W.hsv.exec(t))?{h:i[1],s:i[2],v:i[3]}:(i=W.hsva.exec(t))?{h:i[1],s:i[2],v:i[3],a:i[4]}:(i=W.hex8.exec(t))?{a:N(i[1]),r:C(i[2]),g:C(i[3]),b:C(i[4]),format:e?"name":"hex8"}:(i=W.hex6.exec(t))?{r:C(i[1]),g:C(i[2]),b:C(i[3]),format:e?"name":"hex"}:(i=W.hex3.exec(t))?{r:C(i[1]+""+i[1]),g:C(i[2]+""+i[2]),b:C(i[3]+""+i[3]),format:e?"name":"hex"}:!1}function E(t){var e,i;return t=t||{level:"AA",size:"small"},e=(t.level||"AA").toUpperCase(),i=(t.size||"small").toLowerCase(),"AA"!==e&&"AAA"!==e&&(e="AA"),"small"!==i&&"large"!==i&&(i="small"),{level:e,size:i}}var L=/^[\s,#]+/,j=/\s+$/,F=0,I=Math,z=I.round,X=I.min,B=I.max,H=I.random;t.prototype={isDark:function(){return this.getBrightness()<128},isLight:function(){return!this.isDark()},isValid:function(){return this._ok},getOriginalInput:function(){return this._originalInput},getFormat:function(){return this._format},getAlpha:function(){return this._a},getBrightness:function(){var t=this.toRgb();return(299*t.r+587*t.g+114*t.b)/1e3},getLuminance:function(){var t,e,i,n,r,o,s=this.toRgb();return t=s.r/255,e=s.g/255,i=s.b/255,n=.03928>=t?t/12.92:Math.pow((t+.055)/1.055,2.4),r=.03928>=e?e/12.92:Math.pow((e+.055)/1.055,2.4),o=.03928>=i?i/12.92:Math.pow((i+.055)/1.055,2.4),.2126*n+.7152*r+.0722*o},setAlpha:function(t){return this._a=T(t),this._roundA=z(100*this._a)/100,this},toHsv:function(){var t=o(this._r,this._g,this._b);return{h:360*t.h,s:t.s,v:t.v,a:this._a}},toHsvString:function(){var t=o(this._r,this._g,this._b),e=z(360*t.h),i=z(100*t.s),n=z(100*t.v);return 1==this._a?"hsv("+e+", "+i+"%, "+n+"%)":"hsva("+e+", "+i+"%, "+n+"%, "+this._roundA+")"},toHsl:function(){var t=n(this._r,this._g,this._b);return{h:360*t.h,s:t.s,l:t.l,a:this._a}},toHslString:function(){var t=n(this._r,this._g,this._b),e=z(360*t.h),i=z(100*t.s),r=z(100*t.l);return 1==this._a?"hsl("+e+", "+i+"%, "+r+"%)":"hsla("+e+", "+i+"%, "+r+"%, "+this._roundA+")"},toHex:function(t){return a(this._r,this._g,this._b,t)},toHexString:function(t){return"#"+this.toHex(t)},toHex8:function(){return l(this._r,this._g,this._b,this._a)},toHex8String:function(){return"#"+this.toHex8()},toRgb:function(){return{r:z(this._r),g:z(this._g),b:z(this._b),a:this._a}},toRgbString:function(){return 1==this._a?"rgb("+z(this._r)+", "+z(this._g)+", "+z(this._b)+")":"rgba("+z(this._r)+", "+z(this._g)+", "+z(this._b)+", "+this._roundA+")"},toPercentageRgb:function(){return{r:z(100*k(this._r,255))+"%",g:z(100*k(this._g,255))+"%",b:z(100*k(this._b,255))+"%",a:this._a}},toPercentageRgbString:function(){return 1==this._a?"rgb("+z(100*k(this._r,255))+"%, "+z(100*k(this._g,255))+"%, "+z(100*k(this._b,255))+"%)":"rgba("+z(100*k(this._r,255))+"%, "+z(100*k(this._g,255))+"%, "+z(100*k(this._b,255))+"%, "+this._roundA+")"},toName:function(){return 0===this._a?"transparent":this._a<1?!1:q[a(this._r,this._g,this._b,!0)]||!1},toFilter:function(e){var i="#"+l(this._r,this._g,this._b,this._a),n=i,r=this._gradientType?"GradientType = 1, ":"";if(e){var o=t(e);n=o.toHex8String()}return"progid:DXImageTransform.Microsoft.gradient("+r+"startColorstr="+i+",endColorstr="+n+")"},toString:function(t){var e=!!t;t=t||this._format;var i=!1,n=this._a<1&&this._a>=0,r=!e&&n&&("hex"===t||"hex6"===t||"hex3"===t||"name"===t);return r?"name"===t&&0===this._a?this.toName():this.toRgbString():("rgb"===t&&(i=this.toRgbString()),"prgb"===t&&(i=this.toPercentageRgbString()),("hex"===t||"hex6"===t)&&(i=this.toHexString()),"hex3"===t&&(i=this.toHexString(!0)),"hex8"===t&&(i=this.toHex8String()),"name"===t&&(i=this.toName()),"hsl"===t&&(i=this.toHslString()),"hsv"===t&&(i=this.toHsvString()),i||this.toHexString())},_applyModification:function(t,e){var i=t.apply(null,[this].concat([].slice.call(e)));return this._r=i._r,this._g=i._g,this._b=i._b,this.setAlpha(i._a),this},lighten:function(){return this._applyModification(d,arguments)},brighten:function(){return this._applyModification(f,arguments)},darken:function(){return this._applyModification(p,arguments)},desaturate:function(){return this._applyModification(u,arguments)},saturate:function(){return this._applyModification(c,arguments)},greyscale:function(){return this._applyModification(h,arguments)},spin:function(){return this._applyModification(g,arguments)},_applyCombination:function(t,e){return t.apply(null,[this].concat([].slice.call(e)))},analogous:function(){return this._applyCombination(x,arguments)},complement:function(){return this._applyCombination(m,arguments)},monochromatic:function(){return this._applyCombination(b,arguments)},splitcomplement:function(){return this._applyCombination(y,arguments)},triad:function(){return this._applyCombination(_,arguments)},tetrad:function(){return this._applyCombination(v,arguments)}},t.fromRatio=function(e,i){if("object"==typeof e){var n={};for(var r in e)e.hasOwnProperty(r)&&(n[r]="a"===r?e[r]:D(e[r]));e=n}return t(e,i)},t.equals=function(e,i){return e&&i?t(e).toRgbString()==t(i).toRgbString():!1},t.random=function(){return t.fromRatio({r:H(),g:H(),b:H()})},t.mix=function(e,i,n){n=0===n?0:n||50;var r,o=t(e).toRgb(),s=t(i).toRgb(),a=n/100,l=2*a-1,u=s.a-o.a;r=l*u==-1?l:(l+u)/(1+l*u),r=(r+1)/2;var c=1-r,h={r:s.r*r+o.r*c,g:s.g*r+o.g*c,b:s.b*r+o.b*c,a:s.a*a+o.a*(1-a)};return t(h)},t.readability=function(e,i){var n=t(e),r=t(i);return(Math.max(n.getLuminance(),r.getLuminance())+.05)/(Math.min(n.getLuminance(),r.getLuminance())+.05)},t.isReadable=function(e,i,n){var r,o,s=t.readability(e,i);switch(o=!1,r=E(n),r.level+r.size){case"AAsmall":case"AAAlarge":o=s>=4.5;break;case"AAlarge":o=s>=3;break;case"AAAsmall":o=s>=7}return o},t.mostReadable=function(e,i,n){var r,o,s,a,l=null,u=0;n=n||{},o=n.includeFallbackColors,s=n.level,a=n.size;for(var c=0;c<i.length;c++)r=t.readability(e,i[c]),r>u&&(u=r,l=t(i[c]));return t.isReadable(e,l,{level:s,size:a})||!o?l:(n.includeFallbackColors=!1,t.mostReadable(e,["#fff","#000"],n))};var Y=t.names={aliceblue:"f0f8ff",antiquewhite:"faebd7",aqua:"0ff",aquamarine:"7fffd4",azure:"f0ffff",beige:"f5f5dc",bisque:"ffe4c4",black:"000",blanchedalmond:"ffebcd",blue:"00f",blueviolet:"8a2be2",brown:"a52a2a",burlywood:"deb887",burntsienna:"ea7e5d",cadetblue:"5f9ea0",chartreuse:"7fff00",chocolate:"d2691e",coral:"ff7f50",cornflowerblue:"6495ed",cornsilk:"fff8dc",crimson:"dc143c",cyan:"0ff",darkblue:"00008b",darkcyan:"008b8b",darkgoldenrod:"b8860b",darkgray:"a9a9a9",darkgreen:"006400",darkgrey:"a9a9a9",darkkhaki:"bdb76b",darkmagenta:"8b008b",darkolivegreen:"556b2f",darkorange:"ff8c00",darkorchid:"9932cc",darkred:"8b0000",darksalmon:"e9967a",darkseagreen:"8fbc8f",darkslateblue:"483d8b",darkslategray:"2f4f4f",darkslategrey:"2f4f4f",darkturquoise:"00ced1",darkviolet:"9400d3",deeppink:"ff1493",deepskyblue:"00bfff",dimgray:"696969",dimgrey:"696969",dodgerblue:"1e90ff",firebrick:"b22222",floralwhite:"fffaf0",forestgreen:"228b22",fuchsia:"f0f",gainsboro:"dcdcdc",ghostwhite:"f8f8ff",gold:"ffd700",goldenrod:"daa520",gray:"808080",green:"008000",greenyellow:"adff2f",grey:"808080",honeydew:"f0fff0",hotpink:"ff69b4",indianred:"cd5c5c",indigo:"4b0082",ivory:"fffff0",khaki:"f0e68c",lavender:"e6e6fa",lavenderblush:"fff0f5",lawngreen:"7cfc00",lemonchiffon:"fffacd",lightblue:"add8e6",lightcoral:"f08080",lightcyan:"e0ffff",lightgoldenrodyellow:"fafad2",lightgray:"d3d3d3",lightgreen:"90ee90",lightgrey:"d3d3d3",lightpink:"ffb6c1",lightsalmon:"ffa07a",lightseagreen:"20b2aa",lightskyblue:"87cefa",lightslategray:"789",lightslategrey:"789",lightsteelblue:"b0c4de",lightyellow:"ffffe0",lime:"0f0",limegreen:"32cd32",linen:"faf0e6",magenta:"f0f",maroon:"800000",mediumaquamarine:"66cdaa",mediumblue:"0000cd",mediumorchid:"ba55d3",mediumpurple:"9370db",mediumseagreen:"3cb371",mediumslateblue:"7b68ee",mediumspringgreen:"00fa9a",mediumturquoise:"48d1cc",mediumvioletred:"c71585",midnightblue:"191970",mintcream:"f5fffa",mistyrose:"ffe4e1",moccasin:"ffe4b5",navajowhite:"ffdead",navy:"000080",oldlace:"fdf5e6",olive:"808000",olivedrab:"6b8e23",orange:"ffa500",orangered:"ff4500",orchid:"da70d6",palegoldenrod:"eee8aa",palegreen:"98fb98",paleturquoise:"afeeee",palevioletred:"db7093",papayawhip:"ffefd5",peachpuff:"ffdab9",peru:"cd853f",pink:"ffc0cb",plum:"dda0dd",powderblue:"b0e0e6",purple:"800080",rebeccapurple:"663399",red:"f00",rosybrown:"bc8f8f",royalblue:"4169e1",saddlebrown:"8b4513",salmon:"fa8072",sandybrown:"f4a460",seagreen:"2e8b57",seashell:"fff5ee",sienna:"a0522d",silver:"c0c0c0",skyblue:"87ceeb",slateblue:"6a5acd",slategray:"708090",slategrey:"708090",snow:"fffafa",springgreen:"00ff7f",steelblue:"4682b4",tan:"d2b48c",teal:"008080",thistle:"d8bfd8",tomato:"ff6347",turquoise:"40e0d0",violet:"ee82ee",wheat:"f5deb3",white:"fff",whitesmoke:"f5f5f5",yellow:"ff0",yellowgreen:"9acd32"},q=t.hexNames=w(Y),W=function(){var t="[-\\+]?\\d+%?",e="[-\\+]?\\d*\\.\\d+%?",i="(?:"+e+")|(?:"+t+")",n="[\\s|\\(]+("+i+")[,|\\s]+("+i+")[,|\\s]+("+i+")\\s*\\)?",r="[\\s|\\(]+("+i+")[,|\\s]+("+i+")[,|\\s]+("+i+")[,|\\s]+("+i+")\\s*\\)?";return{rgb:new RegExp("rgb"+n),rgba:new RegExp("rgba"+r),hsl:new RegExp("hsl"+n),hsla:new RegExp("hsla"+r),hsv:new RegExp("hsv"+n),hsva:new RegExp("hsva"+r),hex3:/^([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,hex6:/^([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,hex8:/^([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/}}();"undefined"!=typeof module&&module.exports?module.exports=t:"function"==typeof define&&define.amd?define(function(){return t}):window.tinycolor=t}(),function(t){t.fn.clonePosition=function(e){return this.css(t(e).getStyles())},t.fn.getStyles=function(){var t=this;return{margin:t.css("margin"),"margin-left":t.css("margin-left"),"margin-right":t.css("margin-right"),"margin-top":t.css("margin-top"),"margin-bottom":t.css("margin-bottom"),left:t.css("left"),right:t.css("right"),top:t.css("top"),bottom:t.css("bottom"),position:t.css("position"),display:t.css("display"),"text-align":t.css("text-align"),width:t.css("width"),height:t.css("height"),color:t.css("color"),"background-color":t.css("background-color")}},t.fn.parseStyles=function(){function t(t,e){return t=parseInt(t,10),isNaN(t)?e:t}var e=this;return{margin:t(e.css("margin"),0),"margin-left":t(e.css("margin-left"),0),"margin-right":t(e.css("margin-right"),0),"margin-top":t(e.css("margin-top"),0),"margin-bottom":t(e.css("margin-bottom"),0),padding:t(e.css("padding"),0),"padding-left":t(e.css("padding-left"),0),"padding-right":t(e.css("padding-right"),0),"padding-top":t(e.css("padding-top"),0),"padding-bottom":t(e.css("padding-bottom"),0),left:t(e.css("left"),0),right:t(e.css("right"),0),top:t(e.css("top"),0),bottom:t(e.css("bottom"),0),position:t(e.css("position"),0),display:t(e.css("display"),0),"text-align":t(e.css("text-align"),0),width:t(e.css("width"),0),height:t(e.css("height"),0),color:e.css("color"),"background-color":e.css("background-color")}},t.fn.clearPosition=function(){return this.css({margin:"0","margin-left":"0","margin-right":"0","margin-top":"0","margin-bottom":"0",left:"0",right:"0",top:"0",bottom:"0",position:"absolute",display:"block","text-align":"left"})},t.fn.active=function(){this.removeClass("inactive").addClass("active")},t.fn.inactive=function(){this.removeClass("active").addClass("inactive")},t.fn.complete=function(){this.removeClass("inactive").removeClass("active").addClass("complete")},t.fn.getNodes=function(){var t=[];for(i in this)isNaN(parseInt(i,10))||t.push(this[i]);return 1===t.length&&(t=t[0]),t}}(jQuery);var dS=function(){var t={s001:{solutions:[1,0,2]}};return{get:function(e){return t[e]}}}();window.onkeydown=function(t){var e={};switch("MacIntel"===navigator.platform&&(e.num9=105,e.num6=102,e.num4=100),"Win32"===navigator.platform&&(e.num9=33,e.num6=39,e.num4=37),t.keyCode){case e.num9:_root.controller.nextModule();break;case e.num6:_root.controller.nextScene();break;case e.num4:_root.controller.previousScene()}},TimelineMax.prototype.stick=function(t,e,i){var n=(TweenMax,e.label?e.label:"untitled"),r="piggy"===i||">"===i||void 0===i?!0:!1;r?(this.add(t),this.add(n)):(this.add(t,i),this.add(n,i))},TimelineMax.prototype.jig=function(t,e,i,n,r){var o,s,a,l=!1,u={},c=jQuery(t).getStyles();for(o in jigLibrary.defaults)void 0!==i?u[o]=void 0===i[o]?jigLibrary.defaults[o]:i[o]:u=jigLibrary.defaults;if(a=jigLibrary[e](t,u,c,l),this.stick(a,u,n),void 0!==r)for(o=0;r>o;o++)s=void 0!==n&&n>0?n+u.speed*o:u.speed*o,l=o===r-1?!0:!1,a=jigLibrary[e](t,u,c,l),this.stick(a,u,s);return this},TweenMax.fadeIn=function(t,e,i){var e=void 0!==e?e:1;this.fromTo(getNodes(t),e,{opacity:0,immediateRender:!1},{opacity:1,onComplete:i})},TweenMax.fadeOut=function(t,e,i){var e=void 0!==e?e:1;this.fromTo(getNodes(t),e,{opacity:1,immediateRender:!1},{opacity:0,onComplete:i})};var jigLibrary={author:"Adam Goodnight",version:"0.6",defaults:{from:0,to:0,speed:1,strength:1,extra:!0,origin:"50% 50%",rotationY:0,density:.8,scale:1,bol:!0,ease:"Sine.easeOut"}};jigLibrary.pulse=function(t,e){var i=new TimelineMax;return i.set(t,{transformOrigin:e.origin}),i.to(t,e.speed/3,{opacity:1}),i.to(t,e.speed/3,{opacity:.4}),i.to(t,e.speed/3,{opacity:1}),i},jigLibrary.squish=function(t,e){var i=new TimelineMax,n=1-.1*e.strength;return i.add(TweenMax.to(t,e.speed/2,{scaleY:n,transformOrigin:"100% 100%"})),i.add(TweenMax.to(t,e.speed/2,{scaleY:1,transformOrigin:"100% 100%"})),i},jigLibrary.fly=function(t,e,i){{var n=new TimelineMax;parseInt(i.width,10)/e.strength/3*-1,parseInt(i.height,10)/e.strength*2}return n.from(t,e.speed,{transformOrigin:"0% 50%",scale:1.2,opacity:0,rotationY:-90,rotationX:-40}),n},jigLibrary.hop=function(t,e,i){var n=new TimelineMax;e.bol=e.bol?!1:!0,unNull(e.rotation)&&(e.rotation="30"),e.origin="50% 100%";for(var r=0,o=0,s=e.bol?e.rotation+"deg":-1*e.rotation+"deg",a=[e.speed/6,e.speed/3,e.speed/4],l=e.strength*parseInt(i.height,10);r<a.length-1;)o+=a[r],r++;return a[3]=e.speed-o,n.set(t,{transformOrigin:e.origin}),n.to(t,a[0],{scaleX:1*e.scale+(1-e.density),scaleY:1*e.scale-(1-e.density),ease:"Expo.easeIn"}),n.to(t,a[1],{scaleX:1*e.scale-(.9-e.density),scaleY:1*e.scale+(.9-e.density),y:"-="+l,ease:"Linear",rotation:"+="+s}),n.to(t,a[2],{scaleX:.8*e.scale+(1-e.density),scaleY:1*e.scale-(1-e.density),y:"+="+l,ease:"Sine.easeIn",rotation:0}),n.to(t,a[3],{scaleX:e.scale,scaleY:e.scale,ease:"Sine.easeOut"}),n},jigLibrary.wiggle=function(t,e,i,n){var r=new TimelineMax;return r.to(t,e.speed/2,{rotation:10*e.strength,ease:"Sine.easeInOut",transformOrigin:e.origin}),n?r.to(t,e.speed/2,{rotation:0,ease:"Sine.easeInOut"}):r.to(t,e.speed/2,{rotation:-10*e.strength,ease:"Sine.easeInOut"}),r},jigLibrary.chromaZoom=function(t,e,i){var n=new TimelineMax,r=["#FF0000","#FF7F00","#FFFF00","#00FF00","#0000FF","#6600FF","#8B00FF"];return n.fromTo(t,e.speed/2,{opacity:1,scale:0,rotationY:e.rotation,color:tinycolor(arrayRandomize(r)[0]).brighten(50).toHexString(),ease:e.ease},{opacity:1,scale:1,rotationY:0,color:tinycolor(arrayRandomize(r)[0]).brighten(50).toHexString(),ease:e.ease}),n.to(t,e.speed/4,{color:tinycolor(i.color).brighten(100).toString()}),n.to(t,e.speed/4,{color:i.color}),n},jigLibrary.spin=function(t,e){var i=new TimelineMax;return i.to(t,e.speed,{rotationZ:"+=360",ease:e.ease}),i},jigLibrary.slideIn=function(t,e){var i=new TimelineMax;return i.from(t,e.speed,{opacity:0,x:-50*e.strength,ease:e.ease}),i};
//# sourceMappingURL=data:application/json;base64,